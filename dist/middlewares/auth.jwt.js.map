{"version":3,"sources":["../../src/middlewares/auth.jwt.js"],"names":["verifyToken","req","res","next","token","headers","status","json","message","decoded","jwt","verify","config","SECRET","userId","id","User","findById","password","user","isAdmin","Role","find","_id","$in","roles","i","length","name","isChiefSales","isChiefAdv","isChiefTunning"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport config from '../config/config'\r\nimport User from '../models/User'\r\nimport Role from '../models/Role'\r\n\r\nexport const verifyToken = async(req, res, next) => {\r\n    try {\r\n        const token = req.headers[\"x-access-token\"];\r\n\r\n        if (!token) return res.status(409).json({ message: 'Falta Token' });\r\n\r\n        const decoded = jwt.verify(token, config.SECRET);\r\n\r\n        req.userId = decoded.id;\r\n\r\n        const user = await User.findById(req.userId, { password: 0 });\r\n\r\n        if (!user) return res.status(404).json({ message: 'No se encontrÃ³ usuario' });\r\n\r\n        next();\r\n\r\n    } catch (error) {\r\n        return res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const isAdmin = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Administrador') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Administrador' });\r\n}\r\n\r\nexport const isChiefSales = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-Ventas') {\r\n            next()\r\n            return;\r\n        }\r\n\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-Ventas' });\r\n}\r\n\r\nexport const isChiefAdv = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-ADV') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-ADV' });\r\n}\r\n\r\nexport const isChiefTunning = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-Tunning') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-Tunning' });\r\n}"],"file":"auth.jwt.js"}