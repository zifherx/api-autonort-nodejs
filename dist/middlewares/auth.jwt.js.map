{"version":3,"sources":["../../src/middlewares/auth.jwt.js"],"names":["verifyToken","req","res","next","token","headers","status","json","message","decoded","jwt","verify","config","SECRET","locals","jwtPayload","userId","id","User","findById","password","user","console","log","isAdmin","Role","find","_id","$in","roles","i","length","name","isChiefSales","isChiefAdv","isChiefAdvorAdmin","isChiefAdvorAdminorAsistantADV","isChiefAdvorAdminorAsistantADVorChiefPlaneamiento","isChiefTunning","isInmatriculadosAsistantyAdministrador","isInmatriculadosAsistant","isCSAsistant","isConexosAsistantOrAdmin","isConexosOrADV","isConexosOrADVOrVendedorOrEPDPOrAdmin","isTasadororChiefEPDP","isTasador","isChiefEPDP","isChiefEPDPorAdmin","isVendedor","isExecutiveMaf","isJefeDigitalJefePlaneamientoAdmin"],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport config from '../config/config'\r\nimport User from '../models/User'\r\nimport Role from '../models/Role'\r\n\r\nexport const verifyToken = async(req, res, next) => {\r\n\r\n    try {\r\n        const token = req.headers[\"x-access-token\"];\r\n\r\n        if (!token) return res.status(409).json({ message: 'Falta Token' });\r\n\r\n        const decoded = jwt.verify(token, config.SECRET);\r\n        res.locals.jwtPayload = decoded;\r\n        req.userId = decoded.id;\r\n\r\n        const user = await User.findById(req.userId, { password: 0 });\r\n\r\n        if (!user) return res.status(404).json({ message: 'No se encontró usuario' });\r\n\r\n        next();\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n        if (err.message == \"jwt expired\") {\r\n            return res.status(401).json({ message: 'Token ha expirado' });\r\n        } else {\r\n            console.log(err.message)\r\n            return res.status(403).json({ message: 'No Autorizado' });\r\n        }\r\n    }\r\n}\r\n\r\nexport const isAdmin = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Administrador') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Administrador' });\r\n}\r\n\r\nexport const isChiefSales = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-Ventas') {\r\n            next()\r\n            return;\r\n        }\r\n\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-Ventas' });\r\n}\r\n\r\nexport const isChiefAdv = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-ADV') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-ADV' });\r\n}\r\n\r\nexport const isChiefAdvorAdmin = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-ADV' || roles[i].name === 'Administrador') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-ADV' });\r\n}\r\n\r\nexport const isChiefAdvorAdminorAsistantADV = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-ADV' || roles[i].name === 'Administrador' || roles[i].name === 'Asistente-ADV') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-ADV' });\r\n}\r\n\r\nexport const isChiefAdvorAdminorAsistantADVorChiefPlaneamiento = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-ADV' || roles[i].name === 'Administrador' || roles[i].name === 'Asistente-ADV' || roles[i].name === 'Jefe-Planeamiento-Comercial') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-ADV' });\r\n}\r\n\r\nexport const isChiefTunning = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-Tunning') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso de Jefe-Tunning' });\r\n}\r\n\r\nexport const isInmatriculadosAsistantyAdministrador = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Inmatriculaciones' || roles[i].name === 'Administrador') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Asistente-Inmatriculacion o Administrador' });\r\n}\r\n\r\nexport const isInmatriculadosAsistant = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Inmatriculaciones') {\r\n            next()\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Asistente-Inmatriculacion' });\r\n}\r\n\r\nexport const isCSAsistant = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-CS') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Asistente-CS' })\r\n}\r\n\r\nexport const isConexosAsistantOrAdmin = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Conexos' || roles[i].name === 'Administrador') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Asistente-Conexos' })\r\n}\r\n\r\nexport const isConexosOrADV = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Conexos' || roles[i].name === 'Jefe-ADV') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Asistente-Conexos || Jefe ADV' })\r\n}\r\n\r\nexport const isConexosOrADVOrVendedorOrEPDPOrAdmin = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Asistente-Conexos' || roles[i].name === 'Jefe-ADV' || roles[i].name === 'Asistente-ADV' || roles[i].name === 'Vendedor' || roles[i].name === 'Administrador' || roles[i].name === 'Jefe-EPDP' || roles[i].name === 'Tasador') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Asistente-Conexos || Jefe-ADV || Vendedor || Administrador || Jefe-EPDP || Tasador' })\r\n}\r\n\r\nexport const isTasadororChiefEPDP = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Tasador' || roles[i].name === 'Jefe-EPDP') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Tasador ó Jefe-EPDP' })\r\n}\r\n\r\nexport const isTasador = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Tasador') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Tasador' })\r\n}\r\n\r\nexport const isChiefEPDP = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Jefe-Tasación') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Jefe-EPDP' })\r\n}\r\n\r\nexport const isChiefEPDPorAdmin = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Administrador' || roles[i].name === 'Jefe-EPDP') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Jefe-EPDP' })\r\n}\r\n\r\nexport const isVendedor = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Vendedor') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Vendedor' })\r\n}\r\n\r\nexport const isExecutiveMaf = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } })\r\n\r\n    for (let i = 0; i < roles.length; i++) {\r\n        if (roles[i].name === 'Ejecutivo-MAF') {\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n    return res.status(403).json({ message: 'Requiere permiso del Ejecutivo MAF' })\r\n}\r\n\r\nexport const isJefeDigitalJefePlaneamientoAdmin = async(req, res, next) => {\r\n    const user = await User.findById(req.userId);\r\n    const roles = await Role.find({ _id: { $in: user.roles } });\r\n\r\n    for(let i = 0; i < roles.length; i++){\r\n        if(roles[i].name === 'Jefe-Digital' || roles[i].name === 'Jefe-Planeamiento-Comercial' || roles[i].name === 'Administrador'){\r\n            next();\r\n            return;\r\n        }\r\n    }\r\n\r\n    return res.status(403).json({message: 'Requiere permiso de Jefe-Digital || Jefe-Planeamiento-Comercial || Administrador'})\r\n}"],"file":"auth.jwt.js"}