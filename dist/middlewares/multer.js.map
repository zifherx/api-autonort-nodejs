{"version":3,"sources":["../../src/middlewares/multer.js"],"names":["accessClient","region","process","env","AWS_REGION","accessKeyId","AWS_ACCESS_KEY","secretAccessKey","AWS_SECRET_KEY","s3","S3","storage","bucket","AWS_BUCKET","metadata","req","file","cb","fieldName","fieldname","key","name","originalname","split","campo","path","extname","upload"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,UADH;AAEjBC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG,cAFR;AAGjBC,EAAAA,eAAe,EAAEL,OAAO,CAACC,GAAR,CAAYK;AAHZ,CAArB;AAMA,IAAMC,EAAE,GAAG,IAAIC,UAAJ,CAAOV,YAAP,CAAX;AAEA,IAAMW,OAAO,GAAG,sBAAS;AACrBF,EAAAA,EAAE,EAAEA,EADiB;AAErBG,EAAAA,MAAM,EAAEV,OAAO,CAACC,GAAR,CAAYU,UAFC;AAGrBC,EAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AACzBA,IAAAA,EAAE,CAAC,IAAD,EAAO;AAAEC,MAAAA,SAAS,EAAEF,IAAI,CAACG;AAAlB,KAAP,CAAF;AACH,GALoB;AAMrBC,EAAAA,GAAG,EAAE,aAACL,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AACpB,QAAII,IAAI,GAAGL,IAAI,CAACM,YAAL,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAX;;AACA,QAAIC,KAAK,GAAGH,IAAI,GAAGI,cAAKC,OAAL,CAAaV,IAAI,CAACM,YAAlB,CAAnB,CAFoB,CAGpB;;;AACAL,IAAAA,EAAE,CAAC,IAAD,EAAOO,KAAP,CAAF;AACH;AAXoB,CAAT,CAAhB;AAcA,IAAMG,MAAM,GAAG,qBAAO;AAAEhB,EAAAA,OAAO,EAAPA;AAAF,CAAP,CAAf;eAEegB,M","sourcesContent":["import multer from 'multer'\r\nimport S3 from 'aws-sdk/clients/s3'\r\nimport path from 'path'\r\nimport multerS3 from 'multer-s3'\r\nimport { nanoid } from 'nanoid'\r\nimport 'dotenv/config'\r\n\r\nconst accessClient = {\r\n    region: process.env.AWS_REGION,\r\n    accessKeyId: process.env.AWS_ACCESS_KEY,\r\n    secretAccessKey: process.env.AWS_SECRET_KEY\r\n}\r\n\r\nconst s3 = new S3(accessClient);\r\n\r\nconst storage = multerS3({\r\n    s3: s3,\r\n    bucket: process.env.AWS_BUCKET,\r\n    metadata: (req, file, cb) => {\r\n        cb(null, { fieldName: file.fieldname });\r\n    },\r\n    key: (req, file, cb) => {\r\n        let name = file.originalname.split('.')[0];\r\n        let campo = name + path.extname(file.originalname);\r\n        // let campo = nanoid() + path.extname(file.originalname);\r\n        cb(null, campo);\r\n    }\r\n});\r\n\r\nconst upload = multer({ storage });\r\n\r\nexport default upload;"],"file":"multer.js"}