{"version":3,"file":"chasis.controller.js","names":["getAll","req","res","Chasis","find","sort","name","query","length","json","total","all","status","message","console","log","getChasisById","chasisId","params","findById","one","getChasisByActivo","estado","total_active","all_active","createChasis","body","obj","save","updateChasis","findByIdAndUpdate","deleteChasis","findByIdAndDelete"],"sources":["../../src/controllers/chasis.controller.js"],"sourcesContent":["import Chasis from '../models/Chasis'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await Chasis.find().sort({ name: 'asc' })\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Chasis' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getChasisById = async(req, res) => {\r\n    const { chasisId } = req.params\r\n    try {\r\n        const query = await Chasis.findById(chasisId)\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Chasis' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getChasisByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Chasis.find({ estado: true }).sort({ name: 'asc' })\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Chasis Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createChasis = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const obj = new Chasis({ name, estado })\r\n        const query = await obj.save()\r\n        if (query) {\r\n            res.json({ message: 'Chasis creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateChasis = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { chasisId } = req.params;\r\n    try {\r\n        const query = await Chasis.findByIdAndUpdate(chasisId, { name, estado })\r\n        if (query) {\r\n            res.json({ message: 'Chasis actualizado con éxito' })\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Chasis a actualizar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteChasis = async(req, res) => {\r\n    const { chasisId } = req.params;\r\n    try {\r\n        const query = await Chasis.findByIdAndDelete(chasisId)\r\n        if (query) {\r\n            res.json({ message: 'Chasis eliminado con éxito' })\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Chasis a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"mappings":"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"}