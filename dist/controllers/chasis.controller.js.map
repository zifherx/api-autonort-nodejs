{"version":3,"sources":["../../src/controllers/chasis.controller.js"],"names":["getAll","req","res","Chasis","find","sort","name","query","length","json","total","chasis","status","message","console","log","getChasisById","chasisId","params","findById","getChasisByActivo","createChasis","body","obj","save","updateChasis","findByIdAndUpdate","deleteChasis","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Chasis from '../models/Chasis'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await Chasis.find().sort({ name: 'asc' })\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, chasis: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Chasis' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getChasisById = async(req, res) => {\r\n    const { chasisId } = req.params\r\n    try {\r\n        const query = await Chasis.findById(chasisId)\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Chasis' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getChasisByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Chasis.find({ status: true }).sort({ name: 'asc' })\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Chasis Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createChasis = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const obj = new Chasis({ name, status })\r\n        const query = await obj.save()\r\n        if (query) {\r\n            res.json({ message: 'Chasis creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateChasis = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { chasisId } = req.params;\r\n    try {\r\n        const query = await Chasis.findByIdAndUpdate(chasisId, { name, status })\r\n        if (query) {\r\n            res.json({ message: 'Chasis actualizado con éxito' })\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Chasis a actualizar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteChasis = async(req, res) => {\r\n    const { chasisId } = req.params;\r\n    try {\r\n        const query = await Chasis.findByIdAndDelete(chasisId)\r\n        if (query) {\r\n            res.json({ message: 'Chasis eliminado con éxito' })\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Chasis a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"chasis.controller.js"}