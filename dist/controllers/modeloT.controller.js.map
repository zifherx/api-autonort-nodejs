{"version":3,"file":"modeloT.controller.js","names":["modeloController","getAll","req","res","ModeloTasaciones","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getModeloById","modeloId","params","findById","one","getModeloActivos","estado","total_active","all_active","getModelosByMarca","marca","body","MarcaTasaciones","findOne","marcaFound","_id","getModelosByName","total_model","all_model","createModelo","avatar","file","obj","undefined","location","save","updateModeloById","findByIdAndUpdate","deleteModeloById","findByIdAndDelete"],"sources":["../../src/controllers/modeloT.controller.js"],"sourcesContent":["import MarcaTasaciones from \"../models/MarcaTasaciones\";\r\nimport ModeloTasaciones from \"../models/ModeloTasaciones\";\r\n\r\nconst modeloController = {};\r\n\r\nmodeloController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await ModeloTasaciones.find()\r\n            .sort({ name: 'asc' })\r\n            .populate({ path: 'marca', select: 'name avatar' })\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Modelos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmodeloController.getModeloById = async(req, res) => {\r\n    const { modeloId } = req.params;\r\n    try {\r\n        const query = await ModeloTasaciones.findById(modeloId)\r\n            .populate({ path: 'marca', select: 'name avatar' })\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe la Modelo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmodeloController.getModeloActivos = async(req, res) => {\r\n    try {\r\n        const query = await ModeloTasaciones.find({ estado: true })\r\n            .sort({ name: 'asc' })\r\n            .populate({ path: 'marca', select: 'name avatar' });\r\n        if (query.length > 0) {\r\n            res.json({ total_active: query.length, all_active: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Modelos activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nmodeloController.getModelosByMarca = async(req, res) => {\r\n    const { marca } = req.body;\r\n    try {\r\n        const marcaFound = await MarcaTasaciones.findOne({ name: marca });\r\n        if (!marcaFound) return res.status(404).json({ message: `La marca ${marca} no existe`});\r\n\r\n        const query = await ModeloTasaciones.find({ marca: marcaFound._id })\r\n        .sort({ name: 1 })\r\n        .populate({ path: 'marca', select: 'name avatar' });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `La marca ${marca} no tiene modelos creados` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nmodeloController.getModelosByName = async(req, res) => {\r\n    const { name } = req.body;\r\n    try {\r\n        const query = await ModeloTasaciones.findOne({ name: name })\r\n        .sort({ name: 'asc' })\r\n        .populate({ path: 'marca', select: 'name avatar' });\r\n\r\n        if (query) {\r\n            res.json({ total_model: query.length, all_model: query });\r\n        } else {\r\n            return res.status(404).json({ message: `El modelo ${name} no existe` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nmodeloController.createModelo = async(req, res) => {\r\n    const { marca, name, estado } = req.body;\r\n    const avatar = req.file;\r\n    try {\r\n        let obj = null;\r\n        if (avatar == undefined || avatar == null) {\r\n            obj = new ModeloTasaciones({\r\n                name,\r\n                estado\r\n            });\r\n        } else {\r\n            obj = new ModeloTasaciones({\r\n                avatar: avatar.location,\r\n                name,\r\n                estado\r\n            });\r\n\r\n        }\r\n\r\n        const marcaFound = await MarcaTasaciones.findOne({ name: marca });\r\n        if (!marcaFound) return res.status(404).json({ message: `No existe la Marca ${marca}` })\r\n        obj.marca = marcaFound._id;\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Modelo creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nmodeloController.updateModeloById = async(req, res) => {\r\n    const { marca, name, estado } = req.body;\r\n    const { modeloId } = req.params;\r\n    const avatar = req.file;\r\n    try {\r\n        const marcaFound = await MarcaTasaciones.findOne({ name: marca });\r\n\r\n        let query = null;\r\n        if (avatar == undefined || avatar == null) {\r\n            query = await ModeloTasaciones.findByIdAndUpdate(modeloId, {\r\n                marca: marcaFound._id,\r\n                name,\r\n                estado\r\n            });\r\n        } else {\r\n            query = await ModeloTasaciones.findByIdAndUpdate(modeloId, {\r\n                marca: marcaFound._id,\r\n                avatar: avatar.location,\r\n                name,\r\n                estado\r\n            });\r\n        }\r\n\r\n        if (query) {\r\n            res.json({ message: 'Modelo actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Modelo a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmodeloController.deleteModeloById = async(req, res) => {\r\n    const { modeloId } = req.params;\r\n    try {\r\n        const query = await ModeloTasaciones.findByIdAndDelete(modeloId);\r\n        if (query) {\r\n            res.json({ message: 'Modelo eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Modelo a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default modeloController;"],"mappings":"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"}