{"version":3,"file":"colores.controller.js","names":["getColors","req","res","Colores","find","sort","name","query","length","send","total","all","status","json","message","console","log","getColorByActivo","estado","total_active","all_active","getColorById","colorId","params","findById","one","createColor","body","newColor","save","updateColor","findByIdAndUpdate","deleteColor","findByIdAndDelete"],"sources":["../../src/controllers/colores.controller.js"],"sourcesContent":["import Colores from \"../models/Colores\";\r\n\r\nexport const getColors = async(req, res) => {\r\n    try {\r\n        const query = await Colores.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.send({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Colores' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getColorByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Colores.find({ estado: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen colores Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getColorById = async(req, res) => {\r\n    const { colorId } = req.params;\r\n    try {\r\n        const query = await Colores.findById(colorId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Color' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createColor = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const newColor = new Colores({ name, estado });\r\n        const query = await newColor.save();\r\n        if (query) {\r\n            res.json({ message: 'Color creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateColor = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { colorId } = req.params;\r\n    try {\r\n        const query = await Colores.findByIdAndUpdate(colorId, { name, estado });\r\n        if (query) {\r\n            res.json({ message: 'Color actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Color' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteColor = async(req, res) => {\r\n    const { colorId } = req.params;\r\n    try {\r\n        const query = await Colores.findByIdAndDelete(colorId);\r\n        if (query) {\r\n            res.json({ message: 'Color eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Color' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"mappings":"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"}