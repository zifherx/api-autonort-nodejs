{"version":3,"file":"colores.controller.js","names":["getAll","req","res","Colores","find","sort","name","query","length","send","total","all","status","json","message","console","log","getAllByActive","estado","getOneById","itemId","params","findById","one","createOne","body","codigo_toyota","hex","newObj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/colores.controller.js"],"sourcesContent":["import Colores from \"../models/Colores\";\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await Colores.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.send({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen colores' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAllByActive = async(req, res) => {\r\n    try {\r\n        const query = await Colores.find({ estado: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen colores activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getOneById = async(req, res) => {\r\n    const { itemId } = req.params;\r\n    try {\r\n        const query = await Colores.findById(itemId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe color' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createOne = async(req, res) => {\r\n    const { name, codigo_toyota, hex,  estado } = req.body;\r\n    try {\r\n        const newObj = new Colores({ name, codigo_toyota, hex, estado });\r\n        const query = await newObj.save();\r\n        if (query) {\r\n            res.json({ message: 'Color creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateOneById = async(req, res) => {\r\n    const { name, codigo_toyota, hex,  estado } = req.body;\r\n    const { itemId } = req.params;\r\n    try {\r\n        const query = await Colores.findByIdAndUpdate(itemId, { name, codigo_toyota, hex,  estado });\r\n        if (query) {\r\n            res.json({ message: 'Color actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: `No existe color ${itemId}` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteOneById = async(req, res) => {\r\n    const { itemId } = req.params;\r\n    try {\r\n        const query = await Colores.findByIdAndDelete(itemId);\r\n        if (query) {\r\n            res.json({ message: 'Color eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: `No existe color ${itemId}` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"mappings":"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"}