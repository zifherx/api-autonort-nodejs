{"version":3,"sources":["../../src/controllers/colores.controller.js"],"names":["getColors","req","res","Colores","find","colores","length","send","status","json","message","getColorByActivo","getColorById","colorId","params","findById","color","createColor","body","name","newColor","save","colorCreado","updateColor","findByIdAndUpdate","new","deleteColor","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Colores from \"../models/Colores\";\r\n\r\nexport const getColors = async(req, res) => {\r\n    try {\r\n        const colores = await Colores.find();\r\n        if (colores.length > 0) {\r\n            res.send(colores);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const getColorByActivo = async(req, res) => {\r\n    try {\r\n        const colores = await Colores.find({ status: \"Activo\" });\r\n        if (colores.length > 0) {\r\n            res.send(colores);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        //console.log(err);\r\n        res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const getColorById = async(req, res) => {\r\n    const { colorId } = req.params;\r\n    try {\r\n        const color = await Colores.findById(colorId);\r\n        if (color) {\r\n            res.send(color);\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Color' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const createColor = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const newColor = new Colores({ name, status });\r\n\r\n        const colorCreado = await newColor.save();\r\n\r\n        if (colorCreado) {\r\n            res.json({ message: 'Color creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const updateColor = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { colorId } = req.params;\r\n    try {\r\n\r\n        const updateColor = await Colores.findByIdAndUpdate(colorId, { name, status }, { new: true });\r\n\r\n        if (updateColor) {\r\n            res.json({ message: 'Color actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Color' });\r\n        }\r\n    } catch (err) {\r\n        //console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const deleteColor = async(req, res) => {\r\n    const { colorId } = req.params;\r\n    try {\r\n\r\n        const deleteColor = await Colores.findByIdAndDelete(colorId);\r\n\r\n        if (deleteColor) {\r\n            res.json({ message: 'Color eliminado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Color' });\r\n        }\r\n    } catch (err) {\r\n        //console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}"],"file":"colores.controller.js"}