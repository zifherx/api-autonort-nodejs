{"version":3,"sources":["../../src/controllers/campaign.controller.js"],"names":["createCampaign","req","res","body","name","descripcion","forCar","type","bono","startDate","endDate","status","empleado","newCampaign","Campaign","User","find","username","$in","foundEmployee","map","em","_id","save","campaignSaved","json","message","console","log","getAll","sort","campaign","length","getOne","campaignId","params","findById","campaigns","getCampaniasActivas","fechaDesde","Date","getFullYear","getMonth","toISOString","substr","fechaHasta","$gte","$lt","activos","getCampaignByVehicle","modelo","campana","getCampaignByGrupo","updateCampaignById","findByIdAndUpdate","updateCampaign","deleteCampaignById","findByIdAndDelete","deletedCampaign"],"mappings":"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","sourcesContent":["import Campaign from '../models/Campaign'\r\nimport Vehicle from '../models/Vehicle'\r\nimport User from '../models/User'\r\n\r\nexport const createCampaign = async(req, res) => {\r\n    const { name, descripcion, forCar, type, bono, startDate, endDate, status, empleado } = req.body;\r\n\r\n    try {\r\n\r\n        const newCampaign = new Campaign({ name, descripcion, forCar, type, bono, startDate, endDate, status });\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newCampaign.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //const foundAuto = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n        //newCampaign.auto = foundAuto.map(auto => auto._id);\r\n\r\n        const campaignSaved = await newCampaign.save();\r\n\r\n        if (campaignSaved) {\r\n            res.json({ message: 'Campaña creada con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const campaign = await Campaign.find().sort({ name: 'asc' });\r\n        if (campaign.length > 0) {\r\n            res.json(campaign);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Campañas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getOne = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    try {\r\n        const campaigns = await Campaign.findById(campaignId);\r\n        if (campaigns) {\r\n            res.json(campaigns);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe la campaña' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCampaniasActivas = async(req, res) => {\r\n    const fechaDesde = new Date(new Date().getFullYear(), new Date().getMonth(),1).toISOString().substr(0,10);\r\n    const fechaHasta = new Date(new Date().getFullYear(), new Date().getMonth() + 1,0).toISOString().substr(0,10);\r\n    console.log(\"fecha-Desde: \",fechaDesde);\r\n    console.log(\"fecha-Hasta: \",fechaHasta);\r\n    try {\r\n        const activos = await Campaign.find({ status: 'Activo',startDate: {$gte: fechaDesde}, endDate: { $lt: fechaHasta} }).sort({ name: 'asc' });\r\n        if (activos.length > 0) {\r\n            res.json(activos);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Campañas Activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCampaignByVehicle = async(req, res) => {\r\n    const { modelo } = req.body;\r\n    try {\r\n        const campana = await Campaign.find({ forCar: modelo }).sort({ name: 'asc' });\r\n        //console.log(campana)\r\n        if (campana.length > 0) {\r\n            res.json(campana);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen campañas para ese vehículo' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCampaignByGrupo = async(req, res) => {\r\n    const { type } = req.body;\r\n    try {\r\n        const campana = await Campaign.find({ type }).sort({ name: 'asc' });\r\n        if (campana.length > 0) {\r\n            res.json(campana);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Campañas en ese grupo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(500).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateCampaignById = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    const { name, descripcion, forCar, type, bono, startDate, endDate, status } = req.body;\r\n    try {\r\n        //const foundAuto = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        const updateCampaign = await Campaign.findByIdAndUpdate(campaignId, { name, descripcion, forCar, type, bono, startDate, endDate, status });\r\n        if (updateCampaign) {\r\n            res.json({ message: 'Campaña actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Campaña' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteCampaignById = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    try {\r\n        const deletedCampaign = await Campaign.findByIdAndDelete(campaignId);\r\n        if (deletedCampaign) {\r\n            res.json({ message: 'Campaña eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'Campaña no existe' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"campaign.controller.js"}