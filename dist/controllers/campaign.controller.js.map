{"version":3,"file":"campaign.controller.js","names":["createCampaign","req","res","body","name","descripcion","forCar","type","bono","startDate","endDate","status","empleado","newCampaign","Campaign","User","find","username","$in","foundEmployee","map","em","_id","save","campaignSaved","json","message","console","log","getAll","sort","campaign","length","getOne","campaignId","params","findById","campaigns","getCampaniasActivas","fechaDesde","Date","getFullYear","getMonth","toISOString","substr","fechaHasta","activos","getCampaignByVehicle","modelo","campana","getCampaignByGrupo","updateCampaignById","findByIdAndUpdate","updateCampaign","deleteCampaignById","findByIdAndDelete","deletedCampaign"],"sources":["../../src/controllers/campaign.controller.js"],"sourcesContent":["import Campaign from '../models/Campaign'\r\nimport Vehicle from '../models/Vehicle'\r\nimport User from '../models/User'\r\n\r\nexport const createCampaign = async(req, res) => {\r\n    const { name, descripcion, forCar, type, bono, startDate, endDate, status, empleado } = req.body;\r\n\r\n    try {\r\n\r\n        const newCampaign = new Campaign({ name, descripcion, forCar, type, bono, startDate, endDate, status });\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newCampaign.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //const foundAuto = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n        //newCampaign.auto = foundAuto.map(auto => auto._id);\r\n\r\n        const campaignSaved = await newCampaign.save();\r\n\r\n        if (campaignSaved) {\r\n            res.json({ message: 'Campaña creada con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const campaign = await Campaign.find().sort({ name: 'asc' });\r\n        if (campaign.length > 0) {\r\n            res.json(campaign);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Campañas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getOne = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    try {\r\n        const campaigns = await Campaign.findById(campaignId);\r\n        if (campaigns) {\r\n            res.json(campaigns);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe la campaña' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCampaniasActivas = async(req, res) => {\r\n    const fechaDesde = new Date(new Date().getFullYear(), new Date().getMonth(),1).toISOString().substr(0,10);\r\n    const fechaHasta = new Date(new Date().getFullYear(), new Date().getMonth() + 1,0).toISOString().substr(0,10);\r\n    console.log(\"fecha-Desde: \",fechaDesde);\r\n    console.log(\"fecha-Hasta: \",fechaHasta);\r\n    try {\r\n        const activos = await Campaign.find({ status: 'Activo'/* ,startDate: {$gte: fechaDesde}, endDate: { $lt: fechaHasta}  */}).sort({ name: 'asc' });\r\n        if (activos.length > 0) {\r\n            res.json(activos);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Campañas Activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCampaignByVehicle = async(req, res) => {\r\n    const { modelo } = req.body;\r\n    try {\r\n        const campana = await Campaign.find({ forCar: modelo }).sort({ name: 'asc' });\r\n        //console.log(campana)\r\n        if (campana.length > 0) {\r\n            res.json(campana);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen campañas para ese vehículo' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCampaignByGrupo = async(req, res) => {\r\n    const { type } = req.body;\r\n    try {\r\n        const campana = await Campaign.find({ type }).sort({ name: 'asc' });\r\n        if (campana.length > 0) {\r\n            res.json(campana);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Campañas en ese grupo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(500).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateCampaignById = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    const { name, descripcion, forCar, type, bono, startDate, endDate, status } = req.body;\r\n    try {\r\n        //const foundAuto = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        const updateCampaign = await Campaign.findByIdAndUpdate(campaignId, { name, descripcion, forCar, type, bono, startDate, endDate, status });\r\n        if (updateCampaign) {\r\n            res.json({ message: 'Campaña actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Campaña' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteCampaignById = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    try {\r\n        const deletedCampaign = await Campaign.findByIdAndDelete(campaignId);\r\n        if (deletedCampaign) {\r\n            res.json({ message: 'Campaña eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'Campaña no existe' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"mappings":"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"}