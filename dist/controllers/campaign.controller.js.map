{"version":3,"sources":["../../src/controllers/campaign.controller.js"],"names":["createCampaign","req","res","body","name","descripcion","bono","startDate","endDate","status","empleado","newCampaign","Campaign","User","find","username","$in","foundEmployee","map","em","_id","save","campaignSaved","json","message","console","log","getAll","sort","campaign","length","getOne","campaignId","params","findById","campaigns","getCampaniasActivas","activos","getCampaignByVehicle","modelo","Vehicle","findOne","cod_tdp","vehiculo","auto","campana","updateCampaignById","findByIdAndUpdate","updateCampaign","deleteCampaignById","findByIdAndDelete","deletedCampaign"],"mappings":"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","sourcesContent":["import Campaign from '../models/Campaign'\r\nimport Vehicle from '../models/Vehicle'\r\nimport User from '../models/User'\r\n\r\nexport const createCampaign = async(req, res) => {\r\n    const { name, descripcion, bono, startDate, endDate, status, empleado } = req.body;\r\n\r\n    try {\r\n\r\n        const newCampaign = new Campaign({ name, descripcion, bono, startDate, endDate, status });\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newCampaign.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //const foundAuto = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n        //newCampaign.auto = foundAuto.map(auto => auto._id);\r\n\r\n        const campaignSaved = await newCampaign.save();\r\n\r\n        if (campaignSaved) {\r\n            res.json({ message: 'Campaña creada con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const campaign = await Campaign.find().sort({ name: 'asc' });\r\n        if (campaign.length > 0) {\r\n            res.json(campaign);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Campañas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getOne = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    try {\r\n        const campaigns = await Campaign.findById(campaignId);\r\n        if (campaigns) {\r\n            res.json(campaigns);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe la campaña' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCampaniasActivas = async(req, res) => {\r\n    try {\r\n        const activos = await Campaign.find({ status: 'Activo' }).sort({ name: 'asc' });\r\n        if (activos.length > 0) {\r\n            res.json(activos);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Campañas Activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCampaignByVehicle = async(req, res) => {\r\n    const { modelo } = req.body;\r\n    try {\r\n        const vehiculo = await Vehicle.findOne({ cod_tdp: modelo })\r\n\r\n        const campana = await Campaign.find({ auto: vehiculo });\r\n\r\n        if (campana) {\r\n            res.json(campana);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen campañas para ese vehículo' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateCampaignById = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    const { name, descripcion, bono, startDate, endDate, status } = req.body;\r\n    try {\r\n        //const foundAuto = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        const updateCampaign = await Campaign.findByIdAndUpdate(campaignId, { name, descripcion, bono, startDate, endDate, status });\r\n        if (updateCampaign) {\r\n            res.json({ message: 'Campaña actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Campaña' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteCampaignById = async(req, res) => {\r\n    const { campaignId } = req.params;\r\n    try {\r\n        const deletedCampaign = await Campaign.findByIdAndDelete(campaignId);\r\n        if (deletedCampaign) {\r\n            res.json({ message: 'Campaña eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'Campaña no existe' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"campaign.controller.js"}