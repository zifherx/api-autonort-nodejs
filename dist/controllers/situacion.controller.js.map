{"version":3,"sources":["../../src/controllers/situacion.controller.js"],"names":["getSituaciones","req","res","Situacion","find","query","length","send","status","json","message","getSituacionByActivo","getSituacionById","situacionId","params","findById","createSituacion","body","name","objeto","save","updateSituacion","findByIdAndUpdate","new","deleteSituacion","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Situacion from \"../models/Situacion\";\r\n\r\nexport const getSituaciones = async(req, res) => {\r\n    try {\r\n        const query = await Situacion.find();\r\n        if (query.length > 0) {\r\n            res.send(query);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const getSituacionByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Situacion.find({ status: \"Activo\" });\r\n        if (query) {\r\n            res.send(query);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        //console.log(err);\r\n        res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const getSituacionById = async(req, res) => {\r\n\r\n    const { situacionId } = req.params;\r\n    try {\r\n        const query = await Situacion.findById(situacionId);\r\n        if (query) {\r\n            res.send(query);\r\n        } else {\r\n            res.status(404).json({ message: 'No existe' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const createSituacion = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const objeto = new Situacion({ name, status });\r\n\r\n        const query = await objeto.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Situación creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const updateSituacion = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { situacionId } = req.params;\r\n    try {\r\n\r\n        const query = await Situacion.findByIdAndUpdate(situacionId, { name, status }, { new: true });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Situación actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Situación' });\r\n        }\r\n    } catch (err) {\r\n        //console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const deleteSituacion = async(req, res) => {\r\n    const { situacionId } = req.params;\r\n    try {\r\n\r\n        const query = await Situacion.findByIdAndDelete(situacionId);\r\n\r\n        if (query) {\r\n            res.json({ message: 'Situacion eliminada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Situacion' });\r\n        }\r\n    } catch (err) {\r\n        //console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}"],"file":"situacion.controller.js"}