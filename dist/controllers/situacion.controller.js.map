{"version":3,"sources":["../../src/controllers/situacion.controller.js"],"names":["getSituaciones","req","res","Situacion","find","sort","name","query","length","json","status","message","console","log","getSituacionByActivo","getSituacionById","situacionId","params","findById","createSituacion","body","objeto","save","updateSituacion","findByIdAndUpdate","deleteSituacion","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Situacion from \"../models/Situacion\";\r\n\r\nexport const getSituaciones = async(req, res) => {\r\n    try {\r\n        const query = await Situacion.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Situaciones' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSituacionByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Situacion.find({ status: \"Activo\" }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Situaciones Activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSituacionById = async(req, res) => {\r\n    const { situacionId } = req.params;\r\n    try {\r\n        const query = await Situacion.findById(situacionId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Situación' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createSituacion = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const objeto = new Situacion({ name, status });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Situación creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSituacion = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { situacionId } = req.params;\r\n    try {\r\n        const query = await Situacion.findByIdAndUpdate(situacionId, { name, status });\r\n        if (query) {\r\n            res.json({ message: 'Situación actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Situación a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSituacion = async(req, res) => {\r\n    const { situacionId } = req.params;\r\n    try {\r\n        const query = await Situacion.findByIdAndDelete(situacionId);\r\n        if (query) {\r\n            res.json({ message: 'Situacion eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Situacion a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"situacion.controller.js"}