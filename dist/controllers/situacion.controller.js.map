{"version":3,"sources":["../../src/controllers/situacion.controller.js"],"names":["getAll","req","res","Situacion","find","sort","name","query","length","json","total","all","status","message","console","log","getSituacionByActivo","estado","valor","total_active","all_active","getSituacionById","situacionId","params","findById","one","createSituacion","body","objeto","save","updateSituacion","findByIdAndUpdate","deleteSituacion","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Situacion from \"../models/Situacion\";\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await Situacion.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Situaciones' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSituacionByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Situacion.find({ estado: true }).sort({ valor: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Situaciones Activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSituacionById = async(req, res) => {\r\n    const { situacionId } = req.params;\r\n    try {\r\n        const query = await Situacion.findById(situacionId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Situación' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createSituacion = async(req, res) => {\r\n    const { name, valor, estado } = req.body;\r\n    try {\r\n        const objeto = new Situacion({ name,valor, estado });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Situación creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSituacion = async(req, res) => {\r\n    const { name, estado, valor } = req.body;\r\n    const { situacionId } = req.params;\r\n    try {\r\n        const query = await Situacion.findByIdAndUpdate(situacionId, {\r\n            name,\r\n            valor,\r\n            estado\r\n        });\r\n        if (query) {\r\n            res.json({ message: 'Situación actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Situación a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSituacion = async(req, res) => {\r\n    const { situacionId } = req.params;\r\n    try {\r\n        const query = await Situacion.findByIdAndDelete(situacionId);\r\n        if (query) {\r\n            res.json({ message: 'Situacion eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Situacion a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"situacion.controller.js"}