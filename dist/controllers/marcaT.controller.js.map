{"version":3,"sources":["../../src/controllers/marcaT.controller.js"],"names":["getAll","req","res","MarcaTasaciones","find","sort","name","query","length","json","status","message","console","log","getMarcaById","marcaId","params","findById","getMarcaActiva","count","brands","createMarca","body","obj","save","updateMarcaById","findByIdAndUpdate","deleteMarcaById","findByIdAndDelete","countAll","countDocuments"],"mappings":"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","sourcesContent":["import MarcaTasaciones from \"../models/MarcaTasaciones\";\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await MarcaTasaciones.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Marcas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getMarcaById = async(req, res) => {\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const query = await MarcaTasaciones.findById(marcaId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe la Marca' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getMarcaActiva = async(req, res) => {\r\n    try {\r\n        const query = await MarcaTasaciones.find({ status: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({ count: query.length, brands: query });\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Marcas activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createMarca = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const obj = new MarcaTasaciones({ name, status });\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Marca creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateMarcaById = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const query = await MarcaTasaciones.findByIdAndUpdate(marcaId, { name, status });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Marca actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Marca a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteMarcaById = async(req, res) => {\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const query = await MarcaTasaciones.findByIdAndDelete(marcaId);\r\n        if (query) {\r\n            res.json({ message: 'Marca eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Marca a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const countAll = async(req, res) => {\r\n    try {\r\n        const query = await MarcaTasaciones.countDocuments();\r\n        if (query >= 0) {\r\n            res.json({ count: query });\r\n        }\r\n    } catch (err) {\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"marcaT.controller.js"}