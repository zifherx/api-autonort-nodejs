{"version":3,"sources":["../../src/controllers/marcaT.controller.js"],"names":["getAll","req","res","MarcaTasaciones","find","sort","name","query","length","json","status","message","console","log","getMarcaById","marcaId","params","findById","getMarcaActiva","count","brands","createMarca","body","avatar","file","obj","undefined","location","save","updateMarcaById","findByIdAndUpdate","deleteMarcaById","findByIdAndDelete","countAll","countDocuments"],"mappings":"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","sourcesContent":["import MarcaTasaciones from \"../models/MarcaTasaciones\";\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await MarcaTasaciones.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Marcas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getMarcaById = async(req, res) => {\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const query = await MarcaTasaciones.findById(marcaId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe la Marca' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getMarcaActiva = async(req, res) => {\r\n    try {\r\n        const query = await MarcaTasaciones.find({ status: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({ count: query.length, brands: query });\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Marcas activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createMarca = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n        let obj = null;\r\n        if (avatar == undefined || avatar == null) {\r\n            obj = new MarcaTasaciones({\r\n                name,\r\n                status\r\n            });\r\n        } else {\r\n            obj = new MarcaTasaciones({\r\n                avatar: avatar.location,\r\n                name,\r\n                status\r\n            });\r\n        }\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Marca creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateMarcaById = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { marcaId } = req.params;\r\n    const avatar = req.file;\r\n    try {\r\n        let query = null;\r\n        if (avatar == undefined || avatar == null) {\r\n            query = await MarcaTasaciones.findByIdAndUpdate(marcaId, {\r\n                name,\r\n                status\r\n            });\r\n        } else {\r\n            query = await MarcaTasaciones.findByIdAndUpdate(marcaId, {\r\n                avatar: avatar.location,\r\n                name,\r\n                status\r\n            });\r\n        }\r\n\r\n        if (query) {\r\n            res.json({ message: 'Marca actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Marca a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteMarcaById = async(req, res) => {\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const query = await MarcaTasaciones.findByIdAndDelete(marcaId);\r\n        if (query) {\r\n            res.json({ message: 'Marca eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Marca a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const countAll = async(req, res) => {\r\n    try {\r\n        const query = await MarcaTasaciones.countDocuments();\r\n        if (query >= 0) {\r\n            res.json({ count: query });\r\n        }\r\n    } catch (err) {\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"marcaT.controller.js"}