{"version":3,"sources":["../../src/controllers/marcaT.controller.js"],"names":["getAll","req","res","MarcaTasaciones","find","sort","name","query","length","json","total","all","status","message","console","log","getMarcaById","marcaId","params","findById","one","getMarcaActiva","estado","total_active","all_active","createMarca","body","avatar","file","obj","undefined","location","save","updateMarcaById","findByIdAndUpdate","deleteMarcaById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import MarcaTasaciones from \"../models/MarcaTasaciones\";\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await MarcaTasaciones.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Marcas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getMarcaById = async(req, res) => {\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const query = await MarcaTasaciones.findById(marcaId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe la Marca' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getMarcaActiva = async(req, res) => {\r\n    try {\r\n        const query = await MarcaTasaciones.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({ total_active: query.length, all_active: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Marcas activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createMarca = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n        let obj = null;\r\n        if (avatar == undefined || avatar == null) {\r\n            obj = new MarcaTasaciones({\r\n                name,\r\n                estado\r\n            });\r\n        } else {\r\n            obj = new MarcaTasaciones({\r\n                avatar: avatar.location,\r\n                name,\r\n                estado\r\n            });\r\n        }\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Marca creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateMarcaById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { marcaId } = req.params;\r\n    const avatar = req.file;\r\n    try {\r\n        let query = null;\r\n        if (avatar == undefined || avatar == null) {\r\n            query = await MarcaTasaciones.findByIdAndUpdate(marcaId, {\r\n                name,\r\n                estado\r\n            });\r\n        } else {\r\n            query = await MarcaTasaciones.findByIdAndUpdate(marcaId, {\r\n                avatar: avatar.location,\r\n                name,\r\n                estado\r\n            });\r\n        }\r\n\r\n        if (query) {\r\n            return res.json({ message: 'Marca actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Marca a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteMarcaById = async(req, res) => {\r\n    const { marcaId } = req.params;\r\n    try {\r\n        const query = await MarcaTasaciones.findByIdAndDelete(marcaId);\r\n        if (query) {\r\n            res.json({ message: 'Marca eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Marca a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"marcaT.controller.js"}