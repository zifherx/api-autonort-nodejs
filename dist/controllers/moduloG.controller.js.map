{"version":3,"file":"moduloG.controller.js","names":["moduloController","getAll","req","res","ModuloG","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","moduloId","params","findById","one","getAllByActivos","estado","total_active","all_active","getAllActiveByMenu","menuG","body","MenuG","findOne","menuFound","_id","createOne","icon","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/moduloG.controller.js"],"sourcesContent":["import MenuG from \"../models/MenuG\";\r\nimport ModuloG from \"../models/ModuloG\";\r\n\r\nconst moduloController = {};\r\n\r\nmoduloController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await ModuloG.find()\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'menuG',\r\n            select: 'name icon'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen módulos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmoduloController.getOneById = async(req, res) => {\r\n    const { moduloId } = req.params;\r\n    try {\r\n        const query = await ModuloG.findById(moduloId)\r\n        .populate({\r\n            path: 'menuG',\r\n            select: 'name icon'\r\n        });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe módulo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmoduloController.getAllByActivos = async(req, res) => {\r\n    try {\r\n        const query = await ModuloG.find({ estado: true })\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'menuG',\r\n            select: 'name icon'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen módulos activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nmoduloController.getAllActiveByMenu = async(req, res) => {\r\n    const {menuG} = req.body;\r\n\r\n    try {\r\n        \r\n        const menuFound = await MenuG.findOne({name: menuG});\r\n        if(!menuFound) return res.status(404).json({message: `Menú ${menuG} no encontrado`});\r\n\r\n        const query = await ModuloG.find({\r\n            menuG: menuFound._id,\r\n            estado: true\r\n        })\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'menuG',\r\n            select: 'name icon'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen módulos activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nmoduloController.createOne = async(req, res) => {\r\n    const { menuG, name, icon, estado } = req.body;\r\n    try {\r\n        const obj = new ModuloG({ name, icon, estado });\r\n\r\n        const menuFound = await MenuG.findOne({name: menuG});\r\n        if(!menuFound) return res.status(404).json({message: `Menu ${menuG} no encontrado`});\r\n        obj.menuG = menuFound._id;\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Módulo creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmoduloController.updateOneById = async(req, res) => {\r\n    const { menuG, name, estado } = req.body;\r\n    const { moduloId } = req.params;\r\n\r\n    try {\r\n\r\n        const menuFound = await MenuG.findOne({name: menuG});\r\n        if(!menuFound) return res.status(404).json({message: `Menu ${menuG} no encontrado`});\r\n\r\n        const query = await ModuloG.findByIdAndUpdate(moduloId, { \r\n            menuG: menuFound._id,\r\n            name, \r\n            estado \r\n        });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Módulo actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe módulo a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmoduloController.deleteOneById = async(req, res) => {\r\n    const { moduloId } = req.params;\r\n    try {\r\n        const query = await ModuloG.findByIdAndDelete(moduloId);\r\n        if (query) {\r\n            res.json({ message: 'Módulo eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe módulo a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default moduloController;"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;+CAAA,oJ;;AAEA,IAAMA,gBAAgB,GAAG,EAAzB;;AAEAA,gBAAgB,CAACC,MAAjB;EAAA,oFAA0B,iBAAMC,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEEC,gBAAA,CAAQC,IAAR,GACnBC,IADmB,CACd;cAAEC,IAAI,EAAE;YAAR,CADc,EAEnBC,QAFmB,CAEV;cACNC,IAAI,EAAE,OADA;cAENC,MAAM,EAAE;YAFF,CAFU,CAFF;;UAAA;YAEZC,KAFY;;YAAA,MASdA,KAAK,CAACC,MAAN,GAAe,CATD;cAAA;cAAA;YAAA;;YAUdT,GAAG,CAACU,IAAJ,CAAS;cAACC,KAAK,EAAEH,KAAK,CAACC,MAAd;cAAsBG,GAAG,EAAEJ;YAA3B,CAAT;YAVc;YAAA;;UAAA;YAAA,iCAYPR,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAZO;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAelBC,OAAO,CAACC,GAAR;YAfkB,iCAgBXhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,YAAIA;YAAf,CAArB,CAhBW;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA1B;;EAAA;IAAA;EAAA;AAAA;;AAoBAjB,gBAAgB,CAACoB,UAAjB;EAAA,qFAA8B,kBAAMlB,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAClBkB,QADkB,GACLnB,GAAG,CAACoB,MADC,CAClBD,QADkB;YAAA;YAAA;YAAA,OAGFjB,gBAAA,CAAQmB,QAAR,CAAiBF,QAAjB,EACnBb,QADmB,CACV;cACNC,IAAI,EAAE,OADA;cAENC,MAAM,EAAE;YAFF,CADU,CAHE;;UAAA;YAGhBC,KAHgB;;YAAA,KASlBA,KATkB;cAAA;cAAA;YAAA;;YAUlBR,GAAG,CAACU,IAAJ,CAAS;cAACW,GAAG,EAAEb;YAAN,CAAT;YAVkB;YAAA;;UAAA;YAAA,kCAYXR,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAZW;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAetBC,OAAO,CAACC,GAAR;YAfsB,kCAgBfhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAhBe;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA9B;;EAAA;IAAA;EAAA;AAAA;;AAoBAjB,gBAAgB,CAACyB,eAAjB;EAAA,qFAAmC,kBAAMvB,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEPC,gBAAA,CAAQC,IAAR,CAAa;cAAEqB,MAAM,EAAE;YAAV,CAAb,EACnBpB,IADmB,CACd;cAAEC,IAAI,EAAE;YAAR,CADc,EAEnBC,QAFmB,CAEV;cACNC,IAAI,EAAE,OADA;cAENC,MAAM,EAAE;YAFF,CAFU,CAFO;;UAAA;YAErBC,KAFqB;;YAAA,MASvBA,KAAK,CAACC,MAAN,GAAe,CATQ;cAAA;cAAA;YAAA;;YAUvBT,GAAG,CAACU,IAAJ,CAAS;cAACc,YAAY,EAAEhB,KAAK,CAACC,MAArB;cAA6BgB,UAAU,EAAEjB;YAAzC,CAAT;YAVuB;YAAA;;UAAA;YAAA,kCAYhBR,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAZgB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAe3BC,OAAO,CAACC,GAAR;YAf2B,kCAgBpBhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAhBoB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAnC;;EAAA;IAAA;EAAA;AAAA;;AAoBAjB,gBAAgB,CAAC6B,kBAAjB;EAAA,qFAAsC,kBAAM3B,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAC3B2B,KAD2B,GAClB5B,GAAG,CAAC6B,IADc,CAC3BD,KAD2B;YAAA;YAAA;YAAA,OAKNE,cAAA,CAAMC,OAAN,CAAc;cAAC1B,IAAI,EAAEuB;YAAP,CAAd,CALM;;UAAA;YAKxBI,SALwB;;YAAA,IAM1BA,SAN0B;cAAA;cAAA;YAAA;;YAAA,kCAMR/B,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAACI,OAAO,oBAAUa,KAAV;YAAR,CAArB,CANQ;;UAAA;YAAA;YAAA,OAQV1B,gBAAA,CAAQC,IAAR,CAAa;cAC7ByB,KAAK,EAAEI,SAAS,CAACC,GADY;cAE7BT,MAAM,EAAE;YAFqB,CAAb,EAInBpB,IAJmB,CAId;cAAEC,IAAI,EAAE;YAAR,CAJc,EAKnBC,QALmB,CAKV;cACNC,IAAI,EAAE,OADA;cAENC,MAAM,EAAE;YAFF,CALU,CARU;;UAAA;YAQxBC,KARwB;;YAAA,MAkB1BA,KAAK,CAACC,MAAN,GAAe,CAlBW;cAAA;cAAA;YAAA;;YAmB1BT,GAAG,CAACU,IAAJ,CAAS;cAACc,YAAY,EAAEhB,KAAK,CAACC,MAArB;cAA6BgB,UAAU,EAAEjB;YAAzC,CAAT;YAnB0B;YAAA;;UAAA;YAAA,kCAqBnBR,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CArBmB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAwB9BC,OAAO,CAACC,GAAR;YAxB8B,kCAyBvBhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAzBuB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAtC;;EAAA;IAAA;EAAA;AAAA;;AA6BAjB,gBAAgB,CAACoC,SAAjB;EAAA,qFAA6B,kBAAMlC,GAAN,EAAWC,GAAX;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,YACaD,GAAG,CAAC6B,IADjB,EACjBD,KADiB,aACjBA,KADiB,EACVvB,IADU,aACVA,IADU,EACJ8B,IADI,aACJA,IADI,EACEX,MADF,aACEA,MADF;YAAA;YAGfY,GAHe,GAGT,IAAIlC,gBAAJ,CAAY;cAAEG,IAAI,EAAJA,IAAF;cAAQ8B,IAAI,EAAJA,IAAR;cAAcX,MAAM,EAANA;YAAd,CAAZ,CAHS;YAAA;YAAA,OAKGM,cAAA,CAAMC,OAAN,CAAc;cAAC1B,IAAI,EAAEuB;YAAP,CAAd,CALH;;UAAA;YAKfI,SALe;;YAAA,IAMjBA,SANiB;cAAA;cAAA;YAAA;;YAAA,kCAMC/B,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAACI,OAAO,iBAAUa,KAAV;YAAR,CAArB,CAND;;UAAA;YAOrBQ,GAAG,CAACR,KAAJ,GAAYI,SAAS,CAACC,GAAtB;YAPqB;YAAA,OASDG,GAAG,CAACC,IAAJ,EATC;;UAAA;YASf5B,KATe;;YAWrB,IAAIA,KAAJ,EAAW;cACPR,GAAG,CAACU,IAAJ,CAAS;gBAAEI,OAAO,EAAE;cAAX,CAAT;YACH;;YAboB;YAAA;;UAAA;YAAA;YAAA;YAerBC,OAAO,CAACC,GAAR;YAfqB,kCAgBdhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAhBc;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA7B;;EAAA;IAAA;EAAA;AAAA;;AAoBAjB,gBAAgB,CAACwC,aAAjB;EAAA,qFAAiC,kBAAMtC,GAAN,EAAWC,GAAX;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,aACGD,GAAG,CAAC6B,IADP,EACrBD,KADqB,cACrBA,KADqB,EACdvB,IADc,cACdA,IADc,EACRmB,MADQ,cACRA,MADQ;YAErBL,QAFqB,GAERnB,GAAG,CAACoB,MAFI,CAErBD,QAFqB;YAAA;YAAA;YAAA,OAMDW,cAAA,CAAMC,OAAN,CAAc;cAAC1B,IAAI,EAAEuB;YAAP,CAAd,CANC;;UAAA;YAMnBI,SANmB;;YAAA,IAOrBA,SAPqB;cAAA;cAAA;YAAA;;YAAA,kCAOH/B,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAACI,OAAO,iBAAUa,KAAV;YAAR,CAArB,CAPG;;UAAA;YAAA;YAAA,OASL1B,gBAAA,CAAQqC,iBAAR,CAA0BpB,QAA1B,EAAoC;cACpDS,KAAK,EAAEI,SAAS,CAACC,GADmC;cAEpD5B,IAAI,EAAJA,IAFoD;cAGpDmB,MAAM,EAANA;YAHoD,CAApC,CATK;;UAAA;YASnBf,KATmB;;YAAA,KAerBA,KAfqB;cAAA;cAAA;YAAA;;YAgBrBR,GAAG,CAACU,IAAJ,CAAS;cAAEI,OAAO,EAAE;YAAX,CAAT;YAhBqB;YAAA;;UAAA;YAAA,kCAkBdd,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAlBc;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAqBzBC,OAAO,CAACC,GAAR;YArByB,kCAsBlBhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAtBkB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjC;;EAAA;IAAA;EAAA;AAAA;;AA0BAjB,gBAAgB,CAAC0C,aAAjB;EAAA,qFAAiC,kBAAMxC,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YACrBkB,QADqB,GACRnB,GAAG,CAACoB,MADI,CACrBD,QADqB;YAAA;YAAA;YAAA,OAGLjB,gBAAA,CAAQuC,iBAAR,CAA0BtB,QAA1B,CAHK;;UAAA;YAGnBV,KAHmB;;YAAA,KAIrBA,KAJqB;cAAA;cAAA;YAAA;;YAKrBR,GAAG,CAACU,IAAJ,CAAS;cAAEI,OAAO,EAAE;YAAX,CAAT;YALqB;YAAA;;UAAA;YAAA,kCAOdd,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAPc;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAUzBC,OAAO,CAACC,GAAR;YAVyB,kCAWlBhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAXkB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjC;;EAAA;IAAA;EAAA;AAAA;;eAeejB,gB"}