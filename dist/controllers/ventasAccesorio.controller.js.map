{"version":3,"sources":["../../src/controllers/ventasAccesorio.controller.js"],"names":["stockController","getAll","req","res","VentasAccesorio","find","sort","fecha","populate","path","select","query","length","json","total","all","status","message","console","log","createOne","body","cod_interno","sucursal","sucursalE","anio","anioE","mes","mesE","stock","ventas","createdBy","newObj","Sucursal","findOne","name","sucursalFound","_id","Anio","anioFound","Mes","mesFound","User","username","userFound","save","getAllBySucursalMes","$regex"],"mappings":"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","sourcesContent":["import VentasAccesorio from \"../models/VentasAccesorio\";\r\nimport Sucursal from \"../models/Sucursal\";\r\nimport Anio from \"../models/Anio\";\r\nimport Mes from \"../models/Mes\";\r\nimport User from \"../models/User\";\r\n\r\nconst stockController = {};\r\n\r\nstockController.getAll = async (req, res) => {\r\n    try {\r\n        const query = await VentasAccesorio.find()\r\n            .sort({ fecha: 1 })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"mesE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existen registros\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nstockController.createOne = async (req, res) => {\r\n    const { cod_interno, sucursal, sucursalE, fecha, anio, anioE, mes, mesE, stock, ventas, createdBy } = req.body;\r\n\r\n    try {\r\n        const newObj = new VentasAccesorio({\r\n            cod_interno,\r\n            sucursal,\r\n            fecha,\r\n            anio,\r\n            mes,\r\n            stock,\r\n            ventas,\r\n        });\r\n\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrado` });\r\n        newObj.sucursalE = sucursalFound._id;\r\n\r\n        const anioFound = await Anio.findOne({ name: anioE });\r\n        if (!anioFound) return res.status(404).json({ message: `Año ${anioE} no encontrado` });\r\n        newObj.anioE = anioFound._id;\r\n\r\n        const mesFound = await Mes.findOne({ name: mesE });\r\n        if (!mesFound) return res.status(404).json({ message: `Mes ${mesE} no encontrado` });\r\n        newObj.mesE = mesFound._id;\r\n\r\n        const userFound = await User.findOne({ username: createdBy });\r\n        if (!userFound) return res.status(404).json({ message: `Usuario ${createdBy} no encontrado` });\r\n        newObj.createdBy = userFound._id;\r\n\r\n        const query = newObj.save();\r\n\r\n        if (query) res.json({ message: \"Registro agregado con éxito\" });\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nstockController.getAllBySucursalMes = async (req, res) => {\r\n    const { sucursalE, mesE } = req.body;\r\n\r\n    try {\r\n        const query = await VentasAccesorio.find({\r\n            sucursal: { $regex: \".*\" + sucursalE + \".*\" },\r\n            // mes: mesE,\r\n        })\r\n            .sort({ fecha: 1 })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"mesE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existen registros\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nexport default stockController;\r\n"],"file":"ventasAccesorio.controller.js"}