{"version":3,"file":"ventasAccesorio.controller.js","names":["stockController","getAll","req","res","VentasAccesorio","find","sort","fecha","populate","path","select","query","length","json","total","all","status","message","console","log","createOne","body","cod_interno","sucursal","sucursalE","anio","anioE","mes","mesE","stock","ventas","createdBy","newObj","Sucursal","findOne","name","sucursalFound","_id","Anio","anioFound","Mes","mesFound","User","username","userFound","save","getAllBySucursalMes","$regex"],"sources":["../../src/controllers/ventasAccesorio.controller.js"],"sourcesContent":["import VentasAccesorio from \"../models/VentasAccesorio\";\r\nimport Sucursal from \"../models/Sucursal\";\r\nimport Anio from \"../models/Anio\";\r\nimport Mes from \"../models/Mes\";\r\nimport User from \"../models/User\";\r\n\r\nconst stockController = {};\r\n\r\nstockController.getAll = async (req, res) => {\r\n    try {\r\n        const query = await VentasAccesorio.find()\r\n            .sort({ fecha: 1 })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"mesE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existen registros\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nstockController.createOne = async (req, res) => {\r\n    const { cod_interno, sucursal, sucursalE, fecha, anio, anioE, mes, mesE, stock, ventas, createdBy } = req.body;\r\n\r\n    try {\r\n        const newObj = new VentasAccesorio({\r\n            cod_interno,\r\n            sucursal,\r\n            fecha,\r\n            anio,\r\n            mes,\r\n            stock,\r\n            ventas,\r\n        });\r\n\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrado` });\r\n        newObj.sucursalE = sucursalFound._id;\r\n\r\n        const anioFound = await Anio.findOne({ name: anioE });\r\n        if (!anioFound) return res.status(404).json({ message: `Año ${anioE} no encontrado` });\r\n        newObj.anioE = anioFound._id;\r\n\r\n        const mesFound = await Mes.findOne({ name: mesE });\r\n        if (!mesFound) return res.status(404).json({ message: `Mes ${mesE} no encontrado` });\r\n        newObj.mesE = mesFound._id;\r\n\r\n        const userFound = await User.findOne({ username: createdBy });\r\n        if (!userFound) return res.status(404).json({ message: `Usuario ${createdBy} no encontrado` });\r\n        newObj.createdBy = userFound._id;\r\n\r\n        const query = newObj.save();\r\n\r\n        if (query) res.json({ message: \"Registro agregado con éxito\" });\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nstockController.getAllBySucursalMes = async (req, res) => {\r\n    const { sucursalE, mesE } = req.body;\r\n\r\n    try {\r\n        const query = await VentasAccesorio.find({\r\n            sucursal: { $regex: \".*\" + sucursalE + \".*\" },\r\n            // mes: mesE,\r\n        })\r\n            .sort({ fecha: 1 })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"mesE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existen registros\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nexport default stockController;\r\n"],"mappings":"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"}