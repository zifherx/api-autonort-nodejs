{"version":3,"sources":["../../src/controllers/banco.controller.js"],"names":["getBancos","req","res","Banco","find","bancos","length","send","status","json","message","getBancoById","bancoId","params","findById","getBancoByActivo","createBanco","body","name","newBanco","save","bancoCreado","updateBanco","findByIdAndUpdate","new","deleteBanco","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Banco from \"../models/Banco\";\r\n\r\nexport const getBancos = async(req, res) => {\r\n    try {\r\n        const bancos = await Banco.find();\r\n        if (bancos.length > 0) {\r\n            res.send(bancos);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const getBancoById = async(req, res) => {\r\n    const { bancoId } = req.params;\r\n    try {\r\n        const bancos = await Banco.findById(bancoId);\r\n        if (bancos) {\r\n            res.send(bancos);\r\n        } else {\r\n            res.status(404).json({ message: 'No existe' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const getBancoByActivo = async(req, res) => {\r\n    try {\r\n        const bancos = await Banco.find({ status: \"Activo\" });\r\n        if (bancos) {\r\n            res.status(200).json(bancos);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        //console.log(err);\r\n        res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const createBanco = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const newBanco = new Banco({ name, status });\r\n\r\n        const bancoCreado = await newBanco.save();\r\n\r\n        if (bancoCreado) {\r\n            res.json({ message: 'Banco creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const updateBanco = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { bancoId } = req.params;\r\n    try {\r\n\r\n        const updateBanco = await Banco.findByIdAndUpdate(bancoId, { name, status }, { new: true });\r\n\r\n        if (updateBanco) {\r\n            res.json({ message: 'Banco actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Banco' });\r\n        }\r\n    } catch (err) {\r\n        //console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const deleteBanco = async(req, res) => {\r\n    const { bancoId } = req.params;\r\n    try {\r\n\r\n        const deleteBanco = await Banco.findByIdAndDelete(bancoId);\r\n\r\n        if (deleteBanco) {\r\n            res.json({ message: 'Banco eliminado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Banco' });\r\n        }\r\n    } catch (err) {\r\n        //console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}"],"file":"banco.controller.js"}