{"version":3,"file":"banco.controller.js","names":["getBancos","req","res","Banco","find","sort","name","query","length","json","total","all","status","message","console","log","getBancoById","bancoId","params","findById","one","getBancoByActivo","estado","total_active","all_active","createBanco","body","avatar","file","obj","undefined","location","save","updateBanco","findByIdAndUpdate","deleteBanco","findByIdAndDelete"],"sources":["../../src/controllers/banco.controller.js"],"sourcesContent":["import Banco from \"../models/Banco\";\r\n\r\nexport const getBancos = async(req, res) => {\r\n    try {\r\n        const query = await Banco.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Bancos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getBancoById = async(req, res) => {\r\n    const { bancoId } = req.params;\r\n    try {\r\n        const query = await Banco.findById(bancoId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Banco' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getBancoByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Banco.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Bancos Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createBanco = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n        let obj = null;\r\n        if (avatar == undefined || avatar == null) {\r\n            obj = new Banco({ name, estado });\r\n        } else {\r\n            obj = new Banco({\r\n                avatar: avatar.location,\r\n                name,\r\n                estado\r\n            });\r\n        }\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Banco creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateBanco = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { bancoId } = req.params;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n        let query = null;\r\n\r\n        if (avatar == undefined || avatar == null) {\r\n            query = await Banco.findByIdAndUpdate(bancoId, {\r\n                name,\r\n                estado\r\n            });\r\n        } else {\r\n            query = await Banco.findByIdAndUpdate(bancoId, {\r\n                avatar: avatar.location,\r\n                name,\r\n                estado\r\n            });\r\n        }\r\n\r\n        if (query) {\r\n            res.json({ message: 'Banco actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Banco a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteBanco = async(req, res) => {\r\n    const { bancoId } = req.params;\r\n    try {\r\n        const query = await Banco.findByIdAndDelete(bancoId);\r\n        if (query) {\r\n            res.json({ message: 'Banco eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Banco a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"mappings":"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"}