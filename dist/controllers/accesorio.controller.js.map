{"version":3,"sources":["../../src/controllers/accesorio.controller.js"],"names":["accesorioController","getAll","req","res","AccesorioE","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOne","accesorioId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","cod_interno","model","precio","createdBy","obj","ModeloTasaciones","findOne","modelFound","_id","User","username","userFound","save","updateById","findByIdAndUpdate","deleteById","findByIdAndDelete","getAccesoriosByModelo","modelo"],"mappings":"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","sourcesContent":["import AccesorioE from '../models/AccesorioE';\r\nimport ModeloTasaciones from '../models/ModeloTasaciones'\r\nimport User from '../models/User';\r\n\r\nconst accesorioController = {};\r\n\r\naccesorioController.getAll = async (req, res) => {\r\n    try {\r\n        const query = await AccesorioE.find()\r\n        .sort({ name: 1})\r\n        .populate({\r\n            path: 'model',\r\n            select: 'name avatar marca',\r\n            populate: {\r\n                path: 'marca',\r\n                select: 'name avatar'\r\n            }\r\n        })\r\n        .populate({\r\n            path: 'createdBy',\r\n            select: 'name username'\r\n        });\r\n\r\n        if(query.length > 0){\r\n            res.json({total: query.length, all: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existen accesorios creados'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\naccesorioController.getOne = async (req, res) => {\r\n    const { accesorioId} = req.params;\r\n\r\n    try {\r\n        const query = await AccesorioE.findById(accesorioId)\r\n        .populate({\r\n            path: 'model',\r\n            select: 'name avatar marca',\r\n            populate: {\r\n                path: 'marca',\r\n                select: 'name avatar'\r\n            }\r\n        })\r\n        .populate({\r\n            path: 'createdBy',\r\n            select: 'name username'\r\n        });\r\n\r\n        if(query){\r\n            res.json({one: query});\r\n        }else{\r\n            return res.status(404).json({message: `No existe accesorio ${accesorioId}`});\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\naccesorioController.getAllActivos = async (req, res) => {\r\n    try {\r\n        const query = await AccesorioE.find({estado: true})\r\n        .sort({name: 1})\r\n        .populate({\r\n            path: 'model',\r\n            select: 'name avatar marca',\r\n            populate: {\r\n                path: 'marca',\r\n                select: 'name avatar'\r\n            }\r\n        })\r\n        .populate({\r\n            path: 'createdBy',\r\n            select: 'name username'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay accesorios activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\naccesorioController.createOne = async (req, res) => {\r\n    const { cod_interno, name, model, precio, estado, createdBy} = req.body;\r\n    try {\r\n        const obj = new AccesorioE({ cod_interno, name, precio, estado });\r\n\r\n        const modelFound = await ModeloTasaciones.findOne({name: model});\r\n        if(!modelFound) return res.status(404).json({message: `Modelo ${model} no encontrado`});\r\n        obj.model = modelFound._id;\r\n        \r\n        const userFound = await User.findOne({username: createdBy});\r\n        if(!userFound) return res.status(404).json({message: `Usuario ${createdBy} no encontrado`});\r\n        obj.createdBy = userFound._id;\r\n\r\n        const query = await obj.save();\r\n        if(query){\r\n            res.json({message: 'Accesorio creado con éxito'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\naccesorioController.updateById = async (req, res) => {\r\n    const {accesorioId} = req.params;\r\n    const { cod_interno, name, model, precio, estado } = req.body;\r\n    \r\n    try {\r\n\r\n        const modelFound = await ModeloTasaciones.findOne({name: model});\r\n        if(!modelFound) return res.status(404).json({message: `Modelo ${model} no encontrado`});\r\n\r\n        const query = await AccesorioE.findByIdAndUpdate(accesorioId, {\r\n            cod_interno, \r\n            name, \r\n            model: modelFound._id,\r\n            precio, \r\n            estado\r\n        });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Accesorio actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe accesorio a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\naccesorioController.deleteById = async (req, res) => {\r\n    const {accesorioId} = req.params;\r\n    try {\r\n        const query = await AccesorioE.findByIdAndDelete(accesorioId);\r\n        if (query) {\r\n            res.json({ message: 'Accesorio eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe accesorio a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\naccesorioController.getAccesoriosByModelo = async (req, res) => {\r\n    const { modelo } = req.body;\r\n\r\n    try {\r\n        const modelFound = await ModeloTasaciones.findOne({name: modelo});\r\n\r\n        const query = await AccesorioE.find({\r\n            model: modelFound._id\r\n        })\r\n        .sort({ cod_interno: 1})\r\n        .populate({\r\n            path: 'model',\r\n            select: 'name'\r\n        })\r\n        .populate({\r\n            path: 'createdBy',\r\n            select: 'name username'\r\n        })\r\n\r\n        if(query.length > 0){\r\n            res.json({total: query.length, all: query});\r\n        }else{\r\n            return res.status(404).json({message: `No se encontraron accesorios para ${modelo}`});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport default accesorioController;"],"file":"accesorio.controller.js"}