{"version":3,"sources":["../../src/controllers/accesorio.controller.js"],"names":["ctrlAccesorio","getAll","req","res","Accesorio","find","sort","name","populate","path","select","query","length","json","total","props","status","message","console","log","getOne","accesorioId","params","findById","getActivos","createOne","body","codigo","categoria","nombre","descripcion","stock","createdBy","obj","User","username","$in","userFound","map","a","_id","save","updateById","findByIdAndUpdate","deleteById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Accesorio from '../models/Accesorio';\r\nimport User from '../models/User';\r\n\r\nconst ctrlAccesorio = {};\r\n\r\nctrlAccesorio.getAll = async (req, res) => {\r\n    try {\r\n        const query = await Accesorio.find()\r\n        .sort({ name: 1})\r\n        .populate({\r\n            path: 'createdBy',\r\n            select: 'name username roles',\r\n            populate: {\r\n                path: 'roles',\r\n                select: 'name'\r\n            }\r\n        });\r\n        if(query.length > 0){\r\n            res.json({total: query.length, props: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existen Accesorios'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nctrlAccesorio.getOne = async (req, res) => {\r\n    const { accesorioId} = req.params;\r\n    try {\r\n        const query = await Accesorio\r\n        .findById(accesorioId)\r\n        .populate({\r\n            path: 'createdBy',\r\n            select: 'name username roles',\r\n            populate: {\r\n                path: 'roles',\r\n                select: 'name'\r\n            }\r\n        });\r\n        if(query){\r\n            res.json(query);\r\n        }else{\r\n            return res.status(404).json({message: 'No existe Accesorio'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nctrlAccesorio.getActivos = async (req, res) => {\r\n    try {\r\n        const query = await Accesorio.find({status: true})\r\n        .sort({name: 1})\r\n        .populate({\r\n            path: 'createdBy',\r\n            select: 'name username roles',\r\n            populate: {\r\n                path: 'roles',\r\n                select: 'name'\r\n            }\r\n        });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, props: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Accesorios Activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nctrlAccesorio.createOne = async (req, res) => {\r\n    const { codigo, categoria, nombre, descripcion, stock, status, createdBy} = req.body;\r\n    try {\r\n        const obj = new Accesorio({ codigo, categoria, nombre, descripcion, stock, status });\r\n\r\n        const userFound = await User.find({username: {$in: createdBy}});\r\n        obj.createdBy = userFound.map(a => a._id);\r\n\r\n        const query = await obj.save();\r\n        if(query){\r\n            res.json({message: 'Accesorio creado con éxito'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nctrlAccesorio.updateById = async (req, res) => {\r\n    const {accesorioId} = req.params;\r\n    const { categoria, nombre, descripcion, stock, status } = req.body;\r\n    try {\r\n        const query = await Accesorio.findByIdAndUpdate(accesorioId, {\r\n            categoria, nombre, descripcion, stock, status\r\n        });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Accesorio actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe accesorio a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nctrlAccesorio.deleteById = async (req, res) => {\r\n    const {accesorioId} = req.params;\r\n    try {\r\n        const query = await Accesorio.findByIdAndDelete(accesorioId);\r\n        if (query) {\r\n            res.json({ message: 'Accesorio eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe accesorio a eliminado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport default ctrlAccesorio;"],"file":"accesorio.controller.js"}