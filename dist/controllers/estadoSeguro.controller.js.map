{"version":3,"file":"estadoSeguro.controller.js","names":["seguroController","getAll","req","res","EstadoSeguro","find","sort","value","query","length","json","total","all","status","message","console","log","getOneById","seguroId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","name","nuevo","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/estadoSeguro.controller.js"],"sourcesContent":["import EstadoSeguro from '../models/EstadoSeguro'\r\n\r\nconst seguroController = {};\r\n\r\nseguroController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await EstadoSeguro.find().sort({ value: 1 });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen estados' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nseguroController.getOneById = async(req, res) => {\r\n    const { seguroId } = req.params\r\n    try {\r\n        const query = await EstadoSeguro.findById(seguroId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el estado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nseguroController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await EstadoSeguro.find({ estado: true }).sort({ value: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen estados activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nseguroController.createOne = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    try {\r\n        const nuevo = new EstadoSeguro({ name, value, estado });\r\n        const query = await nuevo.save()\r\n        if (query) {\r\n            res.json({ message: 'Estado creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nseguroController.updateOneById = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    const { seguroId } = req.params;\r\n    try {\r\n        const query = await EstadoSeguro.findByIdAndUpdate(seguroId, { name, value, estado });\r\n        if (query) {\r\n            res.json({ message: 'Estado actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: `No existe estado a actualizar`  });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nseguroController.deleteOneById = async(req, res) => {\r\n    const { seguroId } = req.params;\r\n    try {\r\n        const query = await EstadoSeguro.findByIdAndDelete(seguroId);\r\n        if (query) {\r\n            res.json({ message: 'Estado eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Estado a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport default seguroController;"],"mappings":"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"}