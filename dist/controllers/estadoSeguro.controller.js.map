{"version":3,"sources":["../../src/controllers/estadoSeguro.controller.js"],"names":["seguroController","getAll","req","res","EstadoSeguro","find","sort","value","query","length","json","total","all","status","message","console","log","getOneById","seguroId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","name","nuevo","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import EstadoSeguro from '../models/EstadoSeguro'\r\n\r\nconst seguroController = {};\r\n\r\nseguroController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await EstadoSeguro.find().sort({ value: 1 });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen estados' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nseguroController.getOneById = async(req, res) => {\r\n    const { seguroId } = req.params\r\n    try {\r\n        const query = await EstadoSeguro.findById(seguroId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el estado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nseguroController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await EstadoSeguro.find({ estado: true }).sort({ value: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen estados activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nseguroController.createOne = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    try {\r\n        const nuevo = new EstadoSeguro({ name, value, estado });\r\n        const query = await nuevo.save()\r\n        if (query) {\r\n            res.json({ message: 'Estado creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nseguroController.updateOneById = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    const { seguroId } = req.params;\r\n    try {\r\n        const query = await EstadoSeguro.findByIdAndUpdate(seguroId, { name, value, estado });\r\n        if (query) {\r\n            res.json({ message: 'Estado actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: `No existe estado a actualizar`  });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nseguroController.deleteOneById = async(req, res) => {\r\n    const { seguroId } = req.params;\r\n    try {\r\n        const query = await EstadoSeguro.findByIdAndDelete(seguroId);\r\n        if (query) {\r\n            res.json({ message: 'Estado eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Estado a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport default seguroController;"],"file":"estadoSeguro.controller.js"}