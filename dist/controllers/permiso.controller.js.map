{"version":3,"sources":["../../src/controllers/permiso.controller.js"],"names":["permisoController","getAll","req","res","Permiso","find","sort","cod_interno","populate","path","select","query","length","json","total","all","status","message","console","log","findBySubmodule","submodulo","body","SubmoduloG","findOne","name","submoduloFound","submoduloG","_id","one","createOne","rolesPermitidos","estado","obj","submoduleFound","Role","$in","roleFound","map","a","id","save","updateOneById","permisoId","params","subModuleFound","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Permiso from '../models/Permiso';\r\nimport Role from '../models/Role';\r\nimport SubmoduloG from '../models/SubmoduloG';\r\n\r\nconst permisoController = {};\r\n\r\npermisoController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Permiso.find()\r\n        .sort({cod_interno: 1})\r\n        .populate({\r\n            path: 'submoduloG',\r\n            select: 'name estado moduloG',\r\n            populate: {\r\n                path: 'moduloG',\r\n                select: 'name icon menuG',\r\n                populate: {\r\n                    path: 'menuG',\r\n                    select: 'name icon'\r\n                }\r\n            }\r\n        })\r\n        .populate({\r\n            path: 'rolesPermitidos',\r\n            select: 'name descripcion'\r\n        })\r\n\r\n        if(query.length > 0){\r\n            res.json({total: query.length, all: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existen permisos'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});    \r\n    }\r\n}\r\n\r\npermisoController.findBySubmodule = async (req, res) => {\r\n    const {submodulo} = req.body;\r\n    try {\r\n\r\n        const submoduloFound = await SubmoduloG.findOne({name: submodulo});\r\n        // console.log(submoduloFound);\r\n        if(!submoduloFound) return res.status(404).json({message: `Submódulo ${submodulo} no encontrado`}) \r\n\r\n        const query = await Permiso.findOne({submoduloG: submoduloFound._id})\r\n        .populate({\r\n            path: 'submoduloG',\r\n            select: 'name'\r\n        })\r\n        .populate({\r\n            path: 'rolesPermitidos',\r\n            select: 'name descripcion'\r\n        });\r\n\r\n        if(query){\r\n            res.json({total: query.length, one: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existen permisos'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});   \r\n    }\r\n}\r\n\r\npermisoController.createOne = async(req, res) => {\r\n    const {cod_interno, submoduloG, rolesPermitidos,estado} = req.body;\r\n\r\n    try {\r\n        const obj = new Permiso({ cod_interno,estado});\r\n\r\n        const submoduleFound = await SubmoduloG.findOne({name: submoduloG});\r\n        if(!submoduleFound) return res.status(404).json({message: `Submódulo ${submoduloG} no encontrado`});\r\n        obj.submoduloG = submoduleFound._id;\r\n\r\n        const roleFound = await Role.find({name: {$in: rolesPermitidos}});\r\n        if(!roleFound) return res.status(404).json({message: `Rol ${rolesPermitidos} no encontrado`});\r\n        obj.rolesPermitidos = roleFound.map(a => a.id);\r\n\r\n        const query = await obj.save();\r\n\r\n        if(query){\r\n            res.json({message: 'Permiso creado con éxito'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\npermisoController.updateOneById = async(req, res) => {\r\n    const {cod_interno, submoduloG, rolesPermitidos,estado} = req.body;\r\n    const {permisoId} = req.params;\r\n\r\n    try {\r\n\r\n        const roleFound = await Role.find({name: {$in: rolesPermitidos}});\r\n        if(!roleFound) return res.status(404).json({message: `No se encontró el rol ${rolesPermitidos}`});\r\n\r\n        const subModuleFound = await SubmoduloG.findOne({name: submoduloG});\r\n        if(!subModuleFound) return res.status(404).json({message: `Submódulo ${submoduloG} no encontrado`})\r\n        \r\n        const query = await Permiso.findByIdAndUpdate(permisoId,{\r\n            cod_interno,\r\n            submoduloG: subModuleFound._id,\r\n            estado,\r\n            rolesPermitidos: roleFound.map(a => a._id)\r\n        });\r\n\r\n        if(query){\r\n            res.json({message: 'Permiso actualizado con éxito'});\r\n        }else{\r\n            return res.status(404).json({message: 'No existe permiso a actualizar'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\npermisoController.deleteOneById = async(req, res) => {\r\n    const {permisoId} = req.params;\r\n\r\n    try {\r\n        const query = await Permiso.findByIdAndDelete(permisoId);\r\n\r\n        if(query){\r\n            res.json({message: 'Permiso eliminado con éxito'});\r\n        }else{\r\n            return res.status(404).json({message: 'No existe permiso a eliminar'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default permisoController;"],"file":"permiso.controller.js"}