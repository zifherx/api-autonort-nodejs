{"version":3,"sources":["../../src/controllers/roles.controller.js"],"names":["createRole","req","res","body","name","description","newRole","Role","save","roleSaved","json","message","getRoles","find","roles","status","getRolesById","findById","params","roleId","updateRoleById","findByIdAndUpdate","new","updateRole","console","error","deleteRoleById","findByIdAndRemove","deletedRole"],"mappings":"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","sourcesContent":["import Role from '../models/Role'\r\n\r\nexport const createRole = async(req, res) => {\r\n    const { name, description } = req.body;\r\n    const newRole = new Role({ name, description });\r\n\r\n    const roleSaved = await newRole.save();\r\n    res.json({ message: 'Rol creado con éxito' });\r\n}\r\n\r\nexport const getRoles = async(req, res) => {\r\n    const roles = await Role.find();\r\n    res.status(200).json(roles);\r\n}\r\n\r\nexport const getRolesById = async(req, res) => {\r\n    const roles = await Role.findById(req.params.roleId);\r\n    res.status(200).json(roles);\r\n}\r\n\r\nexport const updateRoleById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    const { name, description } = req.body;\r\n    try {\r\n        const updateRole = await Role.findByIdAndUpdate(roleId, { name, description }, { new: true });\r\n        if (updateRole) {\r\n            res.json({ message: 'Rol actualizado con éxito' });\r\n        } else {\r\n            res.status(403).json({ message: 'No Autorizado' });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        //res.status(404).json(err)\r\n    }\r\n\r\n}\r\n\r\nexport const deleteRoleById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    const deletedRole = await Role.findByIdAndRemove(roleId);\r\n    res.json({ message: 'Rol eliminado con éxito' });\r\n}"],"file":"roles.controller.js"}