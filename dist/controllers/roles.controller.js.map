{"version":3,"sources":["../../src/controllers/roles.controller.js"],"names":["createRole","req","res","body","name","description","obj","Role","save","query","json","message","console","log","status","getRoles","find","sort","roles","length","getCountAll","countDocuments","count_roles","getRolesById","roleId","params","findById","updateRoleById","findByIdAndUpdate","updateRole","deleteRoleById","findByIdAndDelete","deletedRole"],"mappings":"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","sourcesContent":["import Role from '../models/Role'\r\n\r\nexport const createRole = async(req, res) => {\r\n    const { name, description } = req.body;\r\n    try {\r\n        const obj = new Role({ name, description });\r\n        const query = await obj.save();\r\n        if (query) {\r\n            res.json({ message: 'Rol creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getRoles = async(req, res) => {\r\n    try {\r\n        const roles = await Role.find().sort({ name: 'asc' });\r\n        if (roles.length > 0) {\r\n            res.json(roles);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Roles' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getCountAll = async(req, res) => {\r\n    try {\r\n        const query = await Role.countDocuments();\r\n        if (query >= 0) return res.json({ count_roles: query });\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getRolesById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    try {\r\n        const roles = await Role.findById(roleId);\r\n        if (roles) {\r\n            res.json(roles);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Rol' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateRoleById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    const { name, description } = req.body;\r\n    try {\r\n        const updateRole = await Role.findByIdAndUpdate(roleId, { name, description });\r\n        if (updateRole) {\r\n            res.json({ message: 'Rol actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe el Rol a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteRoleById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    try {\r\n        const deletedRole = await Role.findByIdAndDelete(roleId);\r\n        if (deletedRole) {\r\n            res.json({ message: 'Rol eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Rol a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"roles.controller.js"}