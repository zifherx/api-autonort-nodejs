{"version":3,"file":"roles.controller.js","names":["roleController","createOne","req","res","body","name","description","estado","obj","Role","save","query","json","message","console","log","status","getAll","find","sort","length","total","all","getAllActivos","total_active","all_active","getOneById","roleId","params","findById","one","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/roles.controller.js"],"sourcesContent":["import Role from '../models/Role';\r\n\r\nconst roleController = {};\r\n\r\nroleController.createOne = async(req, res) => {\r\n    const { name, description, estado } = req.body;\r\n    try {\r\n        const obj = new Role({ name, description,estado });\r\n        const query = await obj.save();\r\n        if (query) {\r\n            res.json({ message: 'Rol creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Role.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Roles' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Role.find({estado: true}).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen roles activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.getOneById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    try {\r\n        const query = await Role.findById(roleId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Rol' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.updateOneById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    const { name, description, estado } = req.body;\r\n    try {\r\n        const query = await Role.findByIdAndUpdate(roleId, { name, description, estado });\r\n        \r\n        if (query) {\r\n            res.json({ message: 'Rol actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Rol a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.deleteOneById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    try {\r\n        const query = await Role.findByIdAndDelete(roleId);\r\n        if (query) {\r\n            res.json({ message: 'Rol eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Rol a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default roleController;"],"mappings":"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"}