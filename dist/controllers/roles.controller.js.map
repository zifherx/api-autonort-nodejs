{"version":3,"sources":["../../src/controllers/roles.controller.js"],"names":["roleController","createOne","req","res","body","name","description","estado","obj","Role","save","query","json","message","console","log","status","getAll","find","sort","length","total","all","getAllActivos","total_active","all_active","getOneById","roleId","params","findById","one","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Role from '../models/Role';\r\n\r\nconst roleController = {};\r\n\r\nroleController.createOne = async(req, res) => {\r\n    const { name, description, estado } = req.body;\r\n    try {\r\n        const obj = new Role({ name, description,estado });\r\n        const query = await obj.save();\r\n        if (query) {\r\n            res.json({ message: 'Rol creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Role.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Roles' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Role.find({estado: true}).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen roles activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.getOneById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    try {\r\n        const query = await Role.findById(roleId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Rol' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.updateOneById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    const { name, description, estado } = req.body;\r\n    try {\r\n        const query = await Role.findByIdAndUpdate(roleId, { name, description, estado });\r\n        \r\n        if (query) {\r\n            res.json({ message: 'Rol actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Rol a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nroleController.deleteOneById = async(req, res) => {\r\n    const { roleId } = req.params;\r\n    try {\r\n        const query = await Role.findByIdAndDelete(roleId);\r\n        if (query) {\r\n            res.json({ message: 'Rol eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Rol a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default roleController;"],"file":"roles.controller.js"}