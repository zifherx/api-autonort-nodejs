{"version":3,"file":"rechazo.controller.js","names":["rechazoController","getAll","req","res","MotivoRechazo","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","motivoId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","area","obj","Area","findOne","areaFound","_id","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/rechazo.controller.js"],"sourcesContent":["import Area from \"../models/Area\";\r\nimport MotivoRechazo from \"../models/MotivoRechazo\";\r\n\r\nconst rechazoController = {};\r\n\r\nrechazoController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await MotivoRechazo.find().sort({ name: 1 })\r\n        .populate({\r\n            path: 'area',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen motivos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nrechazoController.getOneById = async(req, res) => {\r\n    const { motivoId } = req.params;\r\n    try {\r\n        const query = await MotivoRechazo.findById(motivoId)\r\n        .populate({\r\n            path: 'area',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe motivo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nrechazoController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await MotivoRechazo.find({ estado: true })\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'area',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen motivos activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nrechazoController.createOne = async(req, res) => {\r\n    const { name, area, estado } = req.body;\r\n    try {\r\n        const obj = new MotivoRechazo({ name, estado });\r\n\r\n        const areaFound = await Area.findOne({name: area});\r\n        console.log(areaFound);\r\n        if(!areaFound) return res.status(404).json({message: `El área ${area} no encontrado`});\r\n        obj.area = areaFound._id;\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Motivo creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nrechazoController.updateOneById = async(req, res) => {\r\n    const { name, area, estado } = req.body;\r\n    const { motivoId } = req.params;\r\n\r\n    try {\r\n\r\n        const areaFound = await Area.findOne({name: area});\r\n        const query = await MotivoRechazo.findByIdAndUpdate(motivoId, \r\n            { \r\n                name,\r\n                area: areaFound._id,\r\n                estado \r\n            });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Motivo actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe motivo a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nrechazoController.deleteOneById = async(req, res) => {\r\n    const { motivoId } = req.params;\r\n    try {\r\n        const query = await MotivoRechazo.findByIdAndDelete(motivoId);\r\n        if (query) {\r\n            res.json({ message: 'Motivo eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe motivo a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default rechazoController;"],"mappings":"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"}