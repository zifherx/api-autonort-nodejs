{"version":3,"sources":["../../src/controllers/submoduloG.controller.js"],"names":["submoduloController","getAll","req","res","SubmoduloG","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","subModuloId","params","findById","one","getAllByActivos","estado","total_active","all_active","createOne","body","moduloG","obj","ModuloG","findOne","moduloFound","_id","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete","getAllActiveByModulo"],"mappings":"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","sourcesContent":["import { query } from \"express\";\r\nimport ModuloG from \"../models/ModuloG\";\r\nimport SubmoduloG from \"../models/SubmoduloG\";\r\n\r\nconst submoduloController = {};\r\n\r\nsubmoduloController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await SubmoduloG.find()\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'moduloG',\r\n            select: 'name menuG icon',\r\n            populate: {\r\n                path: 'menuG',\r\n                select: 'name icon'\r\n            }\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen submódulos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsubmoduloController.getOneById = async(req, res) => {\r\n    const { subModuloId } = req.params;\r\n    try {\r\n        const query = await SubmoduloG.findById(subModuloId)\r\n        .populate({\r\n            path: 'moduloG',\r\n            select: 'name menuG icon',\r\n            populate: {\r\n                path: 'menuG',\r\n                select: 'name icon'\r\n            }\r\n        });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe submódulo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsubmoduloController.getAllByActivos = async(req, res) => {\r\n    try {\r\n        const query = await SubmoduloG.find({ estado: true })\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'moduloG',\r\n            select: 'name menuG icon',\r\n            populate: {\r\n                path: 'menuG',\r\n                select: 'name icon'\r\n            }\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen submódulos activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nsubmoduloController.createOne = async(req, res) => {\r\n    const { moduloG, name, estado } = req.body;\r\n    try {\r\n        const obj = new SubmoduloG({ name, estado });\r\n\r\n        const moduloFound = await ModuloG.findOne({name: moduloG});\r\n        if(!moduloFound) return res.status(404).json({message: `No se encontró módulo ${moduloG}`})\r\n        obj.moduloG = moduloFound._id;\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Submódulo creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsubmoduloController.updateOneById = async(req, res) => {\r\n    const { moduloG, name, estado } = req.body;\r\n    const { subModuloId } = req.params;\r\n    try {\r\n        const moduloFound = await ModuloG.findOne({name: moduloG});\r\n        if(!moduloFound) return res.status(404).json({message: `No se encontró módulo ${moduloG}`})\r\n        \r\n        const query = await SubmoduloG.findByIdAndUpdate(subModuloId, { \r\n                moduloG: moduloFound._id,\r\n                name,\r\n                estado \r\n            });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Submódulo actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe submódulo a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nsubmoduloController.deleteOneById = async(req, res) => {\r\n    const { subModuloId } = req.params;\r\n    try {\r\n        const query = await SubmoduloG.findByIdAndDelete(subModuloId);\r\n        if (query) {\r\n            res.json({ message: 'Submódulo eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe submódulo a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nsubmoduloController.getAllActiveByModulo = async(req, res) => {\r\n    const {moduloG} = req.body;\r\n\r\n    try {\r\n        const moduloFound = await ModuloG.findOne({name: moduloG });\r\n        if(!moduloFound) return res.status(404).json({message: `Módulo ${moduloG} no encontrado`});\r\n\r\n        const query = await SubmoduloG.find({\r\n            moduloG: moduloFound._id,\r\n            estado: true\r\n        })\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'moduloG',\r\n            select: 'name menuG icon',\r\n            populate: {\r\n                path: 'menuG',\r\n                select: 'name icon'\r\n            }\r\n        });\r\n\r\n        if(query.length > 0){\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen submódulos activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport default submoduloController;"],"file":"submoduloG.controller.js"}