{"version":3,"sources":["../../src/controllers/tipoUso.controller.js"],"names":["usoController","getAll","req","res","TipoUso","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","usoId","params","findById","one","getAllByActivo","estado","total_active","all_active","createOne","body","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import TipoUso from \"../models/TipoUso\";\r\n\r\nconst usoController = {};\r\n\r\nusoController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await TipoUso.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen tipos de uso' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nusoController.getOneById = async(req, res) => {\r\n    const { usoId } = req.params;\r\n    try {\r\n        const query = await TipoUso.findById(usoId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de uso' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nusoController.getAllByActivo = async(req, res) => {\r\n    try {\r\n        const query = await TipoUso.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen tipos de uso activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nusoController.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const obj = new TipoUso({ name, estado });\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Tipo de uso creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nusoController.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { usoId } = req.params;\r\n    try {\r\n        const query = await TipoUso.findByIdAndUpdate(usoId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Tipo de uso actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de uso a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nusoController.deleteOneById = async(req, res) => {\r\n    const { usoId } = req.params;\r\n    try {\r\n        const query = await TipoUso.findByIdAndDelete(usoId);\r\n        if (query) {\r\n            res.json({ message: 'Tipo de uso eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de uso a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default usoController;"],"file":"tipoUso.controller.js"}