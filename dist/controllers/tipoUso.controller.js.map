{"version":3,"file":"tipoUso.controller.js","names":["usoController","getAll","req","res","TipoUso","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","usoId","params","findById","one","getAllByActivo","estado","total_active","all_active","createOne","body","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/tipoUso.controller.js"],"sourcesContent":["import TipoUso from \"../models/TipoUso\";\r\n\r\nconst usoController = {};\r\n\r\nusoController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await TipoUso.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen tipos de uso' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nusoController.getOneById = async(req, res) => {\r\n    const { usoId } = req.params;\r\n    try {\r\n        const query = await TipoUso.findById(usoId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de uso' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nusoController.getAllByActivo = async(req, res) => {\r\n    try {\r\n        const query = await TipoUso.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen tipos de uso activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nusoController.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const obj = new TipoUso({ name, estado });\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Tipo de uso creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nusoController.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { usoId } = req.params;\r\n    try {\r\n        const query = await TipoUso.findByIdAndUpdate(usoId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Tipo de uso actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de uso a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nusoController.deleteOneById = async(req, res) => {\r\n    const { usoId } = req.params;\r\n    try {\r\n        const query = await TipoUso.findByIdAndDelete(usoId);\r\n        if (query) {\r\n            res.json({ message: 'Tipo de uso eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de uso a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default usoController;"],"mappings":"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"}