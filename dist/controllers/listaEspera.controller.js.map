{"version":3,"sources":["../../src/controllers/listaEspera.controller.js"],"names":["listaEsperaController","getAll","req","res","ListaEspera","find","sort","mes_primer_abono","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","itemId","params","findById","one","createOne","body","cod_interno","sucursal","sucursalE","vehiculo","colorE","cantidad","estado","estadoE","orden","cliente","anio_primer_abono","grupo_abonos","precio_venta_final","tipo_venta","financiera","plan_maf","fecha_carta_aprobacion","inicial","solicitudMAF","cuenta_epdp","avance_pago_contado","avance_pago_credito","cumple_politica","createdBy","obj","Sucursal","findOne","name","sucursalFound","_id","Vehicle","cod_tdp","vehiculoFound","Colores","$in","colorFound","map","a","Customer","customerFound","EstadoListaEspera","estadoFound","Anio","anioFound","Mes","mesFound","Financiamiento","tipoVentaFound","undefined","Banco","financieraFound","PlanMAF","planMAFFound","Maf","solicitudMAFFound","User","username","userFound","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete","getCountByEstado","countDocuments"],"mappings":"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","sourcesContent":["import ListaEspera from \"../models/ListaEspera\";\r\nimport Sucursal from \"../models/Sucursal\";\r\nimport Vehicle from \"../models/Vehicle\";\r\nimport Colores from \"../models/Colores\";\r\nimport Customer from \"../models/Customer\";\r\nimport Anio from \"../models/Anio\";\r\nimport Mes from \"../models/Mes\";\r\nimport Financiamiento from \"../models/Financiamiento\";\r\nimport Banco from \"../models/Banco\";\r\nimport PlanMAF from \"../models/PlanMAF\";\r\nimport Maf from \"../models/Maf\";\r\nimport User from \"../models/User\";\r\nimport EstadoListaEspera from \"../models/EstadoListaEspera\";\r\n\r\nconst listaEsperaController = {};\r\n\r\nlistaEsperaController.getAll = async (req, res) => {\r\n    try {\r\n        const query = await ListaEspera.find()\r\n            .sort({ mes_primer_abono: -1 })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"vehiculo\",\r\n                select: \"chasis model cod_tdp version\",\r\n                populate: [\r\n                    {\r\n                        path: \"chasis\",\r\n                        select: \"name\",\r\n                    },\r\n                    {\r\n                        path: \"model\",\r\n                        select: \"name avatar marca\",\r\n                        populate: {\r\n                            path: \"marca\",\r\n                            select: \"name avatar\",\r\n                        },\r\n                    },\r\n                ],\r\n            })\r\n            .populate({\r\n                path: \"colorE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document cellphone email\",\r\n            })\r\n            .populate({\r\n                path: \"estadoE\",\r\n                select: \"name valor\",\r\n            })\r\n            .populate({\r\n                path: \"anio_primer_abono\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"mes_primer_abono\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"tipo_venta\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"financiera\",\r\n                select: \"name avatar\",\r\n            })\r\n            .populate({\r\n                path: \"plan_maf\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"solicitudMAF\",\r\n                select: \"nro_solicitud fecha_ingreso sucursalE customer cuota_inicial seller car estadoSolicitudMAF fecha_aprobacion carta_evidencia\",\r\n                populate: [\r\n                    {\r\n                        path: \"sucursalE\",\r\n                        select: \"name\",\r\n                    },\r\n                    {\r\n                        path: \"customer\",\r\n                        select: \"name document cellphone email\",\r\n                    },\r\n                    {\r\n                        path: \"seller\",\r\n                        select: \"name document sucursalE marcaE\",\r\n                        populate: [\r\n                            {\r\n                                path: \"sucursalE\",\r\n                                select: \"name\",\r\n                            },\r\n                            {\r\n                                path: \"marcaE\",\r\n                                select: \"name avatar\",\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        path: \"car\",\r\n                        select: \"chasis model cod_tdp version\",\r\n                        populate: [\r\n                            {\r\n                                path: \"chasis\",\r\n                                select: \"name\",\r\n                            },\r\n                            {\r\n                                path: \"model\",\r\n                                select: \"name avatar marca\",\r\n                                populate: {\r\n                                    path: \"marca\",\r\n                                    select: \"name avatar\",\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        path: \"estadoSolicitudMAF\",\r\n                        select: \"name\",\r\n                    },\r\n                ],\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n            })\r\n            .populate({\r\n                path: \"updatedBy\",\r\n                select: \"name username\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existen clientes en espera\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nlistaEsperaController.getOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n\r\n    try {\r\n        const query = await ListaEspera.findById(itemId)\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"vehiculo\",\r\n                select: \"chasis model cod_tdp version\",\r\n                populate: [\r\n                    {\r\n                        path: \"chasis\",\r\n                        select: \"name\",\r\n                    },\r\n                    {\r\n                        path: \"model\",\r\n                        select: \"name avatar marca\",\r\n                        populate: {\r\n                            path: \"marca\",\r\n                            select: \"name avatar\",\r\n                        },\r\n                    },\r\n                ],\r\n            })\r\n            .populate({\r\n                path: \"colorE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document cellphone email\",\r\n            })\r\n            .populate({\r\n                path: \"estadoE\",\r\n                select: \"name valor\",\r\n            })\r\n            .populate({\r\n                path: \"anio_primer_abono\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"mes_primer_abono\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"tipo_venta\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"financiera\",\r\n                select: \"name avatar\",\r\n            })\r\n            .populate({\r\n                path: \"plan_maf\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"solicitudMAF\",\r\n                select: \"nro_solicitud fecha_ingreso sucursalE customer cuota_inicial seller car estadoSolicitudMAF fecha_aprobacion carta_evidencia\",\r\n                populate: [\r\n                    {\r\n                        path: \"sucursalE\",\r\n                        select: \"name\",\r\n                    },\r\n                    {\r\n                        path: \"customer\",\r\n                        select: \"name document cellphone email\",\r\n                    },\r\n                    {\r\n                        path: \"seller\",\r\n                        select: \"name document sucursalE marcaE\",\r\n                        populate: [\r\n                            {\r\n                                path: \"sucursalE\",\r\n                                select: \"name\",\r\n                            },\r\n                            {\r\n                                path: \"marcaE\",\r\n                                select: \"name avatar\",\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        path: \"car\",\r\n                        select: \"chasis model cod_tdp version\",\r\n                        populate: [\r\n                            {\r\n                                path: \"chasis\",\r\n                                select: \"name\",\r\n                            },\r\n                            {\r\n                                path: \"model\",\r\n                                select: \"name avatar marca\",\r\n                                populate: {\r\n                                    path: \"marca\",\r\n                                    select: \"name avatar\",\r\n                                },\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        path: \"estadoSolicitudMAF\",\r\n                        select: \"name\",\r\n                    },\r\n                ],\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n            })\r\n            .populate({\r\n                path: \"updatedBy\",\r\n                select: \"name username\",\r\n            });\r\n\r\n        if (query) {\r\n            res.json({ one: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No se encontró el cliente en la lista de espera\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nlistaEsperaController.createOne = async (req, res) => {\r\n    const {\r\n        cod_interno,\r\n        sucursal,\r\n        sucursalE,\r\n        vehiculo,\r\n        colorE,\r\n        cantidad,\r\n        estado,\r\n        estadoE,\r\n        orden,\r\n        cliente,\r\n        anio_primer_abono,\r\n        mes_primer_abono,\r\n        grupo_abonos,\r\n        precio_venta_final,\r\n        tipo_venta,\r\n        financiera,\r\n        plan_maf,\r\n        fecha_carta_aprobacion,\r\n        inicial,\r\n        solicitudMAF,\r\n        cuenta_epdp,\r\n        avance_pago_contado,\r\n        avance_pago_credito,\r\n        cumple_politica,\r\n        createdBy,\r\n    } = req.body;\r\n\r\n    try {\r\n        const obj = new ListaEspera({\r\n            cod_interno,\r\n            sucursal,\r\n            cantidad,\r\n            orden,\r\n            estado,\r\n            grupo_abonos,\r\n            precio_venta_final,\r\n            fecha_carta_aprobacion,\r\n            inicial,\r\n            cuenta_epdp,\r\n            avance_pago_contado,\r\n            avance_pago_credito,\r\n            cumple_politica,\r\n        });\r\n\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrada` });\r\n        obj.sucursalE = sucursalFound._id;\r\n\r\n        const vehiculoFound = await Vehicle.findOne({ cod_tdp: vehiculo });\r\n        if (!vehiculoFound) return res.status(404).json({ message: `Vehículo ${vehiculo} no encontrado` });\r\n        obj.vehiculo = vehiculoFound._id;\r\n\r\n        const colorFound = await Colores.find({ name: { $in: colorE } });\r\n        if (!colorFound) return res.status(404).json({ message: `Color ${colorE} no encontrado` });\r\n        obj.colorE = colorFound.map((a) => a._id);\r\n\r\n        const customerFound = await Customer.findOne({ name: cliente });\r\n        if (!customerFound) return res.status(404).json({ message: `Cliente ${cliente} no encontrado` });\r\n        obj.cliente = customerFound._id;\r\n\r\n        const estadoFound = await EstadoListaEspera.findOne({ name: estadoE });\r\n        if (!estadoFound) return res.status(404).json({ message: `Estado ${estadoE} no encontrado` });\r\n        obj.estadoE = estadoFound._id;\r\n\r\n        const anioFound = await Anio.findOne({ name: anio_primer_abono });\r\n        if (!anioFound) return res.status(404).json({ message: `Anio ${anio_primer_abono} no encontrado` });\r\n        obj.anio_primer_abono = anioFound._id;\r\n\r\n        const mesFound = await Mes.findOne({ name: mes_primer_abono });\r\n        if (!mesFound) return res.status(404).json({ message: `Mes ${mes_primer_abono} no encontrado` });\r\n        obj.mes_primer_abono = mesFound._id;\r\n\r\n        const tipoVentaFound = await Financiamiento.findOne({ name: tipo_venta });\r\n        if (!tipoVentaFound) return res.status(404).json({ message: `Tipo Venta ${tipo_venta} no encontrado` });\r\n        obj.tipo_venta = tipoVentaFound._id;\r\n\r\n        if (financiera == null || financiera == undefined) {\r\n            obj.financiera = null;\r\n        } else {\r\n            const financieraFound = await Banco.findOne({ name: financiera });\r\n            if (!financieraFound) return res.status(404).json({ message: `Financiera ${financiera} no encontrada` });\r\n            obj.financiera = financieraFound._id;\r\n        }\r\n\r\n        if (plan_maf == null || plan_maf == undefined) {\r\n            obj.plan_maf = null;\r\n        } else {\r\n            const planMAFFound = await PlanMAF.findOne({ name: plan_maf });\r\n            if (!planMAFFound) return res.status(404).json({ message: `Plan MAF ${plan_maf} no encontrado` });\r\n            obj.plan_maf = planMAFFound._id;\r\n        }\r\n\r\n        if (solicitudMAF == null || solicitudMAF == undefined) {\r\n            obj.solicitudMAF = null;\r\n        } else {\r\n            const solicitudMAFFound = await Maf.findOne({ name: solicitudMAF });\r\n            if (!solicitudMAFFound) return res.status(404).json({ message: `Solicitud MAF ${solicitudMAF} no encontrada` });\r\n            obj.solicitudMAF = solicitudMAFFound._id;\r\n        }\r\n\r\n        const userFound = await User.findOne({ username: createdBy });\r\n        if (!userFound) return res.status(404).json({ message: `Usuario ${createdBy} no encontrado` });\r\n        obj.createdBy = userFound._id;\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: \"Cliente agregado a lista de espera con éxito\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nlistaEsperaController.updateOneById = async (req, res) => {\r\n    const { sucursal, sucursalE, orden, estado, estadoE, cliente, vehiculo, cantidad, grupo_abonos } = req.body;\r\n    const { itemId } = req.params;\r\n\r\n    try {\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrada` });\r\n\r\n        const vehiculoFound = await Vehicle.findOne({ cod_tdp: vehiculo });\r\n        if (!vehiculoFound) return res.status(404).json({ message: `Vehículo ${vehiculo} no encontrado` });\r\n\r\n        const customerFound = await Customer.findOne({ name: cliente });\r\n        if (!customerFound) return res.status(404).json({ message: `Cliente ${cliente} no encontrado` });\r\n\r\n        const estadoFound = await EstadoListaEspera.findOne({ name: estadoE });\r\n        if (!estadoFound) return res.status(404).json({ message: `Estado ${estadoE} no encontrado` });\r\n\r\n        const query = await ListaEspera.findByIdAndUpdate(itemId,{\r\n            sucursal,\r\n            sucursalE: sucursalFound._id,\r\n            orden,\r\n            estado,\r\n            estadoE: estadoFound._id,\r\n            cliente: customerFound._id,\r\n            vehiculo: vehiculoFound._id,\r\n            cantidad,\r\n            grupo_abonos\r\n        });\r\n\r\n        if(query){\r\n            res.json({message: 'Cliente actualizado!'});\r\n        }else{\r\n            res.status(404).json({message: 'No se encontró el cliente a actualizar'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nlistaEsperaController.deleteOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n\r\n    try {\r\n        const query = await ListaEspera.findByIdAndDelete(itemId);\r\n\r\n        if (query) {\r\n            res.json({ message: \"Cliente eliminado de la lista de espera con éxito\" });\r\n        } else {\r\n            return res.status(404).json({ message: `No se encuentra cliente a eliminar` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nlistaEsperaController.getCountByEstado = async (req, res) => {\r\n    const { estadoE } = req.body;\r\n\r\n    try {\r\n        const estadoFound = await EstadoListaEspera.findOne({name: estadoE});\r\n        if(!estadoFound) return res.status(404).json({message: `Estado ${estadoE} no encontrado`});\r\n\r\n        const query = await ListaEspera.find({estadoE: estadoFound._id}).countDocuments();\r\n\r\n        if (query >= 0) {\r\n            res.json({ total: query });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nexport default listaEsperaController;\r\n"],"file":"listaEspera.controller.js"}