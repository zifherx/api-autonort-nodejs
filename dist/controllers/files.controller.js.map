{"version":3,"sources":["../../src/controllers/files.controller.js"],"names":["fileController","getAll","req","res","Sale","find","sort","fecha_cancelacion","populate","path","select","strictPopulate","query","length","json","total","all","status","message","console","log","getOneById","itemId","params","findById","one","err","createOne","body","vendedor","cliente","auto","serie_tdp","colorE","precio","anioFabricacionE","anioModeloE","ubicacionVehiculoE","estadoVehiculoE","fecha_ciguena","fecha_entrega","financiamientoE","bancoE","solicitudMAF","adelantosE","campaniasTDPE","ofertaTDPE","campaniasMafE","ofertaMafE","isToyotaValue","arrayToyotaValues","descuento_autonort","acuerdoTDP","observacion_adv","accesoriosE","condicionAccesorioE","condicion_accesorios","tipoOperacionE","tipoComprobanteE","nro_comprobante","fecha_comprobante","sucursal_venta","sucursalE","estadoVentaE","estatus_venta","fecha_facturacion_tdp","estadoFacturacionE","monto_facturado","createdBy","fechaCreacionS","newSale","Seller","findOne","name","sellerFound","_id","Vehicle","cod_tdp","carFound","Customer","document","customerFound","undefined","Colores","colorFound","Anio","anioFFound","anioMFound","Ubicacion","ubicacionFound","Condicion","estadoVehicularFound","Financiamiento","financiamientoFound","Banco","bancoFound","Maf","nro_solicitud","mafFound","Campania","cod_interno","$in","campaniaTDPFound","map","a","campaniaMAFFound","Operacion","operacionFound","User","username","userFound","TipoComprobante","comprobanteFound","CondicionAccesorio","condicionFound","Sucursal","sucursalFound","Situacion","situacionFound","StatusFacturacion","facturacionFound","AccesorioE","accesorioFound","save","updateOneById","ubicacion_vehiculo","estatus_vehiculo","colorNull","anioFNull","anioMNull","ubicacionNull","financiamientoNull","bancoNull","solicitudNull","condicionAccNull","comprobanteNull","facturacionNull","autoFound","anioFound","accesoriosFound","findByIdAndUpdate","id","deleteOneById","findByIdAndDelete","getFilesBySucursalyFecha","start","end","entregados","$regex","$gte","Date","$lte","groupFilesByEstado","aggregate","$match","$group","estado","num_ventas","$sum","$sort","ranking","conteoFilesByEstado","ubicacion","isEntregado","countDocuments","count","rankingFilesByUbicacion","qty","getFilesByEstado","tramite","pasoaTramite","rankingFilesByModelo","rankingFilesBySeller","estadoE","getFilesByToyotaValue","getFilesByImporteAccesorios","$expr","$gt","$size","$ifNull"],"mappings":"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","sourcesContent":["import Sale from \"../models/Sale\";\r\nimport Vehicle from \"../models/Vehicle\";\r\nimport Seller from \"../models/Seller\";\r\nimport Customer from \"../models/Customer\";\r\nimport Colores from \"../models/Colores\";\r\nimport Ubicacion from \"../models/Ubicacion\";\r\nimport Financiamiento from \"../models/Financiamiento\";\r\nimport Banco from \"../models/Banco\";\r\nimport Campania from \"../models/Campania\";\r\nimport Maf from \"../models/Maf\";\r\nimport Operacion from \"../models/Operacion\";\r\nimport TipoComprobante from \"../models/TipoComprobante\";\r\nimport Situacion from \"../models/Situacion\";\r\nimport Sucursal from \"../models/Sucursal\";\r\nimport StatusFacturacion from \"../models/StatusFacturacion\";\r\nimport User from \"../models/User\";\r\nimport AccesorioE from \"../models/AccesorioE\";\r\nimport CondicionAccesorio from \"../models/CondicionAccesorio\";\r\nimport Anio from \"../models/Anio\";\r\nimport Condicion from \"../models/Condicion\";\r\n\r\nconst fileController = {};\r\n\r\nfileController.getAll = async (req, res) => {\r\n    try {\r\n        const query = await Sale.find()\r\n            .sort({\r\n                fecha_cancelacion: -1,\r\n            })\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name sucursal\",\r\n            })\r\n            .populate({\r\n                path: \"auto\",\r\n                select: \"model version cod_tdp\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"marca name avatar\",\r\n                    populate: {\r\n                        path: \"marca\",\r\n                        select: \"name avatar\",\r\n                    },\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"colorE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioFabricacionE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioModeloE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"ubicacionVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"financiamientoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"bancoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoOperacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoComprobanteE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVentaE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"estadoFacturacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate(\"campanias\")\r\n            .populate(\"adicional\")\r\n            .populate(\"accesorios\")\r\n            .populate({\r\n                path: \"empleado\",\r\n                select: \"name username\",\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n                strictPopulate: true,\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen expedientes` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n\r\n    try {\r\n        const query = await Sale.findById(itemId)\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name sucursal\",\r\n            })\r\n            .populate({\r\n                path: \"auto\",\r\n                select: \"model version cod_tdp\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"marca name avatar\",\r\n                    populate: {\r\n                        path: \"marca\",\r\n                        select: \"name avatar\",\r\n                    },\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"colorE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioFabricacionE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioModeloE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"ubicacionVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"financiamientoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"bancoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"solicitudMAF\",\r\n                select: \"nro_solicitud fecha_ingreso customer\",\r\n                populate: {\r\n                    path: \"customer\",\r\n                    select: \"name document\",\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"campaniasTDPE\",\r\n                select: \"cod_interno descripcion tipo oferta\",\r\n                populate: {\r\n                    path: \"tipo\",\r\n                    select: \"name\",\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"campaniasMafE\",\r\n                select: \"cod_interno descripcion tipo oferta\",\r\n                populate: {\r\n                    path: \"tipo\",\r\n                    select: \"name\",\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"accesoriosE\",\r\n                select: \"cod_interno name model precio\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"name\",\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"condicionAccesorioE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"tipoOperacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoComprobanteE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({ path: \"estadoVentaE\", select: \"name document\" })\r\n            .populate({\r\n                path: \"estadoFacturacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate(\"campanias\")\r\n            .populate(\"adicional\")\r\n            .populate(\"accesorios\")\r\n            .populate({\r\n                path: \"empleado\",\r\n                select: \"name username\",\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n                strictPopulate: false,\r\n            });\r\n\r\n        if (query) {\r\n            res.json({ one: query });\r\n        } else {\r\n            return res.status(404).json({ message: err.message });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.createOne = async (req, res) => {\r\n    const {\r\n        vendedor,\r\n        cliente,\r\n        auto,\r\n        serie_tdp,\r\n        colorE,\r\n        precio,\r\n        anioFabricacionE,\r\n        anioModeloE,\r\n        ubicacionVehiculoE,\r\n        estadoVehiculoE,\r\n        fecha_ciguena,\r\n        fecha_entrega,\r\n        financiamientoE,\r\n        bancoE,\r\n        solicitudMAF,\r\n        adelantosE,\r\n        campaniasTDPE,\r\n        ofertaTDPE,\r\n        campaniasMafE,\r\n        ofertaMafE,\r\n        isToyotaValue,\r\n        arrayToyotaValues,\r\n        descuento_autonort,\r\n        acuerdoTDP,\r\n        observacion_adv,\r\n        accesoriosE,\r\n        condicionAccesorioE,\r\n        condicion_accesorios,\r\n        tipoOperacionE,\r\n        tipoComprobanteE,\r\n        nro_comprobante,\r\n        fecha_comprobante,\r\n        sucursal_venta,\r\n        sucursalE,\r\n        estadoVentaE,\r\n        estatus_venta,\r\n        fecha_cancelacion,\r\n        fecha_facturacion_tdp,\r\n        estadoFacturacionE,\r\n        monto_facturado,\r\n        createdBy,\r\n        fechaCreacionS,\r\n    } = req.body;\r\n\r\n    try {\r\n        const newSale = new Sale({\r\n            serie_tdp,\r\n            precio,\r\n            fecha_ciguena,\r\n            fecha_entrega,\r\n            adelantosE,\r\n            ofertaTDPE,\r\n            ofertaMafE,\r\n            isToyotaValue,\r\n            arrayToyotaValues,\r\n            descuento_autonort,\r\n            acuerdoTDP,\r\n            observacion_adv,\r\n            condicion_accesorios,\r\n            fecha_facturacion_tdp,\r\n            monto_facturado,\r\n            nro_comprobante,\r\n            fecha_comprobante,\r\n            fecha_cancelacion,\r\n            estatus_venta,\r\n            sucursal_venta,\r\n            fechaCreacionS,\r\n        });\r\n\r\n        //Seller Obligado\r\n        const sellerFound = await Seller.findOne({ name: vendedor });\r\n        if (!sellerFound) return res.status(404).json({ message: `Vendedor ${vendedor} no encontrado` });\r\n        newSale.vendedor = sellerFound._id;\r\n\r\n        //Vehicle Obligado\r\n        const carFound = await Vehicle.findOne({ cod_tdp: auto });\r\n        if (!carFound) return res.status(404).json({ message: `Vehículo ${auto} no encontrado` });\r\n        newSale.auto = carFound._id;\r\n\r\n        //Customer Obligado\r\n        const customerFound = await Customer.findOne({ document: cliente });\r\n        if (!customerFound) return res.status(404).json({ message: `Cliente ${cliente} no encontrado` });\r\n        newSale.cliente = customerFound._id;\r\n\r\n        //Item Null\r\n        if (colorE == null || colorE == undefined || colorE == \"\") {\r\n            newSale.colorE = null;\r\n        } else {\r\n            const colorFound = await Colores.findOne({ name: colorE });\r\n            if (!colorFound) return res.status(404).json({ message: `Cliente ${colorE} no encontrado` });\r\n            newSale.colorE = colorFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (anioFabricacionE == null || anioFabricacionE == undefined || anioFabricacionE == \"\") {\r\n            newSale.anioFabricacionE = null;\r\n        } else {\r\n            const anioFFound = await Anio.findOne({ name: anioFabricacionE });\r\n            if (!anioFFound) return res.status(404).json({ message: `Año Fabricación ${anioFabricacionE} no encontrado` });\r\n            newSale.anioFabricacionE = anioFFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (anioModeloE == null || anioModeloE == undefined || anioModeloE == \"\") {\r\n            newSale.anioModeloE = null;\r\n        } else {\r\n            const anioMFound = await Anio.findOne({ name: anioModeloE });\r\n            if (!anioMFound) return res.status(404).json({ message: `Año Modelo ${anioModeloE} no encontrado` });\r\n            newSale.anioModeloE = anioMFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (ubicacionVehiculoE == null || ubicacionVehiculoE == undefined || ubicacionVehiculoE == \"\") {\r\n            newSale.ubicacionVehiculoE = null;\r\n        } else {\r\n            const ubicacionFound = await Ubicacion.findOne({ name: ubicacionVehiculoE });\r\n            if (!ubicacionFound) return res.status(404).json({ message: `Ubicación ${ubicacionVehiculoE} no encontrado` });\r\n            newSale.ubicacionVehiculoE = ubicacionFound._id;\r\n        }\r\n\r\n        //Condición obligada\r\n        const estadoVehicularFound = await Condicion.findOne({ name: estadoVehiculoE });\r\n        if (!estadoVehicularFound) return res.status(404).json({ message: `Estado vehicular ${estadoVehiculoE} no encontrado` });\r\n        newSale.estadoVehiculoE = estadoVehicularFound._id;\r\n\r\n        //Item Null\r\n        if (financiamientoE == null || financiamientoE == undefined || financiamientoE == \"\") {\r\n            newSale.financiamientoE = null;\r\n        } else {\r\n            const financiamientoFound = await Financiamiento.findOne({ name: financiamientoE });\r\n            if (!financiamientoFound) return res.status(404).json({ message: `Financiamiento ${financiamientoE} no encontrado` });\r\n            newSale.financiamientoE = financiamientoFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (bancoE == null || bancoE == undefined || bancoE == \"\") {\r\n            newSale.bancoE = null;\r\n        } else {\r\n            const bancoFound = await Banco.findOne({ name: bancoE });\r\n            if (!bancoFound) return res.status(404).json({ message: `Banco ${bancoE} no encontrado` });\r\n            newSale.bancoE = bancoFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (solicitudMAF == null || solicitudMAF == undefined || solicitudMAF == \"\") {\r\n            newSale.solicitudMAF = null;\r\n        } else {\r\n            const mafFound = await Maf.findOne({ nro_solicitud: solicitudMAF });\r\n            if (!mafFound) return res.status(404).json({ message: `Solicitud ${solicitudMAF} no encontrada` });\r\n            newSale.solicitudMAF = mafFound._id;\r\n        }\r\n\r\n        const campaniaTDPFound = await Campania.find({ cod_interno: { $in: campaniasTDPE } });\r\n        if (!campaniaTDPFound) return res.status(404).json({ message: `Campaña TDP ${campaniasTDPE} no encontrada` });\r\n        newSale.campaniasTDPE = campaniaTDPFound.map((a) => a._id);\r\n\r\n        const campaniaMAFFound = await Campania.find({ cod_interno: { $in: campaniasMafE } });\r\n        if (!campaniaMAFFound) return res.status(404).json({ message: `Campaña MAF ${campaniasMafE} no encontrada` });\r\n        newSale.campaniasMafE = campaniaMAFFound.map((a) => a._id);\r\n\r\n        //Operacion obligada\r\n        const operacionFound = await Operacion.findOne({ name: tipoOperacionE });\r\n        if (!operacionFound) return res.status(404).json({ message: `Tipo operación ${tipoOperacionE} no encontrada` });\r\n        newSale.tipoOperacionE = operacionFound._id;\r\n\r\n        //User Obligado\r\n        const userFound = await User.findOne({ username: createdBy });\r\n        if (!userFound) return res.status(404).json({ message: `Colaborador ${createdBy} no encontrado` });\r\n        newSale.createdBy = userFound._id;\r\n\r\n        //Item Null\r\n        if (tipoComprobanteE == null || tipoComprobanteE == undefined || tipoComprobanteE == \"\") {\r\n            newSale.tipoComprobanteE = null;\r\n        } else {\r\n            const comprobanteFound = await TipoComprobante.findOne({ name: tipoComprobanteE });\r\n            if (!comprobanteFound) return res.status(404).json({ message: `Tipo comprobante ${tipoComprobanteE} no encontrado` });\r\n            newSale.tipoComprobanteE = comprobanteFound._id;\r\n        }\r\n\r\n        // Item Null\r\n        if (condicionAccesorioE == null || condicionAccesorioE == undefined || condicionAccesorioE == \"\") {\r\n            newSale.condicionAccesorioE = null;\r\n        } else {\r\n            const condicionFound = await CondicionAccesorio.findOne({ name: condicionAccesorioE });\r\n            if (!condicionFound) return res.status(404).json({ message: `Condición accesorio ${condicionAccesorioE} no encontrada` });\r\n            newSale.condicionAccesorioE = condicionFound._id;\r\n        }\r\n\r\n        //Sucursal Obligado\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrada` });\r\n        newSale.sucursalE = sucursalFound._id;\r\n\r\n        //Situacion Obligado\r\n        const situacionFound = await Situacion.findOne({ name: estadoVentaE });\r\n        if (!situacionFound) return res.status(404).json({ message: `Estado de Venta ${estadoVentaE} no encontrado` });\r\n        newSale.estadoVentaE = situacionFound._id;\r\n\r\n        //Item Null\r\n        if (estadoFacturacionE == null || estadoFacturacionE == undefined || estadoFacturacionE == \"\") {\r\n            newSale.estadoFacturacionE = null;\r\n        } else {\r\n            const facturacionFound = await StatusFacturacion.findOne({ name: estadoFacturacionE });\r\n            if (!facturacionFound) return res.status(404).json({ message: `Estado de Venta ${estadoFacturacionE} no encontrado` });\r\n            newSale.estadoFacturacionE = facturacionFound._id;\r\n        }\r\n\r\n        const accesorioFound = await AccesorioE.find({ cod_interno: { $in: accesoriosE } });\r\n        if (!accesorioFound) return res.status(404).json({ message: `Accesorio ${accesoriosE} no encontrado` });\r\n        newSale.accesoriosE = accesorioFound.map((a) => a._id);\r\n\r\n        const query = await newSale.save();\r\n\r\n        if (query) {\r\n            res.json({ message: \"Expediente creado con éxito\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.updateOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n    const {\r\n        vendedor,\r\n        cliente,\r\n        auto,\r\n        serie_tdp,\r\n        colorE,\r\n        precio,\r\n        anioFabricacionE,\r\n        anioModeloE,\r\n        ubicacionVehiculoE,\r\n        ubicacion_vehiculo,\r\n        estadoVehiculoE,\r\n        estatus_vehiculo,\r\n        fecha_ciguena,\r\n        fecha_entrega,\r\n        financiamientoE,\r\n        bancoE,\r\n        solicitudMAF,\r\n        adelantosE,\r\n        campaniasTDPE,\r\n        ofertaTDPE,\r\n        campaniasMafE,\r\n        ofertaMafE,\r\n        isToyotaValue,\r\n        arrayToyotaValues,\r\n        descuento_autonort,\r\n        acuerdoTDP,\r\n        observacion_adv,\r\n        accesoriosE,\r\n        condicion_accesorios,\r\n        condicionAccesorioE,\r\n        tipoOperacionE,\r\n        tipoComprobanteE,\r\n        nro_comprobante,\r\n        fecha_comprobante,\r\n        sucursal_venta,\r\n        sucursalE,\r\n        estadoVentaE,\r\n        fecha_cancelacion,\r\n        estatus_venta,\r\n        fecha_facturacion_tdp,\r\n        estadoFacturacionE,\r\n        monto_facturado,\r\n    } = req.body;\r\n\r\n    // Opcionales\r\n    let colorNull = null;\r\n    let anioFNull = null;\r\n    let anioMNull = null;\r\n    let ubicacionNull = null;\r\n    let financiamientoNull = null;\r\n    let bancoNull = null;\r\n    let solicitudNull = null;\r\n    let condicionAccNull = null;\r\n    let comprobanteNull = null;\r\n    let facturacionNull = null;\r\n\r\n    try {\r\n        //Vendedor - Obligatorio\r\n        const sellerFound = await Seller.findOne({ name: vendedor });\r\n        if (!sellerFound) return res.status(404).json({ message: `Vendedor ${vendedor} no encontrado` });\r\n\r\n        //Cliente - Obligatorio\r\n        const customerFound = await Customer.findOne({ document: cliente });\r\n        if (!customerFound) return res.status(404).json({ message: `Cliente ${cliente} no encontrado` });\r\n\r\n        // Vehículo - Obligatorio\r\n        const autoFound = await Vehicle.findOne({ cod_tdp: auto });\r\n        if (!autoFound) return res.status(404).json({ message: `Vehículo ${auto} no encontrado` });\r\n\r\n        // Estado Vehicular - Obligatorio\r\n        const estadoVehicularFound = await Condicion.findOne({ name: estadoVehiculoE });\r\n        if (!estadoVehicularFound) return res.status(404).json({ message: `Condición ${estadoVehiculoE} no encontrado` });\r\n\r\n        // Operación - Obligatorio\r\n        const operacionFound = await Operacion.findOne({ name: tipoOperacionE });\r\n        if (!operacionFound) return res.status(404).json({ message: `Operación ${tipoOperacionE} no encontrado` });\r\n\r\n        // Sucursal - Obligatorio\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrado` });\r\n\r\n        // Situacion - Obligatorio\r\n        const situacionFound = await Situacion.findOne({ name: estadoVentaE });\r\n        if (!situacionFound) return res.status(404).json({ message: `Estado de venta ${estadoVentaE} no encontrado` });\r\n\r\n        // Color - Opcional\r\n        if (colorE == null || colorE == undefined || colorE == \"\") {\r\n            colorNull = null;\r\n        } else {\r\n            const colorFound = await Colores.findOne({ name: colorE });\r\n            if (!colorFound) return res.status(404).json({ message: `Color ${colorE} no encontrado` });\r\n            colorNull = colorFound._id;\r\n        }\r\n\r\n        // Año Fab - Opcional\r\n        if (anioFabricacionE == null || anioFabricacionE == undefined || anioFabricacionE == \"\") {\r\n            anioFNull = null;\r\n        } else {\r\n            const anioFound = await Anio.findOne({ name: anioFabricacionE });\r\n            if (!anioFound) return res.status(404).json({ message: `Año ${anioFabricacionE} no encontrado` });\r\n            anioFNull = anioFound._id;\r\n        }\r\n\r\n        // Año Mod - Opcional\r\n        if (anioModeloE == null || anioModeloE == undefined || anioModeloE == \"\") {\r\n            anioMNull = null;\r\n        } else {\r\n            const anioFound = await Anio.findOne({ name: anioModeloE });\r\n            if (!anioFound) return res.status(404).json({ message: `Año ${anioModeloE} no encontrado` });\r\n            anioMNull = anioFound._id;\r\n        }\r\n\r\n        // Ubicación Vehicular - Opcional\r\n        if (ubicacionVehiculoE == null || ubicacionVehiculoE == undefined || ubicacionVehiculoE == \"\") {\r\n            ubicacionNull = null;\r\n        } else {\r\n            const ubicacionFound = await Ubicacion.findOne({ name: ubicacionVehiculoE });\r\n            if (!ubicacionFound) return res.status(404).json({ message: `Ubicación ${ubicacionVehiculoE} no encontrada` });\r\n            ubicacionNull = ubicacionFound._id;\r\n        }\r\n\r\n        // Financiamiento - Opcional\r\n        if (financiamientoE == null || financiamientoE == undefined || financiamientoE == \"\") {\r\n            financiamientoNull = null;\r\n        } else {\r\n            const financiamientoFound = await Financiamiento.findOne({ name: financiamientoE });\r\n            if (!financiamientoFound) return res.status(404).json({ message: `Financiamiento ${financiamientoE} no encontrado` });\r\n            financiamientoNull = financiamientoFound._id;\r\n        }\r\n\r\n        // Banco - Opcional\r\n        if (bancoE == null || bancoE == undefined || bancoE == \"\") {\r\n            bancoNull = null;\r\n        } else {\r\n            const bancoFound = await Banco.findOne({ name: bancoE });\r\n            if (!bancoFound) return res.status(404).json({ message: `Banco ${bancoE} no encontrado` });\r\n            bancoNull = bancoFound._id;\r\n        }\r\n\r\n        // Solicitud MAF - Opcional\r\n        if (solicitudMAF == null || solicitudMAF == undefined || solicitudMAF == \"\") {\r\n            solicitudNull = null;\r\n        } else {\r\n            const mafFound = await Maf.findOne({ nro_solicitud: solicitudMAF });\r\n            if (!mafFound) return res.status(404).json({ message: `Solicitud ${solicitudMAF} no encontrada` });\r\n            solicitudNull = mafFound._id;\r\n        }\r\n\r\n        // Campania TDP - Opcional\r\n        const campaniaTDPFound = await Campania.find({ cod_interno: { $in: campaniasTDPE } });\r\n        if (!campaniaTDPFound) return res.status(404).json({ message: `Campaña TDP ${campaniasTDPE} no encontrada` });\r\n\r\n        // Campania MAF - Opcional\r\n        const campaniaMAFFound = await Campania.find({ cod_interno: { $in: campaniasMafE } });\r\n        if (!campaniaMAFFound) return res.status(404).json({ message: `Campaña TDP ${campaniasMafE} no encontrada` });\r\n\r\n        // Accesorios - Opcional\r\n        const accesoriosFound = await AccesorioE.find({ cod_interno: { $in: accesoriosE } });\r\n        if (!accesoriosFound) return res.status(404).json({ message: `Accesorio ${accesoriosE} no encontrado` });\r\n\r\n        // Condicion Accesorio - Opcional\r\n        if (condicionAccesorioE == null || condicionAccesorioE == undefined || condicionAccesorioE == \"\") {\r\n            condicionAccNull = null;\r\n        } else {\r\n            const condicionFound = await CondicionAccesorio.findOne({ name: condicionAccesorioE });\r\n            if (!condicionFound) return res.status(404).json({ message: `Condición accesorio ${condicionAccesorioE} no encontrada` });\r\n            condicionAccNull = condicionFound._id;\r\n        }\r\n\r\n        // Tipo Comprobante - Opcional\r\n        if (tipoComprobanteE == null || tipoComprobanteE == undefined || tipoComprobanteE == \"\") {\r\n            comprobanteNull = null;\r\n        } else {\r\n            const comprobanteFound = await TipoComprobante.findOne({ name: tipoComprobanteE });\r\n            if (!comprobanteFound) return res.status(404).json({ message: `Tipo comprobante ${tipoComprobanteE} no encontrado` });\r\n            comprobanteNull = comprobanteFound._id;\r\n        }\r\n\r\n        // Estado Facturacion - Opcional\r\n        if (estadoFacturacionE == null || estadoFacturacionE == undefined || estadoFacturacionE == \"\") {\r\n            facturacionNull = null;\r\n        } else {\r\n            const facturacionFound = await StatusFacturacion.findOne({ name: estadoFacturacionE });\r\n            if (!facturacionFound) return res.status(404).json({ message: `Facturación ${estadoFacturacionE} no encontrado` });\r\n            facturacionNull = facturacionFound._id;\r\n        }\r\n\r\n        const query = await Sale.findByIdAndUpdate(itemId, {\r\n            serie_tdp,\r\n            precio,\r\n            ubicacion_vehiculo,\r\n            estatus_vehiculo,\r\n            fecha_ciguena,\r\n            fecha_entrega,\r\n            adelantosE,\r\n            isToyotaValue,\r\n            arrayToyotaValues,\r\n            descuento_autonort,\r\n            acuerdoTDP,\r\n            observacion_adv,\r\n            condicion_accesorios,\r\n            nro_comprobante,\r\n            fecha_comprobante,\r\n            sucursal_venta,\r\n            fecha_cancelacion,\r\n            estatus_venta,\r\n            fecha_facturacion_tdp,\r\n            monto_facturado,\r\n            vendedor: sellerFound._id,\r\n            cliente: customerFound._id,\r\n            auto: autoFound._id,\r\n            estadoVehiculoE: estadoVehicularFound._id,\r\n            tipoOperacionE: operacionFound._id,\r\n            sucursalE: sucursalFound._id,\r\n            estadoVentaE: situacionFound._id,\r\n            colorE: colorNull,\r\n            anioFabricacionE: anioFNull,\r\n            anioModeloE: anioMNull,\r\n            ubicacionVehiculoE: ubicacionNull,\r\n            financiamientoE: financiamientoNull,\r\n            bancoE: bancoNull,\r\n            solicitudMAF: solicitudNull,\r\n            campaniasTDPE: campaniaTDPFound.map((a) => a.id),\r\n            campaniasMafE: campaniaMAFFound.map((a) => a._id),\r\n            accesoriosE: accesoriosFound.map((a) => a._id),\r\n            condicionAccesorioE: condicionAccNull,\r\n            tipoComprobanteE: comprobanteNull,\r\n            ofertaTDPE,\r\n            ofertaMafE,\r\n            estadoFacturacionE: facturacionNull,\r\n        });\r\n\r\n        if (query) {\r\n            res.json({ message: \"Expediente actualizado con éxito\" });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe expediente a actualizar\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.deleteOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n\r\n    try {\r\n        const query = await Sale.findByIdAndDelete(itemId);\r\n\r\n        if (query) {\r\n            res.json({ message: \"Expediente eliminado con éxito\" });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe Expediente a eliminar\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesBySucursalyFecha = async (req, res) => {\r\n    const { sucursalE, start, end, entregados } = req.body;\r\n    let query = null;\r\n\r\n    try {\r\n        if (entregados) {\r\n            query = await Sale.find({\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                fecha_entrega: {\r\n                    $gte: new Date(start),\r\n                    $lte: new Date(end),\r\n                },\r\n            })\r\n                .sort({ fecha_cancelacion: -1 })\r\n                .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal\",\r\n                })\r\n                .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                        path: \"model\",\r\n                        select: \"marca name avatar\",\r\n                        populate: {\r\n                            path: \"marca\",\r\n                            select: \"name avatar\",\r\n                        },\r\n                    },\r\n                })\r\n                .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVentaE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate(\"campanias\")\r\n                .populate(\"adicional\")\r\n                .populate(\"accesorios\")\r\n                .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n                });\r\n        } else {\r\n            query = await Sale.find({\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                fecha_cancelacion: {\r\n                    $gte: new Date(start),\r\n                    $lte: new Date(end),\r\n                },\r\n            })\r\n                .sort({ fecha_cancelacion: -1 })\r\n                .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal\",\r\n                })\r\n                .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                        path: \"model\",\r\n                        select: \"marca name avatar\",\r\n                        populate: {\r\n                            path: \"marca\",\r\n                            select: \"name avatar\",\r\n                        },\r\n                    },\r\n                })\r\n                .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVentaE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate(\"campanias\")\r\n                .populate(\"adicional\")\r\n                .populate(\"accesorios\")\r\n                .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n                });\r\n        }\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `La sucursal ${sucursalE} no cuenta con expedientes` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.groupFilesByEstado = async (req, res) => {\r\n    const { sucursalE, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.aggregate([\r\n            {\r\n                $match: {\r\n                    sucursal_venta: sucursalE,\r\n                    fecha_cancelacion: {\r\n                        $gte: new Date(start),\r\n                        $lte: new Date(end),\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: { estado: \"$estatus_venta\" },\r\n                    num_ventas: { $sum: 1 },\r\n                },\r\n            },\r\n            {\r\n                $sort: {\r\n                    num_ventas: -1,\r\n                },\r\n            },\r\n        ]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen expedientes` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.conteoFilesByEstado = async (req, res) => {\r\n    const { estado, ubicacion, isEntregado, sucursalE, start, end } = req.body;\r\n    let query = null;\r\n\r\n    try {\r\n        if (isEntregado) {\r\n            query = await Sale.find({\r\n                ubicacion_vehiculo: { $regex: \".*\" + ubicacion + \".*\" },\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                fecha_entrega: {\r\n                    $gte: new Date(start),\r\n                    $lte: new Date(end),\r\n                },\r\n            }).countDocuments();\r\n        } else {\r\n            query = await Sale.find({\r\n                estatus_venta: { $regex: \".*\" + estado + \".*\" },\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                fecha_cancelacion: {\r\n                    $gte: new Date(start),\r\n                    $lte: new Date(end),\r\n                },\r\n            }).countDocuments();\r\n        }\r\n        if (query >= 0) {\r\n            res.json({ count: query });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.rankingFilesByUbicacion = async (req, res) => {\r\n    const { ubicacion, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.aggregate([\r\n            {\r\n                $match: {\r\n                    ubicacion_vehiculo: ubicacion,\r\n                    fecha_entrega: {\r\n                        $gte: new Date(start),\r\n                        $lte: new Date(end),\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: \"$sucursal_venta\",\r\n                    qty: {\r\n                        $sum: 1,\r\n                    },\r\n                },\r\n            },\r\n        ]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesByEstado = async (req, res) => {\r\n    const { estado, tramite, sucursalE } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.find({\r\n            estatus_venta: { $regex: \".*\" + estado + \".*\" },\r\n            pasoaTramite: tramite,\r\n            sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n        })\r\n            .sort({ fecha_cancelacion: -1 })\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name sucursal avatar\",\r\n            })\r\n            .populate({\r\n                path: \"auto\",\r\n                select: \"model version cod_tdp\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"marca name avatar\",\r\n                    populate: {\r\n                        path: \"marca\",\r\n                        select: \"name avatar\",\r\n                    },\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"colorE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioFabricacionE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioModeloE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"ubicacionVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"financiamientoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"bancoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoOperacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoComprobanteE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVentaE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"estadoFacturacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate(\"campanias\")\r\n            .populate(\"adicional\")\r\n            .populate(\"accesorios\")\r\n            .populate({\r\n                path: \"empleado\",\r\n                select: \"name username\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `Expedientes ${estado} no existen en ${sucursalE}` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.rankingFilesByModelo = async (req, res) => {\r\n    const { sucursalE, estado, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.aggregate([\r\n            {\r\n                $match: {\r\n                    sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                    estatus_venta: estado,\r\n                    fecha_cancelacion: {\r\n                        $gte: new Date(start),\r\n                        $lte: new Date(end),\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: \"$auto\",\r\n                    num_ventas: {\r\n                        $sum: 1,\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $sort: {\r\n                    num_ventas: -1,\r\n                },\r\n            },\r\n        ]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.rankingFilesBySeller = async (req, res) => {\r\n    const { sucursalE, estadoE, start, end } = req.body;\r\n    // console.log(req.body);\r\n\r\n    try {\r\n        const query = await Sale.aggregate([\r\n            {\r\n                $match: {\r\n                    sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                    estatus_venta: { $regex: \".*\" + estadoE + \".*\" },\r\n                    fecha_cancelacion: {\r\n                        $gte: new Date(start),\r\n                        $lte: new Date(end),\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: \"$vendedor\",\r\n                    num_ventas: {\r\n                        $sum: 1,\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $sort: {\r\n                    num_ventas: -1,\r\n                },\r\n            },\r\n        ]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        } else {\r\n            return res.status(201).json({ message: \"No existen ventas\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesByToyotaValue = async (req, res) => {\r\n    const { sucursalE, isToyotaValue, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.find({\r\n            sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n            isToyotaValue,\r\n            fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) },\r\n        })\r\n            .select(\"vendedor cliente auto serie_tdp isToyotaValue arrayToyotaValues sucursalE\")\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name avatar\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"auto\",\r\n                select: \"model cod_tdp\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"name avatar marca\",\r\n                    populate: {\r\n                        path: \"marca\",\r\n                        select: \"name avatar\",\r\n                    },\r\n                },\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen expedientes con toyota value` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesByImporteAccesorios = async (req, res) => {\r\n    const { sucursalE, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.find({\r\n            $expr: { $gt: [{ $size: { $ifNull: [\"$accesoriosE\", []] } }, 0] },\r\n            sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n            fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) },\r\n        })\r\n            .select(\"accesoriosE vendedor cliente sucursalE sucursal_venta\")\r\n            .populate({\r\n                path: \"accesoriosE\",\r\n                select: \"name precio\",\r\n            })\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name avatar\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe expedientes con accesorios\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nexport default fileController;\r\n"],"file":"files.controller.js"}