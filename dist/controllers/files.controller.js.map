{"version":3,"file":"files.controller.js","names":["fileController","getAll","req","res","Sale","find","sort","fecha_cancelacion","populate","path","select","strictPopulate","query","length","json","total","all","status","message","console","log","getOneById","itemId","params","findById","one","err","createOne","body","vendedor","cliente","auto","serie_tdp","colorE","precio","anioFabricacionE","anioModeloE","ubicacionVehiculoE","estadoVehiculoE","fecha_ciguena","fecha_entrega","financiamientoE","bancoE","solicitudMAF","adelantosE","campaniasTDPE","ofertaTDPE","campaniasMafE","ofertaMafE","isToyotaValue","arrayToyotaValues","descuento_autonort","acuerdoTDP","observacion_adv","accesoriosE","condicionAccesorioE","condicion_accesorios","tipoOperacionE","tipoComprobanteE","nro_comprobante","fecha_comprobante","sucursal_venta","sucursalE","estadoVentaE","estatus_venta","fecha_facturacion_tdp","estadoFacturacionE","monto_facturado","createdBy","fechaCreacionS","newSale","Seller","findOne","name","sellerFound","_id","Vehicle","cod_tdp","carFound","Customer","document","customerFound","undefined","Colores","colorFound","Anio","anioFFound","anioMFound","Ubicacion","ubicacionFound","Condicion","estadoVehicularFound","Financiamiento","financiamientoFound","Banco","bancoFound","Maf","nro_solicitud","mafFound","Campania","cod_interno","$in","campaniaTDPFound","map","a","campaniaMAFFound","Operacion","operacionFound","User","username","userFound","TipoComprobante","comprobanteFound","CondicionAccesorio","condicionFound","Sucursal","sucursalFound","Situacion","situacionFound","StatusFacturacion","facturacionFound","AccesorioE","accesorioFound","save","updateOneById","ubicacion_vehiculo","estatus_vehiculo","colorNull","anioFNull","anioMNull","ubicacionNull","financiamientoNull","bancoNull","solicitudNull","condicionAccNull","comprobanteNull","facturacionNull","autoFound","anioFound","accesoriosFound","findByIdAndUpdate","id","deleteOneById","findByIdAndDelete","getFilesBySucursalyFecha","start","end","entregados","$regex","$gte","Date","$lte","getFilesByVendedor","seller","groupFilesByEstado","aggregate","$match","$group","estado","num_ventas","$sum","$sort","ranking","conteoFilesByEstado","ubicacion","isEntregado","countDocuments","count","rankingFilesByUbicacion","qty","getFilesByEstado","tramite","pasoaTramite","rankingFilesByModelo","rankingFilesBySeller","estadoE","getFilesByToyotaValue","getFilesByImporteAccesorios","$expr","$gt","$size","$ifNull"],"sources":["../../src/controllers/files.controller.js"],"sourcesContent":["import Sale from \"../models/Sale\";\r\nimport Vehicle from \"../models/Vehicle\";\r\nimport Seller from \"../models/Seller\";\r\nimport Customer from \"../models/Customer\";\r\nimport Colores from \"../models/Colores\";\r\nimport Ubicacion from \"../models/Ubicacion\";\r\nimport Financiamiento from \"../models/Financiamiento\";\r\nimport Banco from \"../models/Banco\";\r\nimport Campania from \"../models/Campania\";\r\nimport Maf from \"../models/Maf\";\r\nimport Operacion from \"../models/Operacion\";\r\nimport TipoComprobante from \"../models/TipoComprobante\";\r\nimport Situacion from \"../models/Situacion\";\r\nimport Sucursal from \"../models/Sucursal\";\r\nimport StatusFacturacion from \"../models/StatusFacturacion\";\r\nimport User from \"../models/User\";\r\nimport AccesorioE from \"../models/AccesorioE\";\r\nimport CondicionAccesorio from \"../models/CondicionAccesorio\";\r\nimport Anio from \"../models/Anio\";\r\nimport Condicion from \"../models/Condicion\";\r\n\r\nconst fileController = {};\r\n\r\nfileController.getAll = async (req, res) => {\r\n    try {\r\n        const query = await Sale.find()\r\n            .sort({\r\n                fecha_cancelacion: -1,\r\n            })\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name sucursal\",\r\n            })\r\n            .populate({\r\n                path: \"auto\",\r\n                select: \"model version cod_tdp\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"marca name avatar\",\r\n                    populate: {\r\n                        path: \"marca\",\r\n                        select: \"name avatar\",\r\n                    },\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"colorE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioFabricacionE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioModeloE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"ubicacionVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"financiamientoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"bancoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoOperacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoComprobanteE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVentaE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"estadoFacturacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate(\"campanias\")\r\n            .populate(\"adicional\")\r\n            .populate(\"accesorios\")\r\n            .populate({\r\n                path: \"empleado\",\r\n                select: \"name username\",\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n                strictPopulate: true,\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen expedientes` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n\r\n    try {\r\n        const query = await Sale.findById(itemId)\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name sucursal\",\r\n            })\r\n            .populate({\r\n                path: \"auto\",\r\n                select: \"model version cod_tdp\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"marca name avatar\",\r\n                    populate: {\r\n                        path: \"marca\",\r\n                        select: \"name avatar\",\r\n                    },\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"colorE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioFabricacionE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioModeloE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"ubicacionVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"financiamientoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"bancoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"solicitudMAF\",\r\n                select: \"nro_solicitud fecha_ingreso customer\",\r\n                populate: {\r\n                    path: \"customer\",\r\n                    select: \"name document\",\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"campaniasTDPE\",\r\n                select: \"cod_interno descripcion tipo oferta\",\r\n                populate: {\r\n                    path: \"tipo\",\r\n                    select: \"name\",\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"campaniasMafE\",\r\n                select: \"cod_interno descripcion tipo oferta\",\r\n                populate: {\r\n                    path: \"tipo\",\r\n                    select: \"name\",\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"accesoriosE\",\r\n                select: \"cod_interno name model precio\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"name\",\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"condicionAccesorioE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"tipoOperacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoComprobanteE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({ path: \"estadoVentaE\", select: \"name document\" })\r\n            .populate({\r\n                path: \"estadoFacturacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate(\"campanias\")\r\n            .populate(\"adicional\")\r\n            .populate(\"accesorios\")\r\n            .populate({\r\n                path: \"empleado\",\r\n                select: \"name username\",\r\n            })\r\n            .populate({\r\n                path: \"createdBy\",\r\n                select: \"name username\",\r\n                strictPopulate: false,\r\n            });\r\n\r\n        if (query) {\r\n            res.json({ one: query });\r\n        } else {\r\n            return res.status(404).json({ message: err.message });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.createOne = async (req, res) => {\r\n    const {\r\n        vendedor,\r\n        cliente,\r\n        auto,\r\n        serie_tdp,\r\n        colorE,\r\n        precio,\r\n        anioFabricacionE,\r\n        anioModeloE,\r\n        ubicacionVehiculoE,\r\n        estadoVehiculoE,\r\n        fecha_ciguena,\r\n        fecha_entrega,\r\n        financiamientoE,\r\n        bancoE,\r\n        solicitudMAF,\r\n        adelantosE,\r\n        campaniasTDPE,\r\n        ofertaTDPE,\r\n        campaniasMafE,\r\n        ofertaMafE,\r\n        isToyotaValue,\r\n        arrayToyotaValues,\r\n        descuento_autonort,\r\n        acuerdoTDP,\r\n        observacion_adv,\r\n        accesoriosE,\r\n        condicionAccesorioE,\r\n        condicion_accesorios,\r\n        tipoOperacionE,\r\n        tipoComprobanteE,\r\n        nro_comprobante,\r\n        fecha_comprobante,\r\n        sucursal_venta,\r\n        sucursalE,\r\n        estadoVentaE,\r\n        estatus_venta,\r\n        fecha_cancelacion,\r\n        fecha_facturacion_tdp,\r\n        estadoFacturacionE,\r\n        monto_facturado,\r\n        createdBy,\r\n        fechaCreacionS,\r\n    } = req.body;\r\n\r\n    try {\r\n        const newSale = new Sale({\r\n            serie_tdp,\r\n            precio,\r\n            fecha_ciguena,\r\n            fecha_entrega,\r\n            adelantosE,\r\n            ofertaTDPE,\r\n            ofertaMafE,\r\n            isToyotaValue,\r\n            arrayToyotaValues,\r\n            descuento_autonort,\r\n            acuerdoTDP,\r\n            observacion_adv,\r\n            condicion_accesorios,\r\n            fecha_facturacion_tdp,\r\n            monto_facturado,\r\n            nro_comprobante,\r\n            fecha_comprobante,\r\n            fecha_cancelacion,\r\n            estatus_venta,\r\n            sucursal_venta,\r\n            fechaCreacionS,\r\n        });\r\n\r\n        //Seller Obligado\r\n        const sellerFound = await Seller.findOne({ name: vendedor });\r\n        if (!sellerFound) return res.status(404).json({ message: `Vendedor ${vendedor} no encontrado` });\r\n        newSale.vendedor = sellerFound._id;\r\n\r\n        //Vehicle Obligado\r\n        const carFound = await Vehicle.findOne({ cod_tdp: auto });\r\n        if (!carFound) return res.status(404).json({ message: `Vehículo ${auto} no encontrado` });\r\n        newSale.auto = carFound._id;\r\n\r\n        //Customer Obligado\r\n        const customerFound = await Customer.findOne({ document: cliente });\r\n        if (!customerFound) return res.status(404).json({ message: `Cliente ${cliente} no encontrado` });\r\n        newSale.cliente = customerFound._id;\r\n\r\n        //Item Null\r\n        if (colorE == null || colorE == undefined || colorE == \"\") {\r\n            newSale.colorE = null;\r\n        } else {\r\n            const colorFound = await Colores.findOne({ name: colorE });\r\n            if (!colorFound) return res.status(404).json({ message: `Cliente ${colorE} no encontrado` });\r\n            newSale.colorE = colorFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (anioFabricacionE == null || anioFabricacionE == undefined || anioFabricacionE == \"\") {\r\n            newSale.anioFabricacionE = null;\r\n        } else {\r\n            const anioFFound = await Anio.findOne({ name: anioFabricacionE });\r\n            if (!anioFFound) return res.status(404).json({ message: `Año Fabricación ${anioFabricacionE} no encontrado` });\r\n            newSale.anioFabricacionE = anioFFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (anioModeloE == null || anioModeloE == undefined || anioModeloE == \"\") {\r\n            newSale.anioModeloE = null;\r\n        } else {\r\n            const anioMFound = await Anio.findOne({ name: anioModeloE });\r\n            if (!anioMFound) return res.status(404).json({ message: `Año Modelo ${anioModeloE} no encontrado` });\r\n            newSale.anioModeloE = anioMFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (ubicacionVehiculoE == null || ubicacionVehiculoE == undefined || ubicacionVehiculoE == \"\") {\r\n            newSale.ubicacionVehiculoE = null;\r\n        } else {\r\n            const ubicacionFound = await Ubicacion.findOne({ name: ubicacionVehiculoE });\r\n            if (!ubicacionFound) return res.status(404).json({ message: `Ubicación ${ubicacionVehiculoE} no encontrado` });\r\n            newSale.ubicacionVehiculoE = ubicacionFound._id;\r\n        }\r\n\r\n        //Condición obligada\r\n        const estadoVehicularFound = await Condicion.findOne({ name: estadoVehiculoE });\r\n        if (!estadoVehicularFound) return res.status(404).json({ message: `Estado vehicular ${estadoVehiculoE} no encontrado` });\r\n        newSale.estadoVehiculoE = estadoVehicularFound._id;\r\n\r\n        //Item Null\r\n        if (financiamientoE == null || financiamientoE == undefined || financiamientoE == \"\") {\r\n            newSale.financiamientoE = null;\r\n        } else {\r\n            const financiamientoFound = await Financiamiento.findOne({ name: financiamientoE });\r\n            if (!financiamientoFound) return res.status(404).json({ message: `Financiamiento ${financiamientoE} no encontrado` });\r\n            newSale.financiamientoE = financiamientoFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (bancoE == null || bancoE == undefined || bancoE == \"\") {\r\n            newSale.bancoE = null;\r\n        } else {\r\n            const bancoFound = await Banco.findOne({ name: bancoE });\r\n            if (!bancoFound) return res.status(404).json({ message: `Banco ${bancoE} no encontrado` });\r\n            newSale.bancoE = bancoFound._id;\r\n        }\r\n\r\n        //Item Null\r\n        if (solicitudMAF == null || solicitudMAF == undefined || solicitudMAF == \"\") {\r\n            newSale.solicitudMAF = null;\r\n        } else {\r\n            const mafFound = await Maf.findOne({ nro_solicitud: solicitudMAF });\r\n            if (!mafFound) return res.status(404).json({ message: `Solicitud ${solicitudMAF} no encontrada` });\r\n            newSale.solicitudMAF = mafFound._id;\r\n        }\r\n\r\n        const campaniaTDPFound = await Campania.find({ cod_interno: { $in: campaniasTDPE } });\r\n        if (!campaniaTDPFound) return res.status(404).json({ message: `Campaña TDP ${campaniasTDPE} no encontrada` });\r\n        newSale.campaniasTDPE = campaniaTDPFound.map((a) => a._id);\r\n\r\n        const campaniaMAFFound = await Campania.find({ cod_interno: { $in: campaniasMafE } });\r\n        if (!campaniaMAFFound) return res.status(404).json({ message: `Campaña MAF ${campaniasMafE} no encontrada` });\r\n        newSale.campaniasMafE = campaniaMAFFound.map((a) => a._id);\r\n\r\n        //Operacion obligada\r\n        const operacionFound = await Operacion.findOne({ name: tipoOperacionE });\r\n        if (!operacionFound) return res.status(404).json({ message: `Tipo operación ${tipoOperacionE} no encontrada` });\r\n        newSale.tipoOperacionE = operacionFound._id;\r\n\r\n        //User Obligado\r\n        const userFound = await User.findOne({ username: createdBy });\r\n        if (!userFound) return res.status(404).json({ message: `Colaborador ${createdBy} no encontrado` });\r\n        newSale.createdBy = userFound._id;\r\n\r\n        //Item Null\r\n        if (tipoComprobanteE == null || tipoComprobanteE == undefined || tipoComprobanteE == \"\") {\r\n            newSale.tipoComprobanteE = null;\r\n        } else {\r\n            const comprobanteFound = await TipoComprobante.findOne({ name: tipoComprobanteE });\r\n            if (!comprobanteFound) return res.status(404).json({ message: `Tipo comprobante ${tipoComprobanteE} no encontrado` });\r\n            newSale.tipoComprobanteE = comprobanteFound._id;\r\n        }\r\n\r\n        // Item Null\r\n        if (condicionAccesorioE == null || condicionAccesorioE == undefined || condicionAccesorioE == \"\") {\r\n            newSale.condicionAccesorioE = null;\r\n        } else {\r\n            const condicionFound = await CondicionAccesorio.findOne({ name: condicionAccesorioE });\r\n            if (!condicionFound) return res.status(404).json({ message: `Condición accesorio ${condicionAccesorioE} no encontrada` });\r\n            newSale.condicionAccesorioE = condicionFound._id;\r\n        }\r\n\r\n        //Sucursal Obligado\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrada` });\r\n        newSale.sucursalE = sucursalFound._id;\r\n\r\n        //Situacion Obligado\r\n        const situacionFound = await Situacion.findOne({ name: estadoVentaE });\r\n        if (!situacionFound) return res.status(404).json({ message: `Estado de Venta ${estadoVentaE} no encontrado` });\r\n        newSale.estadoVentaE = situacionFound._id;\r\n\r\n        //Item Null\r\n        if (estadoFacturacionE == null || estadoFacturacionE == undefined || estadoFacturacionE == \"\") {\r\n            newSale.estadoFacturacionE = null;\r\n        } else {\r\n            const facturacionFound = await StatusFacturacion.findOne({ name: estadoFacturacionE });\r\n            if (!facturacionFound) return res.status(404).json({ message: `Estado de Venta ${estadoFacturacionE} no encontrado` });\r\n            newSale.estadoFacturacionE = facturacionFound._id;\r\n        }\r\n\r\n        const accesorioFound = await AccesorioE.find({ cod_interno: { $in: accesoriosE } });\r\n        if (!accesorioFound) return res.status(404).json({ message: `Accesorio ${accesoriosE} no encontrado` });\r\n        newSale.accesoriosE = accesorioFound.map((a) => a._id);\r\n\r\n        const query = await newSale.save();\r\n\r\n        if (query) {\r\n            res.json({ message: \"Expediente creado con éxito\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.updateOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n    const {\r\n        vendedor,\r\n        cliente,\r\n        auto,\r\n        serie_tdp,\r\n        colorE,\r\n        precio,\r\n        anioFabricacionE,\r\n        anioModeloE,\r\n        ubicacionVehiculoE,\r\n        ubicacion_vehiculo,\r\n        estadoVehiculoE,\r\n        estatus_vehiculo,\r\n        fecha_ciguena,\r\n        fecha_entrega,\r\n        financiamientoE,\r\n        bancoE,\r\n        solicitudMAF,\r\n        adelantosE,\r\n        campaniasTDPE,\r\n        ofertaTDPE,\r\n        campaniasMafE,\r\n        ofertaMafE,\r\n        isToyotaValue,\r\n        arrayToyotaValues,\r\n        descuento_autonort,\r\n        acuerdoTDP,\r\n        observacion_adv,\r\n        accesoriosE,\r\n        condicion_accesorios,\r\n        condicionAccesorioE,\r\n        tipoOperacionE,\r\n        tipoComprobanteE,\r\n        nro_comprobante,\r\n        fecha_comprobante,\r\n        sucursal_venta,\r\n        sucursalE,\r\n        estadoVentaE,\r\n        fecha_cancelacion,\r\n        estatus_venta,\r\n        fecha_facturacion_tdp,\r\n        estadoFacturacionE,\r\n        monto_facturado,\r\n    } = req.body;\r\n\r\n    // Opcionales\r\n    let colorNull = null;\r\n    let anioFNull = null;\r\n    let anioMNull = null;\r\n    let ubicacionNull = null;\r\n    let financiamientoNull = null;\r\n    let bancoNull = null;\r\n    let solicitudNull = null;\r\n    let condicionAccNull = null;\r\n    let comprobanteNull = null;\r\n    let facturacionNull = null;\r\n\r\n    try {\r\n        //Vendedor - Obligatorio\r\n        const sellerFound = await Seller.findOne({ name: vendedor });\r\n        if (!sellerFound) return res.status(404).json({ message: `Vendedor ${vendedor} no encontrado` });\r\n\r\n        //Cliente - Obligatorio\r\n        const customerFound = await Customer.findOne({ document: cliente });\r\n        if (!customerFound) return res.status(404).json({ message: `Cliente ${cliente} no encontrado` });\r\n\r\n        // Vehículo - Obligatorio\r\n        const autoFound = await Vehicle.findOne({ cod_tdp: auto });\r\n        if (!autoFound) return res.status(404).json({ message: `Vehículo ${auto} no encontrado` });\r\n\r\n        // Estado Vehicular - Obligatorio\r\n        const estadoVehicularFound = await Condicion.findOne({ name: estadoVehiculoE });\r\n        if (!estadoVehicularFound) return res.status(404).json({ message: `Condición ${estadoVehiculoE} no encontrado` });\r\n\r\n        // Operación - Obligatorio\r\n        const operacionFound = await Operacion.findOne({ name: tipoOperacionE });\r\n        if (!operacionFound) return res.status(404).json({ message: `Operación ${tipoOperacionE} no encontrado` });\r\n\r\n        // Sucursal - Obligatorio\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrado` });\r\n\r\n        // Situacion - Obligatorio\r\n        const situacionFound = await Situacion.findOne({ name: estadoVentaE });\r\n        if (!situacionFound) return res.status(404).json({ message: `Estado de venta ${estadoVentaE} no encontrado` });\r\n\r\n        // Color - Opcional\r\n        if (colorE == null || colorE == undefined || colorE == \"\") {\r\n            colorNull = null;\r\n        } else {\r\n            const colorFound = await Colores.findOne({ name: colorE });\r\n            if (!colorFound) return res.status(404).json({ message: `Color ${colorE} no encontrado` });\r\n            colorNull = colorFound._id;\r\n        }\r\n\r\n        // Año Fab - Opcional\r\n        if (anioFabricacionE == null || anioFabricacionE == undefined || anioFabricacionE == \"\") {\r\n            anioFNull = null;\r\n        } else {\r\n            const anioFound = await Anio.findOne({ name: anioFabricacionE });\r\n            if (!anioFound) return res.status(404).json({ message: `Año ${anioFabricacionE} no encontrado` });\r\n            anioFNull = anioFound._id;\r\n        }\r\n\r\n        // Año Mod - Opcional\r\n        if (anioModeloE == null || anioModeloE == undefined || anioModeloE == \"\") {\r\n            anioMNull = null;\r\n        } else {\r\n            const anioFound = await Anio.findOne({ name: anioModeloE });\r\n            if (!anioFound) return res.status(404).json({ message: `Año ${anioModeloE} no encontrado` });\r\n            anioMNull = anioFound._id;\r\n        }\r\n\r\n        // Ubicación Vehicular - Opcional\r\n        if (ubicacionVehiculoE == null || ubicacionVehiculoE == undefined || ubicacionVehiculoE == \"\") {\r\n            ubicacionNull = null;\r\n        } else {\r\n            const ubicacionFound = await Ubicacion.findOne({ name: ubicacionVehiculoE });\r\n            if (!ubicacionFound) return res.status(404).json({ message: `Ubicación ${ubicacionVehiculoE} no encontrada` });\r\n            ubicacionNull = ubicacionFound._id;\r\n        }\r\n\r\n        // Financiamiento - Opcional\r\n        if (financiamientoE == null || financiamientoE == undefined || financiamientoE == \"\") {\r\n            financiamientoNull = null;\r\n        } else {\r\n            const financiamientoFound = await Financiamiento.findOne({ name: financiamientoE });\r\n            if (!financiamientoFound) return res.status(404).json({ message: `Financiamiento ${financiamientoE} no encontrado` });\r\n            financiamientoNull = financiamientoFound._id;\r\n        }\r\n\r\n        // Banco - Opcional\r\n        if (bancoE == null || bancoE == undefined || bancoE == \"\") {\r\n            bancoNull = null;\r\n        } else {\r\n            const bancoFound = await Banco.findOne({ name: bancoE });\r\n            if (!bancoFound) return res.status(404).json({ message: `Banco ${bancoE} no encontrado` });\r\n            bancoNull = bancoFound._id;\r\n        }\r\n\r\n        // Solicitud MAF - Opcional\r\n        if (solicitudMAF == null || solicitudMAF == undefined || solicitudMAF == \"\") {\r\n            solicitudNull = null;\r\n        } else {\r\n            const mafFound = await Maf.findOne({ nro_solicitud: solicitudMAF });\r\n            if (!mafFound) return res.status(404).json({ message: `Solicitud ${solicitudMAF} no encontrada` });\r\n            solicitudNull = mafFound._id;\r\n        }\r\n\r\n        // Campania TDP - Opcional\r\n        const campaniaTDPFound = await Campania.find({ cod_interno: { $in: campaniasTDPE } });\r\n        if (!campaniaTDPFound) return res.status(404).json({ message: `Campaña TDP ${campaniasTDPE} no encontrada` });\r\n\r\n        // Campania MAF - Opcional\r\n        const campaniaMAFFound = await Campania.find({ cod_interno: { $in: campaniasMafE } });\r\n        if (!campaniaMAFFound) return res.status(404).json({ message: `Campaña TDP ${campaniasMafE} no encontrada` });\r\n\r\n        // Accesorios - Opcional\r\n        const accesoriosFound = await AccesorioE.find({ cod_interno: { $in: accesoriosE } });\r\n        if (!accesoriosFound) return res.status(404).json({ message: `Accesorio ${accesoriosE} no encontrado` });\r\n\r\n        // Condicion Accesorio - Opcional\r\n        if (condicionAccesorioE == null || condicionAccesorioE == undefined || condicionAccesorioE == \"\") {\r\n            condicionAccNull = null;\r\n        } else {\r\n            const condicionFound = await CondicionAccesorio.findOne({ name: condicionAccesorioE });\r\n            if (!condicionFound) return res.status(404).json({ message: `Condición accesorio ${condicionAccesorioE} no encontrada` });\r\n            condicionAccNull = condicionFound._id;\r\n        }\r\n\r\n        // Tipo Comprobante - Opcional\r\n        if (tipoComprobanteE == null || tipoComprobanteE == undefined || tipoComprobanteE == \"\") {\r\n            comprobanteNull = null;\r\n        } else {\r\n            const comprobanteFound = await TipoComprobante.findOne({ name: tipoComprobanteE });\r\n            if (!comprobanteFound) return res.status(404).json({ message: `Tipo comprobante ${tipoComprobanteE} no encontrado` });\r\n            comprobanteNull = comprobanteFound._id;\r\n        }\r\n\r\n        // Estado Facturacion - Opcional\r\n        if (estadoFacturacionE == null || estadoFacturacionE == undefined || estadoFacturacionE == \"\") {\r\n            facturacionNull = null;\r\n        } else {\r\n            const facturacionFound = await StatusFacturacion.findOne({ name: estadoFacturacionE });\r\n            if (!facturacionFound) return res.status(404).json({ message: `Facturación ${estadoFacturacionE} no encontrado` });\r\n            facturacionNull = facturacionFound._id;\r\n        }\r\n\r\n        const query = await Sale.findByIdAndUpdate(itemId, {\r\n            serie_tdp,\r\n            precio,\r\n            ubicacion_vehiculo,\r\n            estatus_vehiculo,\r\n            fecha_ciguena,\r\n            fecha_entrega,\r\n            adelantosE,\r\n            isToyotaValue,\r\n            arrayToyotaValues,\r\n            descuento_autonort,\r\n            acuerdoTDP,\r\n            observacion_adv,\r\n            condicion_accesorios,\r\n            nro_comprobante,\r\n            fecha_comprobante,\r\n            sucursal_venta,\r\n            fecha_cancelacion,\r\n            estatus_venta,\r\n            fecha_facturacion_tdp,\r\n            monto_facturado,\r\n            vendedor: sellerFound._id,\r\n            cliente: customerFound._id,\r\n            auto: autoFound._id,\r\n            estadoVehiculoE: estadoVehicularFound._id,\r\n            tipoOperacionE: operacionFound._id,\r\n            sucursalE: sucursalFound._id,\r\n            estadoVentaE: situacionFound._id,\r\n            colorE: colorNull,\r\n            anioFabricacionE: anioFNull,\r\n            anioModeloE: anioMNull,\r\n            ubicacionVehiculoE: ubicacionNull,\r\n            financiamientoE: financiamientoNull,\r\n            bancoE: bancoNull,\r\n            solicitudMAF: solicitudNull,\r\n            campaniasTDPE: campaniaTDPFound.map((a) => a.id),\r\n            campaniasMafE: campaniaMAFFound.map((a) => a._id),\r\n            accesoriosE: accesoriosFound.map((a) => a._id),\r\n            condicionAccesorioE: condicionAccNull,\r\n            tipoComprobanteE: comprobanteNull,\r\n            ofertaTDPE,\r\n            ofertaMafE,\r\n            estadoFacturacionE: facturacionNull,\r\n        });\r\n\r\n        if (query) {\r\n            res.json({ message: \"Expediente actualizado con éxito\" });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe expediente a actualizar\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.deleteOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n\r\n    try {\r\n        const query = await Sale.findByIdAndDelete(itemId);\r\n\r\n        if (query) {\r\n            res.json({ message: \"Expediente eliminado con éxito\" });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe Expediente a eliminar\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesBySucursalyFecha = async (req, res) => {\r\n    const { sucursalE, start, end, entregados } = req.body;\r\n    let query = null;\r\n\r\n    try {\r\n        if (entregados) {\r\n            query = await Sale.find({\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                fecha_entrega: {\r\n                    $gte: new Date(start),\r\n                    $lte: new Date(end),\r\n                },\r\n            })\r\n                .sort({ fecha_cancelacion: -1 })\r\n                .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal\",\r\n                })\r\n                .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                        path: \"model\",\r\n                        select: \"marca name avatar\",\r\n                        populate: {\r\n                            path: \"marca\",\r\n                            select: \"name avatar\",\r\n                        },\r\n                    },\r\n                })\r\n                .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVentaE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate(\"campanias\")\r\n                .populate(\"adicional\")\r\n                .populate(\"accesorios\")\r\n                .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n                });\r\n        } else {\r\n            query = await Sale.find({\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                fecha_cancelacion: {\r\n                    $gte: new Date(start),\r\n                    $lte: new Date(end),\r\n                },\r\n            })\r\n                .sort({ fecha_cancelacion: -1 })\r\n                .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal\",\r\n                })\r\n                .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                        path: \"model\",\r\n                        select: \"marca name avatar\",\r\n                        populate: {\r\n                            path: \"marca\",\r\n                            select: \"name avatar\",\r\n                        },\r\n                    },\r\n                })\r\n                .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVentaE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate(\"campanias\")\r\n                .populate(\"adicional\")\r\n                .populate(\"accesorios\")\r\n                .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n                });\r\n        }\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `La sucursal ${sucursalE} no cuenta con expedientes` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesByVendedor = async (req, res) => {\r\n    const { seller } = req.body;\r\n\r\n    try {\r\n        const sellerFound = await Seller.findOne({ name: seller });\r\n        if (!sellerFound) return res.status(404).json({ message: `Vendedor ${seller} no encontrado` });\r\n        const query = await Sale.find({\r\n            vendedor: sellerFound._id,\r\n        })\r\n            .sort({ fecha_cancelacion: -1 })\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name sucursal\",\r\n            })\r\n            .populate({\r\n                path: \"auto\",\r\n                select: \"model version cod_tdp\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"marca name avatar\",\r\n                    populate: {\r\n                        path: \"marca\",\r\n                        select: \"name avatar\",\r\n                    },\r\n                },\r\n            })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"colorE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioFabricacionE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"anioModeloE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"ubicacionVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVehiculoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"financiamientoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"bancoE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoOperacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"tipoComprobanteE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"estadoVentaE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"estadoFacturacionE\",\r\n                select: \"name document\",\r\n            })\r\n            .populate(\"campanias\")\r\n            .populate(\"adicional\")\r\n            .populate(\"accesorios\")\r\n            .populate({\r\n                path: \"empleado\",\r\n                select: \"name username\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `El vendedor ${seller} no cuenta con expedientes` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.groupFilesByEstado = async (req, res) => {\r\n    const { sucursalE, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.aggregate([\r\n            {\r\n                $match: {\r\n                    sucursal_venta: sucursalE,\r\n                    fecha_cancelacion: {\r\n                        $gte: new Date(start),\r\n                        $lte: new Date(end),\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: { estado: \"$estatus_venta\" },\r\n                    num_ventas: { $sum: 1 },\r\n                },\r\n            },\r\n            {\r\n                $sort: {\r\n                    num_ventas: -1,\r\n                },\r\n            },\r\n        ]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen expedientes` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.conteoFilesByEstado = async (req, res) => {\r\n    const { estado, ubicacion, isEntregado, sucursalE, start, end } = req.body;\r\n    let query = null;\r\n\r\n    try {\r\n        if (isEntregado) {\r\n            query = await Sale.find({\r\n                ubicacion_vehiculo: { $regex: \".*\" + ubicacion + \".*\" },\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                fecha_entrega: {\r\n                    $gte: new Date(start),\r\n                    $lte: new Date(end),\r\n                },\r\n            }).countDocuments();\r\n        } else {\r\n            query = await Sale.find({\r\n                estatus_venta: { $regex: \".*\" + estado + \".*\" },\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                fecha_cancelacion: {\r\n                    $gte: new Date(start),\r\n                    $lte: new Date(end),\r\n                },\r\n            }).countDocuments();\r\n        }\r\n        if (query >= 0) {\r\n            res.json({ count: query });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.rankingFilesByUbicacion = async (req, res) => {\r\n    const { ubicacion, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.aggregate([\r\n            {\r\n                $match: {\r\n                    ubicacion_vehiculo: ubicacion,\r\n                    fecha_entrega: {\r\n                        $gte: new Date(start),\r\n                        $lte: new Date(end),\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: \"$sucursal_venta\",\r\n                    qty: {\r\n                        $sum: 1,\r\n                    },\r\n                },\r\n            },\r\n        ]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesByEstado = async (req, res) => {\r\n    const { estado, tramite, sucursalE } = req.body;\r\n    let query = null;\r\n\r\n    try {\r\n        if (tramite == null || tramite == undefined || tramite == \"\") {\r\n            query = await Sale.find({\r\n                estatus_venta: { $regex: \".*\" + estado + \".*\" },\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n            })\r\n                .sort({ fecha_cancelacion: -1 })\r\n                .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal avatar\",\r\n                })\r\n                .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                        path: \"model\",\r\n                        select: \"marca name avatar\",\r\n                        populate: {\r\n                            path: \"marca\",\r\n                            select: \"name avatar\",\r\n                        },\r\n                    },\r\n                })\r\n                .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVentaE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate(\"campanias\")\r\n                .populate(\"adicional\")\r\n                .populate(\"accesorios\")\r\n                .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n                });\r\n        } else {\r\n            query = await Sale.find({\r\n                estatus_venta: { $regex: \".*\" + estado + \".*\" },\r\n                pasoaTramite: tramite,\r\n                sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n            })\r\n                .sort({ fecha_cancelacion: -1 })\r\n                .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal avatar\",\r\n                })\r\n                .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                        path: \"model\",\r\n                        select: \"marca name avatar\",\r\n                        populate: {\r\n                            path: \"marca\",\r\n                            select: \"name avatar\",\r\n                        },\r\n                    },\r\n                })\r\n                .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n                })\r\n                .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoVentaE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n                })\r\n                .populate(\"campanias\")\r\n                .populate(\"adicional\")\r\n                .populate(\"accesorios\")\r\n                .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n                });\r\n        }\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `Expedientes ${estado} no existen en ${sucursalE}` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.rankingFilesByModelo = async (req, res) => {\r\n    const { sucursalE, estado, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.aggregate([\r\n            {\r\n                $match: {\r\n                    sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                    estatus_venta: estado,\r\n                    fecha_cancelacion: {\r\n                        $gte: new Date(start),\r\n                        $lte: new Date(end),\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: \"$auto\",\r\n                    num_ventas: {\r\n                        $sum: 1,\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $sort: {\r\n                    num_ventas: -1,\r\n                },\r\n            },\r\n        ]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.rankingFilesBySeller = async (req, res) => {\r\n    const { sucursalE, estadoE, start, end } = req.body;\r\n    // console.log(req.body);\r\n\r\n    try {\r\n        const query = await Sale.aggregate([\r\n            {\r\n                $match: {\r\n                    sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                    estatus_venta: { $regex: \".*\" + estadoE + \".*\" },\r\n                    fecha_cancelacion: {\r\n                        $gte: new Date(start),\r\n                        $lte: new Date(end),\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $group: {\r\n                    _id: \"$vendedor\",\r\n                    num_ventas: {\r\n                        $sum: 1,\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                $sort: {\r\n                    num_ventas: -1,\r\n                },\r\n            },\r\n        ]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        } else {\r\n            return res.status(201).json({ message: \"No existen ventas\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesByToyotaValue = async (req, res) => {\r\n    const { sucursalE, isToyotaValue, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.find({\r\n            sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n            isToyotaValue,\r\n            fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) },\r\n        })\r\n            .select(\"vendedor cliente auto serie_tdp isToyotaValue arrayToyotaValues sucursalE\")\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name avatar\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            })\r\n            .populate({\r\n                path: \"sucursalE\",\r\n                select: \"name\",\r\n            })\r\n            .populate({\r\n                path: \"auto\",\r\n                select: \"model cod_tdp\",\r\n                populate: {\r\n                    path: \"model\",\r\n                    select: \"name avatar marca\",\r\n                    populate: {\r\n                        path: \"marca\",\r\n                        select: \"name avatar\",\r\n                    },\r\n                },\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen expedientes con toyota value` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nfileController.getFilesByImporteAccesorios = async (req, res) => {\r\n    const { sucursalE, start, end } = req.body;\r\n\r\n    try {\r\n        const query = await Sale.find({\r\n            $expr: { $gt: [{ $size: { $ifNull: [\"$accesoriosE\", []] } }, 0] },\r\n            sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n            fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) },\r\n        })\r\n            .select(\"accesoriosE vendedor cliente sucursalE sucursal_venta\")\r\n            .populate({\r\n                path: \"accesoriosE\",\r\n                select: \"name precio\",\r\n            })\r\n            .populate({\r\n                path: \"vendedor\",\r\n                select: \"name avatar\",\r\n            })\r\n            .populate({\r\n                path: \"cliente\",\r\n                select: \"name document\",\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe expedientes con accesorios\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nexport default fileController;\r\n"],"mappings":"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"}