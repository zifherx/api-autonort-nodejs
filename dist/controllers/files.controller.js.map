{"version":3,"sources":["../../src/controllers/files.controller.js"],"names":["fileController","getAll","req","res","Sale","find","sort","fecha_cancelacion","populate","path","select","strictPopulate","query","length","json","total","all","status","message","console","log","getOneById","filesId","params","findById","one","err","createOne","body","vendedor","cliente","auto","serie_tdp","colorE","precio","anioFabricacionE","anioModeloE","ubicacionVehiculoE","estadoVehiculoE","fecha_ciguena","fecha_entrega","financiamientoE","bancoE","solicitudMAF","adelantosE","campaniasTDPE","ofertaTDPE","campaniasMafE","ofertaMafE","isToyotaValue","arrayToyotaValues","descuento_autonort","acuerdoTDP","observacion_adv","accesoriosE","condicionAccesorioE","condicion_accesorios","tipoOperacionE","tipoComprobanteE","nro_comprobante","fecha_comprobante","sucursal_venta","sucursalE","estadoVentaE","estatus_venta","fecha_facturacion_tdp","estadoFacturacionE","monto_facturado","createdBy","fechaCreacionS","newSale","Seller","findOne","name","sellerFound","_id","Vehicle","cod_tdp","carFound","Customer","document","customerFound","undefined","Colores","colorFound","Anio","anioFFound","anioMFound","Ubicacion","ubicacionFound","Condicion","estadoVehicularFound","Financiamiento","financiamientoFound","Banco","bancoFound","Maf","nro_solicitud","mafFound","Campania","cod_interno","$in","campaniaTDPFound","map","a","campaniaMAFFound","Operacion","operacionFound","User","username","userFound","TipoComprobante","comprobanteFound","CondicionAccesorio","condicionFound","Sucursal","sucursalFound","Situacion","situacionFound","StatusFacturacion","facturacionFound","AccesorioE","accesorioFound","save","updateOneById","ubicacion_vehiculo","estatus_vehiculo","colorNull","anioFNull","anioMNull","ubicacionNull","financiamientoNull","bancoNull","solicitudNull","condicionAccNull","comprobanteNull","facturacionNull","autoFound","anioFound","accesoriosFound","findByIdAndUpdate","id","deleteOneById","findByIdAndDelete","getFilesBySucursalyFecha","start","end","entregados","$regex","$gte","Date","$lte","groupFilesByEstado","aggregate","$match","$group","estado","num_ventas","$sum","$sort","ranking","conteoFilesByEstado","ubicacion","isEntregado","countDocuments","count","rankingFilesByUbicacion","qty","getFilesByEstado","tramite","pasoaTramite","rankingFilesByModelo","rankingFilesBySeller","estadoE"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,cAAc,GAAG,EAAvB;;AAEAA,cAAc,CAACC,MAAf;AAAA,qFAAwB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEMC,cAAKC,IAAL,GACdC,IADc,CACT;AACDC,cAAAA,iBAAiB,EAAE,CAAC;AADnB,aADS,EAIdC,QAJc,CAIL;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAJK,EAQdF,QARc,CAQL;AACLC,cAAAA,IAAI,EAAE,MADD;AAELC,cAAAA,MAAM,EAAE,uBAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,OADD;AAELC,gBAAAA,MAAM,EAAE,mBAFH;AAGLF,gBAAAA,QAAQ,EAAE;AACLC,kBAAAA,IAAI,EAAE,OADD;AAELC,kBAAAA,MAAM,EAAE;AAFH;AAHL;AAHL,aARK,EAoBdF,QApBc,CAoBL;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApBK,EAwBdF,QAxBc,CAwBL;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxBK,EA4BdF,QA5Bc,CA4BL;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5BK,EAgCdF,QAhCc,CAgCL;AACLC,cAAAA,IAAI,EAAE,aADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhCK,EAoCdF,QApCc,CAoCL;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApCK,EAwCdF,QAxCc,CAwCL;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxCK,EA4CdF,QA5Cc,CA4CL;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5CK,EAgDdF,QAhDc,CAgDL;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhDK,EAoDdF,QApDc,CAoDL;AACLC,cAAAA,IAAI,EAAE,SADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApDK,EAwDdF,QAxDc,CAwDL;AACLC,cAAAA,IAAI,EAAE,gBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxDK,EA4DdF,QA5Dc,CA4DL;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5DK,EAgEdF,QAhEc,CAgEL;AACLC,cAAAA,IAAI,EAAE,cADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhEK,EAoEdF,QApEc,CAoEL;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApEK,EAwEdF,QAxEc,CAwEL,WAxEK,EAyEdA,QAzEc,CAyEL,WAzEK,EA0EdA,QA1Ec,CA0EL,YA1EK,EA2EdA,QA3Ec,CA2EL;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA3EK,EA+EdF,QA/Ec,CA+EL;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,MAAM,EAAE,eAFH;AAGLC,cAAAA,cAAc,EAAE;AAHX,aA/EK,CAFN;;AAAA;AAERC,YAAAA,KAFQ;;AAAA,kBAuFVA,KAAK,CAACC,MAAN,GAAe,CAvFL;AAAA;AAAA;AAAA;;AAwFTV,YAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,cAAAA,KAAK,EAAEH,KAAT;AAAgBI,cAAAA,GAAG,EAAEJ;AAArB,aAAT;AAxFS;AAAA;;AAAA;AAAA,6CA0FFT,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO;AAAT,aAArB,CA1FE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA6FdC,YAAAA,OAAO,CAACC,GAAR;AA7Fc,6CA8FPjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,YAAIA;AAAf,aAArB,CA9FO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAkGAlB,cAAc,CAACqB,UAAf;AAAA,sFAA4B,kBAAOnB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACfmB,YAAAA,OADe,GACHpB,GAAG,CAACqB,MADD,CACfD,OADe;AAAA;AAAA;AAAA,mBAIElB,cAAKoB,QAAL,CAAcF,OAAd,EACdd,QADc,CACL;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aADK,EAKdF,QALc,CAKL;AACLC,cAAAA,IAAI,EAAE,MADD;AAELC,cAAAA,MAAM,EAAE,uBAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,OADD;AAELC,gBAAAA,MAAM,EAAE,mBAFH;AAGLF,gBAAAA,QAAQ,EAAE;AACLC,kBAAAA,IAAI,EAAE,OADD;AAELC,kBAAAA,MAAM,EAAE;AAFH;AAHL;AAHL,aALK,EAiBdF,QAjBc,CAiBL;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAjBK,EAqBdF,QArBc,CAqBL;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aArBK,EAyBdF,QAzBc,CAyBL;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAzBK,EA6BdF,QA7Bc,CA6BL;AACLC,cAAAA,IAAI,EAAE,aADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA7BK,EAiCdF,QAjCc,CAiCL;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAjCK,EAqCdF,QArCc,CAqCL;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aArCK,EAyCdF,QAzCc,CAyCL;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAzCK,EA6CdF,QA7Cc,CA6CL;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA7CK,EAiDdF,QAjDc,CAiDL;AACLC,cAAAA,IAAI,EAAE,cADD;AAELC,cAAAA,MAAM,EAAE,sCAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,UADD;AAELC,gBAAAA,MAAM,EAAE;AAFH;AAHL,aAjDK,EAyDdF,QAzDc,CAyDL;AACLC,cAAAA,IAAI,EAAE,SADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAzDK,EA6DdF,QA7Dc,CA6DL;AACLC,cAAAA,IAAI,EAAE,eADD;AAELC,cAAAA,MAAM,EAAE,qCAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,MADD;AAELC,gBAAAA,MAAM,EAAE;AAFH;AAHL,aA7DK,EAqEdF,QArEc,CAqEL;AACLC,cAAAA,IAAI,EAAE,eADD;AAELC,cAAAA,MAAM,EAAE,qCAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,MADD;AAELC,gBAAAA,MAAM,EAAE;AAFH;AAHL,aArEK,EA6EdF,QA7Ec,CA6EL;AACLC,cAAAA,IAAI,EAAE,aADD;AAELC,cAAAA,MAAM,EAAE,+BAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,OADD;AAELC,gBAAAA,MAAM,EAAE;AAFH;AAHL,aA7EK,EAqFdF,QArFc,CAqFL;AACLC,cAAAA,IAAI,EAAE,qBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aArFK,EAyFdF,QAzFc,CAyFL;AACLC,cAAAA,IAAI,EAAE,gBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAzFK,EA6FdF,QA7Fc,CA6FL;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA7FK,EAiGdF,QAjGc,CAiGL;AAAEC,cAAAA,IAAI,EAAE,cAAR;AAAwBC,cAAAA,MAAM,EAAE;AAAhC,aAjGK,EAkGdF,QAlGc,CAkGL;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAlGK,EAsGdF,QAtGc,CAsGL,WAtGK,EAuGdA,QAvGc,CAuGL,WAvGK,EAwGdA,QAxGc,CAwGL,YAxGK,EAyGdA,QAzGc,CAyGL;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAzGK,EA6GdF,QA7Gc,CA6GL;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,MAAM,EAAE,eAFH;AAGLC,cAAAA,cAAc,EAAE;AAHX,aA7GK,CAJF;;AAAA;AAIZC,YAAAA,KAJY;;AAAA,iBAuHdA,KAvHc;AAAA;AAAA;AAAA;;AAwHbT,YAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEW,cAAAA,GAAG,EAAEb;AAAP,aAAT;AAxHa;AAAA;;AAAA;AAAA,8CA0HNT,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAEQ,GAAG,CAACR;AAAf,aAArB,CA1HM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA6HlBC,YAAAA,OAAO,CAACC,GAAR;AA7HkB,8CA8HXjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CA9HW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAkIAlB,cAAc,CAAC2B,SAAf;AAAA,sFAA2B,kBAAOzB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBA4ClBD,GAAG,CAAC0B,IA5Cc,EAEjBC,QAFiB,aAEjBA,QAFiB,EAGjBC,OAHiB,aAGjBA,OAHiB,EAIjBC,IAJiB,aAIjBA,IAJiB,EAKjBC,SALiB,aAKjBA,SALiB,EAMjBC,MANiB,aAMjBA,MANiB,EAOjBC,MAPiB,aAOjBA,MAPiB,EAQjBC,gBARiB,aAQjBA,gBARiB,EASjBC,WATiB,aASjBA,WATiB,EAUjBC,kBAViB,aAUjBA,kBAViB,EAWjBC,eAXiB,aAWjBA,eAXiB,EAYjBC,aAZiB,aAYjBA,aAZiB,EAajBC,aAbiB,aAajBA,aAbiB,EAcjBC,eAdiB,aAcjBA,eAdiB,EAejBC,MAfiB,aAejBA,MAfiB,EAgBjBC,YAhBiB,aAgBjBA,YAhBiB,EAiBjBC,UAjBiB,aAiBjBA,UAjBiB,EAkBjBC,aAlBiB,aAkBjBA,aAlBiB,EAmBjBC,UAnBiB,aAmBjBA,UAnBiB,EAoBjBC,aApBiB,aAoBjBA,aApBiB,EAqBjBC,UArBiB,aAqBjBA,UArBiB,EAsBjBC,aAtBiB,aAsBjBA,aAtBiB,EAuBjBC,iBAvBiB,aAuBjBA,iBAvBiB,EAwBjBC,kBAxBiB,aAwBjBA,kBAxBiB,EAyBjBC,UAzBiB,aAyBjBA,UAzBiB,EA0BjBC,eA1BiB,aA0BjBA,eA1BiB,EA2BjBC,WA3BiB,aA2BjBA,WA3BiB,EA4BjBC,mBA5BiB,aA4BjBA,mBA5BiB,EA6BjBC,oBA7BiB,aA6BjBA,oBA7BiB,EA8BjBC,cA9BiB,aA8BjBA,cA9BiB,EA+BjBC,gBA/BiB,aA+BjBA,gBA/BiB,EAgCjBC,eAhCiB,aAgCjBA,eAhCiB,EAiCjBC,iBAjCiB,aAiCjBA,iBAjCiB,EAkCjBC,cAlCiB,aAkCjBA,cAlCiB,EAmCjBC,SAnCiB,aAmCjBA,SAnCiB,EAoCjBC,YApCiB,aAoCjBA,YApCiB,EAqCjBC,aArCiB,aAqCjBA,aArCiB,EAsCjBzD,iBAtCiB,aAsCjBA,iBAtCiB,EAuCjB0D,qBAvCiB,aAuCjBA,qBAvCiB,EAwCjBC,kBAxCiB,aAwCjBA,kBAxCiB,EAyCjBC,eAzCiB,aAyCjBA,eAzCiB,EA0CjBC,SA1CiB,aA0CjBA,SA1CiB,EA2CjBC,cA3CiB,aA2CjBA,cA3CiB;AAAA;AA+CXC,YAAAA,OA/CW,GA+CD,IAAIlE,aAAJ,CAAS;AACpB4B,cAAAA,SAAS,EAATA,SADoB;AAEpBE,cAAAA,MAAM,EAANA,MAFoB;AAGpBK,cAAAA,aAAa,EAAbA,aAHoB;AAIpBC,cAAAA,aAAa,EAAbA,aAJoB;AAKpBI,cAAAA,UAAU,EAAVA,UALoB;AAMpBE,cAAAA,UAAU,EAAVA,UANoB;AAOpBE,cAAAA,UAAU,EAAVA,UAPoB;AAQpBC,cAAAA,aAAa,EAAbA,aARoB;AASpBC,cAAAA,iBAAiB,EAAjBA,iBAToB;AAUpBC,cAAAA,kBAAkB,EAAlBA,kBAVoB;AAWpBC,cAAAA,UAAU,EAAVA,UAXoB;AAYpBC,cAAAA,eAAe,EAAfA,eAZoB;AAapBG,cAAAA,oBAAoB,EAApBA,oBAboB;AAcpBS,cAAAA,qBAAqB,EAArBA,qBAdoB;AAepBE,cAAAA,eAAe,EAAfA,eAfoB;AAgBpBR,cAAAA,eAAe,EAAfA,eAhBoB;AAiBpBC,cAAAA,iBAAiB,EAAjBA,iBAjBoB;AAkBpBrD,cAAAA,iBAAiB,EAAjBA,iBAlBoB;AAmBpByD,cAAAA,aAAa,EAAbA,aAnBoB;AAoBpBH,cAAAA,cAAc,EAAdA,cApBoB;AAqBpBQ,cAAAA,cAAc,EAAdA;AArBoB,aAAT,CA/CC,EAuEjB;;AAvEiB;AAAA,mBAwESE,gBAAOC,OAAP,CAAe;AAAEC,cAAAA,IAAI,EAAE5C;AAAR,aAAf,CAxET;;AAAA;AAwEX6C,YAAAA,WAxEW;;AAAA,gBAyEZA,WAzEY;AAAA;AAAA;AAAA;;AAAA,8CAyEQvE,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,qBAAcW,QAAd;AAAT,aAArB,CAzER;;AAAA;AA0EjByC,YAAAA,OAAO,CAACzC,QAAR,GAAmB6C,WAAW,CAACC,GAA/B,CA1EiB,CA4EjB;;AA5EiB;AAAA,mBA6EMC,iBAAQJ,OAAR,CAAgB;AAAEK,cAAAA,OAAO,EAAE9C;AAAX,aAAhB,CA7EN;;AAAA;AA6EX+C,YAAAA,QA7EW;;AAAA,gBA8EZA,QA9EY;AAAA;AAAA;AAAA;;AAAA,8CA8EK3E,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,wBAAca,IAAd;AAAT,aAArB,CA9EL;;AAAA;AA+EjBuC,YAAAA,OAAO,CAACvC,IAAR,GAAe+C,QAAQ,CAACH,GAAxB,CA/EiB,CAiFjB;;AAjFiB;AAAA,mBAkFWI,kBAASP,OAAT,CAAiB;AAAEQ,cAAAA,QAAQ,EAAElD;AAAZ,aAAjB,CAlFX;;AAAA;AAkFXmD,YAAAA,aAlFW;;AAAA,gBAmFZA,aAnFY;AAAA;AAAA;AAAA;;AAAA,8CAmFU9E,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,oBAAaY,OAAb;AAAT,aAArB,CAnFV;;AAAA;AAoFjBwC,YAAAA,OAAO,CAACxC,OAAR,GAAkBmD,aAAa,CAACN,GAAhC,CApFiB,CAsFjB;;AAtFiB,kBAuFb1C,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAIiD,SAA5B,IAAyCjD,MAAM,IAAI,EAvFtC;AAAA;AAAA;AAAA;;AAwFZqC,YAAAA,OAAO,CAACrC,MAAR,GAAiB,IAAjB;AAxFY;AAAA;;AAAA;AAAA;AAAA,mBA0FakD,iBAAQX,OAAR,CAAgB;AAAEC,cAAAA,IAAI,EAAExC;AAAR,aAAhB,CA1Fb;;AAAA;AA0FNmD,YAAAA,UA1FM;;AAAA,gBA2FPA,UA3FO;AAAA;AAAA;AAAA;;AAAA,8CA2FYjF,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,oBAAae,MAAb;AAAT,aAArB,CA3FZ;;AAAA;AA4FZqC,YAAAA,OAAO,CAACrC,MAAR,GAAiBmD,UAAU,CAACT,GAA5B;;AA5FY;AAAA,kBAgGbxC,gBAAgB,IAAI,IAApB,IAA4BA,gBAAgB,IAAI+C,SAAhD,IAA6D/C,gBAAgB,IAAI,EAhGpE;AAAA;AAAA;AAAA;;AAiGZmC,YAAAA,OAAO,CAACnC,gBAAR,GAA2B,IAA3B;AAjGY;AAAA;;AAAA;AAAA;AAAA,mBAmGakD,cAAKb,OAAL,CAAa;AAAEC,cAAAA,IAAI,EAAEtC;AAAR,aAAb,CAnGb;;AAAA;AAmGNmD,YAAAA,UAnGM;;AAAA,gBAoGPA,UApGO;AAAA;AAAA;AAAA;;AAAA,8CAoGYnF,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,kCAAqBiB,gBAArB;AAAT,aAArB,CApGZ;;AAAA;AAqGZmC,YAAAA,OAAO,CAACnC,gBAAR,GAA2BmD,UAAU,CAACX,GAAtC;;AArGY;AAAA,kBAyGbvC,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI8C,SAAtC,IAAmD9C,WAAW,IAAI,EAzGrD;AAAA;AAAA;AAAA;;AA0GZkC,YAAAA,OAAO,CAAClC,WAAR,GAAsB,IAAtB;AA1GY;AAAA;;AAAA;AAAA;AAAA,mBA4GaiD,cAAKb,OAAL,CAAa;AAAEC,cAAAA,IAAI,EAAErC;AAAR,aAAb,CA5Gb;;AAAA;AA4GNmD,YAAAA,UA5GM;;AAAA,gBA6GPA,UA7GO;AAAA;AAAA;AAAA;;AAAA,8CA6GYpF,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,0BAAgBkB,WAAhB;AAAT,aAArB,CA7GZ;;AAAA;AA8GZkC,YAAAA,OAAO,CAAClC,WAAR,GAAsBmD,UAAU,CAACZ,GAAjC;;AA9GY;AAAA,kBAkHbtC,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,IAAI6C,SAApD,IAAiE7C,kBAAkB,IAAI,EAlH1E;AAAA;AAAA;AAAA;;AAmHZiC,YAAAA,OAAO,CAACjC,kBAAR,GAA6B,IAA7B;AAnHY;AAAA;;AAAA;AAAA;AAAA,mBAqHiBmD,mBAAUhB,OAAV,CAAkB;AAAEC,cAAAA,IAAI,EAAEpC;AAAR,aAAlB,CArHjB;;AAAA;AAqHNoD,YAAAA,cArHM;;AAAA,gBAsHPA,cAtHO;AAAA;AAAA;AAAA;;AAAA,8CAsHgBtF,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,yBAAemB,kBAAf;AAAT,aAArB,CAtHhB;;AAAA;AAuHZiC,YAAAA,OAAO,CAACjC,kBAAR,GAA6BoD,cAAc,CAACd,GAA5C;;AAvHY;AAAA;AAAA,mBA2HkBe,mBAAUlB,OAAV,CAAkB;AAAEC,cAAAA,IAAI,EAAEnC;AAAR,aAAlB,CA3HlB;;AAAA;AA2HXqD,YAAAA,oBA3HW;;AAAA,gBA4HZA,oBA5HY;AAAA;AAAA;AAAA;;AAAA,8CA4HiBxF,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,6BAAsBoB,eAAtB;AAAT,aAArB,CA5HjB;;AAAA;AA6HjBgC,YAAAA,OAAO,CAAChC,eAAR,GAA0BqD,oBAAoB,CAAChB,GAA/C,CA7HiB,CA+HjB;;AA/HiB,kBAgIblC,eAAe,IAAI,IAAnB,IAA2BA,eAAe,IAAIyC,SAA9C,IAA2DzC,eAAe,IAAI,EAhIjE;AAAA;AAAA;AAAA;;AAiIZ6B,YAAAA,OAAO,CAAC7B,eAAR,GAA0B,IAA1B;AAjIY;AAAA;;AAAA;AAAA;AAAA,mBAmIsBmD,wBAAepB,OAAf,CAAuB;AAAEC,cAAAA,IAAI,EAAEhC;AAAR,aAAvB,CAnItB;;AAAA;AAmINoD,YAAAA,mBAnIM;;AAAA,gBAoIPA,mBApIO;AAAA;AAAA;AAAA;;AAAA,8CAoIqB1F,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,2BAAoBuB,eAApB;AAAT,aAArB,CApIrB;;AAAA;AAqIZ6B,YAAAA,OAAO,CAAC7B,eAAR,GAA0BoD,mBAAmB,CAAClB,GAA9C;;AArIY;AAAA,kBAyIbjC,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAIwC,SAA5B,IAAyCxC,MAAM,IAAI,EAzItC;AAAA;AAAA;AAAA;;AA0IZ4B,YAAAA,OAAO,CAAC5B,MAAR,GAAiB,IAAjB;AA1IY;AAAA;;AAAA;AAAA;AAAA,mBA4IaoD,eAAMtB,OAAN,CAAc;AAAEC,cAAAA,IAAI,EAAE/B;AAAR,aAAd,CA5Ib;;AAAA;AA4INqD,YAAAA,UA5IM;;AAAA,gBA6IPA,UA7IO;AAAA;AAAA;AAAA;;AAAA,8CA6IY5F,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,kBAAWwB,MAAX;AAAT,aAArB,CA7IZ;;AAAA;AA8IZ4B,YAAAA,OAAO,CAAC5B,MAAR,GAAiBqD,UAAU,CAACpB,GAA5B;;AA9IY;AAAA,kBAkJbhC,YAAY,IAAI,IAAhB,IAAwBA,YAAY,IAAIuC,SAAxC,IAAqDvC,YAAY,IAAI,EAlJxD;AAAA;AAAA;AAAA;;AAmJZ2B,YAAAA,OAAO,CAAC3B,YAAR,GAAuB,IAAvB;AAnJY;AAAA;;AAAA;AAAA;AAAA,mBAqJWqD,aAAIxB,OAAJ,CAAY;AAAEyB,cAAAA,aAAa,EAAEtD;AAAjB,aAAZ,CArJX;;AAAA;AAqJNuD,YAAAA,QArJM;;AAAA,gBAsJPA,QAtJO;AAAA;AAAA;AAAA;;AAAA,8CAsJU/F,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,sBAAeyB,YAAf;AAAT,aAArB,CAtJV;;AAAA;AAuJZ2B,YAAAA,OAAO,CAAC3B,YAAR,GAAuBuD,QAAQ,CAACvB,GAAhC;;AAvJY;AAAA;AAAA,mBA0JcwB,kBAAS9F,IAAT,CAAc;AAAE+F,cAAAA,WAAW,EAAE;AAAEC,gBAAAA,GAAG,EAAExD;AAAP;AAAf,aAAd,CA1Jd;;AAAA;AA0JXyD,YAAAA,gBA1JW;;AAAA,gBA2JZA,gBA3JY;AAAA;AAAA;AAAA;;AAAA,8CA2JanG,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,2BAAiB2B,aAAjB;AAAT,aAArB,CA3Jb;;AAAA;AA4JjByB,YAAAA,OAAO,CAACzB,aAAR,GAAwByD,gBAAgB,CAACC,GAAjB,CAAqB,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAAC7B,GAAT;AAAA,aAArB,CAAxB;AA5JiB;AAAA,mBA8JcwB,kBAAS9F,IAAT,CAAc;AAAE+F,cAAAA,WAAW,EAAE;AAAEC,gBAAAA,GAAG,EAAEtD;AAAP;AAAf,aAAd,CA9Jd;;AAAA;AA8JX0D,YAAAA,gBA9JW;;AAAA,gBA+JZA,gBA/JY;AAAA;AAAA;AAAA;;AAAA,8CA+JatG,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,2BAAiB6B,aAAjB;AAAT,aAArB,CA/Jb;;AAAA;AAgKjBuB,YAAAA,OAAO,CAACvB,aAAR,GAAwB0D,gBAAgB,CAACF,GAAjB,CAAqB,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAAC7B,GAAT;AAAA,aAArB,CAAxB,CAhKiB,CAkKjB;;AAlKiB;AAAA,mBAmKY+B,mBAAUlC,OAAV,CAAkB;AAAEC,cAAAA,IAAI,EAAEhB;AAAR,aAAlB,CAnKZ;;AAAA;AAmKXkD,YAAAA,cAnKW;;AAAA,gBAoKZA,cApKY;AAAA;AAAA;AAAA;;AAAA,8CAoKWxG,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,8BAAoBuC,cAApB;AAAT,aAArB,CApKX;;AAAA;AAqKjBa,YAAAA,OAAO,CAACb,cAAR,GAAyBkD,cAAc,CAAChC,GAAxC,CArKiB,CAuKjB;;AAvKiB;AAAA,mBAwKOiC,cAAKpC,OAAL,CAAa;AAAEqC,cAAAA,QAAQ,EAAEzC;AAAZ,aAAb,CAxKP;;AAAA;AAwKX0C,YAAAA,SAxKW;;AAAA,gBAyKZA,SAzKY;AAAA;AAAA;AAAA;;AAAA,8CAyKM3G,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,wBAAiBkD,SAAjB;AAAT,aAArB,CAzKN;;AAAA;AA0KjBE,YAAAA,OAAO,CAACF,SAAR,GAAoB0C,SAAS,CAACnC,GAA9B,CA1KiB,CA4KjB;;AA5KiB,kBA6KbjB,gBAAgB,IAAI,IAApB,IAA4BA,gBAAgB,IAAIwB,SAAhD,IAA6DxB,gBAAgB,IAAI,EA7KpE;AAAA;AAAA;AAAA;;AA8KZY,YAAAA,OAAO,CAACZ,gBAAR,GAA2B,IAA3B;AA9KY;AAAA;;AAAA;AAAA;AAAA,mBAgLmBqD,yBAAgBvC,OAAhB,CAAwB;AAAEC,cAAAA,IAAI,EAAEf;AAAR,aAAxB,CAhLnB;;AAAA;AAgLNsD,YAAAA,gBAhLM;;AAAA,gBAiLPA,gBAjLO;AAAA;AAAA;AAAA;;AAAA,8CAiLkB7G,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,6BAAsBwC,gBAAtB;AAAT,aAArB,CAjLlB;;AAAA;AAkLZY,YAAAA,OAAO,CAACZ,gBAAR,GAA2BsD,gBAAgB,CAACrC,GAA5C;;AAlLY;AAAA,kBAsLbpB,mBAAmB,IAAI,IAAvB,IAA+BA,mBAAmB,IAAI2B,SAAtD,IAAmE3B,mBAAmB,IAAI,EAtL7E;AAAA;AAAA;AAAA;;AAuLZe,YAAAA,OAAO,CAACf,mBAAR,GAA8B,IAA9B;AAvLY;AAAA;;AAAA;AAAA;AAAA,mBAyLiB0D,4BAAmBzC,OAAnB,CAA2B;AAAEC,cAAAA,IAAI,EAAElB;AAAR,aAA3B,CAzLjB;;AAAA;AAyLN2D,YAAAA,cAzLM;;AAAA,gBA0LPA,cA1LO;AAAA;AAAA;AAAA;;AAAA,8CA0LgB/G,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,mCAAyBqC,mBAAzB;AAAT,aAArB,CA1LhB;;AAAA;AA2LZe,YAAAA,OAAO,CAACf,mBAAR,GAA8B2D,cAAc,CAACvC,GAA7C;;AA3LY;AAAA;AAAA,mBA+LWwC,kBAAS3C,OAAT,CAAiB;AAAEC,cAAAA,IAAI,EAAEX;AAAR,aAAjB,CA/LX;;AAAA;AA+LXsD,YAAAA,aA/LW;;AAAA,gBAgMZA,aAhMY;AAAA;AAAA;AAAA;;AAAA,8CAgMUjH,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,qBAAc4C,SAAd;AAAT,aAArB,CAhMV;;AAAA;AAiMjBQ,YAAAA,OAAO,CAACR,SAAR,GAAoBsD,aAAa,CAACzC,GAAlC,CAjMiB,CAmMjB;;AAnMiB;AAAA,mBAoMY0C,mBAAU7C,OAAV,CAAkB;AAAEC,cAAAA,IAAI,EAAEV;AAAR,aAAlB,CApMZ;;AAAA;AAoMXuD,YAAAA,cApMW;;AAAA,gBAqMZA,cArMY;AAAA;AAAA;AAAA;;AAAA,8CAqMWnH,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,4BAAqB6C,YAArB;AAAT,aAArB,CArMX;;AAAA;AAsMjBO,YAAAA,OAAO,CAACP,YAAR,GAAuBuD,cAAc,CAAC3C,GAAtC,CAtMiB,CAwMjB;;AAxMiB,kBAyMbT,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,IAAIgB,SAApD,IAAiEhB,kBAAkB,IAAI,EAzM1E;AAAA;AAAA;AAAA;;AA0MZI,YAAAA,OAAO,CAACJ,kBAAR,GAA6B,IAA7B;AA1MY;AAAA;;AAAA;AAAA;AAAA,mBA4MmBqD,2BAAkB/C,OAAlB,CAA0B;AAAEC,cAAAA,IAAI,EAAEP;AAAR,aAA1B,CA5MnB;;AAAA;AA4MNsD,YAAAA,gBA5MM;;AAAA,gBA6MPA,gBA7MO;AAAA;AAAA;AAAA;;AAAA,8CA6MkBrH,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,4BAAqBgD,kBAArB;AAAT,aAArB,CA7MlB;;AAAA;AA8MZI,YAAAA,OAAO,CAACJ,kBAAR,GAA6BsD,gBAAgB,CAAC7C,GAA9C;;AA9MY;AAAA;AAAA,mBAiNY8C,oBAAWpH,IAAX,CAAgB;AAAE+F,cAAAA,WAAW,EAAE;AAAEC,gBAAAA,GAAG,EAAE/C;AAAP;AAAf,aAAhB,CAjNZ;;AAAA;AAiNXoE,YAAAA,cAjNW;;AAAA,gBAkNZA,cAlNY;AAAA;AAAA;AAAA;;AAAA,8CAkNWvH,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,sBAAeoC,WAAf;AAAT,aAArB,CAlNX;;AAAA;AAmNjBgB,YAAAA,OAAO,CAAChB,WAAR,GAAsBoE,cAAc,CAACnB,GAAf,CAAmB,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAAC7B,GAAT;AAAA,aAAnB,CAAtB;AAnNiB;AAAA,mBAqNGL,OAAO,CAACqD,IAAR,EArNH;;AAAA;AAqNX/G,YAAAA,KArNW;;AAuNjB,gBAAIA,KAAJ,EAAW;AACNT,cAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEI,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACJ;;AAzNgB;AAAA;;AAAA;AAAA;AAAA;AA2NjBC,YAAAA,OAAO,CAACC,GAAR;AA3NiB,8CA4NVjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CA5NU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAgOAlB,cAAc,CAAC4H,aAAf;AAAA,sFAA+B,kBAAO1H,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClBmB,YAAAA,OADkB,GACNpB,GAAG,CAACqB,MADE,CAClBD,OADkB;AAAA,yBA6CtBpB,GAAG,CAAC0B,IA7CkB,EAGrBC,QAHqB,cAGrBA,QAHqB,EAIrBC,OAJqB,cAIrBA,OAJqB,EAKrBC,IALqB,cAKrBA,IALqB,EAMrBC,SANqB,cAMrBA,SANqB,EAOrBC,MAPqB,cAOrBA,MAPqB,EAQrBC,MARqB,cAQrBA,MARqB,EASrBC,gBATqB,cASrBA,gBATqB,EAUrBC,WAVqB,cAUrBA,WAVqB,EAWrBC,kBAXqB,cAWrBA,kBAXqB,EAYrBwF,kBAZqB,cAYrBA,kBAZqB,EAarBvF,eAbqB,cAarBA,eAbqB,EAcrBwF,gBAdqB,cAcrBA,gBAdqB,EAerBvF,aAfqB,cAerBA,aAfqB,EAgBrBC,aAhBqB,cAgBrBA,aAhBqB,EAiBrBC,eAjBqB,cAiBrBA,eAjBqB,EAkBrBC,MAlBqB,cAkBrBA,MAlBqB,EAmBrBC,YAnBqB,cAmBrBA,YAnBqB,EAoBrBC,UApBqB,cAoBrBA,UApBqB,EAqBrBC,aArBqB,cAqBrBA,aArBqB,EAsBrBC,UAtBqB,cAsBrBA,UAtBqB,EAuBrBC,aAvBqB,cAuBrBA,aAvBqB,EAwBrBC,UAxBqB,cAwBrBA,UAxBqB,EAyBrBC,aAzBqB,cAyBrBA,aAzBqB,EA0BrBC,iBA1BqB,cA0BrBA,iBA1BqB,EA2BrBC,kBA3BqB,cA2BrBA,kBA3BqB,EA4BrBC,UA5BqB,cA4BrBA,UA5BqB,EA6BrBC,eA7BqB,cA6BrBA,eA7BqB,EA8BrBC,WA9BqB,cA8BrBA,WA9BqB,EA+BrBE,oBA/BqB,cA+BrBA,oBA/BqB,EAgCrBD,mBAhCqB,cAgCrBA,mBAhCqB,EAiCrBE,cAjCqB,cAiCrBA,cAjCqB,EAkCrBC,gBAlCqB,cAkCrBA,gBAlCqB,EAmCrBC,eAnCqB,cAmCrBA,eAnCqB,EAoCrBC,iBApCqB,cAoCrBA,iBApCqB,EAqCrBC,cArCqB,cAqCrBA,cArCqB,EAsCrBC,SAtCqB,cAsCrBA,SAtCqB,EAuCrBC,YAvCqB,cAuCrBA,YAvCqB,EAwCrBxD,iBAxCqB,cAwCrBA,iBAxCqB,EAyCrByD,aAzCqB,cAyCrBA,aAzCqB,EA0CrBC,qBA1CqB,cA0CrBA,qBA1CqB,EA2CrBC,kBA3CqB,cA2CrBA,kBA3CqB,EA4CrBC,eA5CqB,cA4CrBA,eA5CqB,EA+C1B;;AACI4D,YAAAA,SAhDsB,GAgDV,IAhDU;AAiDtBC,YAAAA,SAjDsB,GAiDV,IAjDU;AAkDtBC,YAAAA,SAlDsB,GAkDV,IAlDU;AAmDtBC,YAAAA,aAnDsB,GAmDN,IAnDM;AAoDtBC,YAAAA,kBApDsB,GAoDD,IApDC;AAqDtBC,YAAAA,SArDsB,GAqDV,IArDU;AAsDtBC,YAAAA,aAtDsB,GAsDN,IAtDM;AAuDtBC,YAAAA,gBAvDsB,GAuDH,IAvDG;AAwDtBC,YAAAA,eAxDsB,GAwDJ,IAxDI;AAyDtBC,YAAAA,eAzDsB,GAyDJ,IAzDI;AAAA;AAAA;AAAA,mBA6DKjE,gBAAOC,OAAP,CAAe;AAAEC,cAAAA,IAAI,EAAE5C;AAAR,aAAf,CA7DL;;AAAA;AA6Df6C,YAAAA,WA7De;;AAAA,gBA8DhBA,WA9DgB;AAAA;AAAA;AAAA;;AAAA,8CA8DIvE,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,qBAAcW,QAAd;AAAT,aAArB,CA9DJ;;AAAA;AAAA;AAAA,mBAiEOkD,kBAASP,OAAT,CAAiB;AAAEQ,cAAAA,QAAQ,EAAElD;AAAZ,aAAjB,CAjEP;;AAAA;AAiEfmD,YAAAA,aAjEe;;AAAA,gBAkEhBA,aAlEgB;AAAA;AAAA;AAAA;;AAAA,8CAkEM9E,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,oBAAaY,OAAb;AAAT,aAArB,CAlEN;;AAAA;AAAA;AAAA,mBAqEG8C,iBAAQJ,OAAR,CAAgB;AAAEK,cAAAA,OAAO,EAAE9C;AAAX,aAAhB,CArEH;;AAAA;AAqEf0G,YAAAA,SArEe;;AAAA,gBAsEhBA,SAtEgB;AAAA;AAAA;AAAA;;AAAA,8CAsEEtI,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,wBAAca,IAAd;AAAT,aAArB,CAtEF;;AAAA;AAAA;AAAA,mBAyEc2D,mBAAUlB,OAAV,CAAkB;AAAEC,cAAAA,IAAI,EAAEnC;AAAR,aAAlB,CAzEd;;AAAA;AAyEfqD,YAAAA,oBAzEe;;AAAA,gBA0EhBA,oBA1EgB;AAAA;AAAA;AAAA;;AAAA,8CA0EaxF,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,yBAAeoB,eAAf;AAAT,aAArB,CA1Eb;;AAAA;AAAA;AAAA,mBA6EQoE,mBAAUlC,OAAV,CAAkB;AAAEC,cAAAA,IAAI,EAAEhB;AAAR,aAAlB,CA7ER;;AAAA;AA6EfkD,YAAAA,cA7Ee;;AAAA,gBA8EhBA,cA9EgB;AAAA;AAAA;AAAA;;AAAA,8CA8EOxG,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,yBAAeuC,cAAf;AAAT,aAArB,CA9EP;;AAAA;AAAA;AAAA,mBAiFO0D,kBAAS3C,OAAT,CAAiB;AAAEC,cAAAA,IAAI,EAAEX;AAAR,aAAjB,CAjFP;;AAAA;AAiFfsD,YAAAA,aAjFe;;AAAA,gBAkFhBA,aAlFgB;AAAA;AAAA;AAAA;;AAAA,8CAkFMjH,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,qBAAc4C,SAAd;AAAT,aAArB,CAlFN;;AAAA;AAAA;AAAA,mBAqFQuD,mBAAU7C,OAAV,CAAkB;AAAEC,cAAAA,IAAI,EAAEV;AAAR,aAAlB,CArFR;;AAAA;AAqFfuD,YAAAA,cArFe;;AAAA,gBAsFhBA,cAtFgB;AAAA;AAAA;AAAA;;AAAA,8CAsFOnH,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,4BAAqB6C,YAArB;AAAT,aAArB,CAtFP;;AAAA;AAAA,kBAyFjB9B,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAIiD,SAA5B,IAAyCjD,MAAM,IAAI,EAzFlC;AAAA;AAAA;AAAA;;AA0FhB8F,YAAAA,SAAS,GAAG,IAAZ;AA1FgB;AAAA;;AAAA;AAAA;AAAA,mBA4FS5C,iBAAQX,OAAR,CAAgB;AAAEC,cAAAA,IAAI,EAAExC;AAAR,aAAhB,CA5FT;;AAAA;AA4FVmD,YAAAA,UA5FU;;AAAA,gBA6FXA,UA7FW;AAAA;AAAA;AAAA;;AAAA,8CA6FQjF,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,kBAAWe,MAAX;AAAT,aAArB,CA7FR;;AAAA;AA8FhB8F,YAAAA,SAAS,GAAG3C,UAAU,CAACT,GAAvB;;AA9FgB;AAAA,kBAkGjBxC,gBAAgB,IAAI,IAApB,IAA4BA,gBAAgB,IAAI+C,SAAhD,IAA6D/C,gBAAgB,IAAI,EAlGhE;AAAA;AAAA;AAAA;;AAmGhB6F,YAAAA,SAAS,GAAG,IAAZ;AAnGgB;AAAA;;AAAA;AAAA;AAAA,mBAqGQ3C,cAAKb,OAAL,CAAa;AAAEC,cAAAA,IAAI,EAAEtC;AAAR,aAAb,CArGR;;AAAA;AAqGVuG,YAAAA,SArGU;;AAAA,gBAsGXA,SAtGW;AAAA;AAAA;AAAA;;AAAA,8CAsGOvI,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,mBAASiB,gBAAT;AAAT,aAArB,CAtGP;;AAAA;AAuGhB6F,YAAAA,SAAS,GAAGU,SAAS,CAAC/D,GAAtB;;AAvGgB;AAAA,kBA2GjBvC,WAAW,IAAI,IAAf,IAAuBA,WAAW,IAAI8C,SAAtC,IAAmD9C,WAAW,IAAI,EA3GjD;AAAA;AAAA;AAAA;;AA4GhB6F,YAAAA,SAAS,GAAG,IAAZ;AA5GgB;AAAA;;AAAA;AAAA;AAAA,mBA8GQ5C,cAAKb,OAAL,CAAa;AAAEC,cAAAA,IAAI,EAAErC;AAAR,aAAb,CA9GR;;AAAA;AA8GVsG,YAAAA,UA9GU;;AAAA,gBA+GXA,UA/GW;AAAA;AAAA;AAAA;;AAAA,8CA+GOvI,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,mBAASkB,WAAT;AAAT,aAArB,CA/GP;;AAAA;AAgHhB6F,YAAAA,SAAS,GAAGS,UAAS,CAAC/D,GAAtB;;AAhHgB;AAAA,kBAoHjBtC,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,IAAI6C,SAApD,IAAiE7C,kBAAkB,IAAI,EApHtE;AAAA;AAAA;AAAA;;AAqHhB6F,YAAAA,aAAa,GAAG,IAAhB;AArHgB;AAAA;;AAAA;AAAA;AAAA,mBAuHa1C,mBAAUhB,OAAV,CAAkB;AAAEC,cAAAA,IAAI,EAAEpC;AAAR,aAAlB,CAvHb;;AAAA;AAuHVoD,YAAAA,cAvHU;;AAAA,gBAwHXA,cAxHW;AAAA;AAAA;AAAA;;AAAA,8CAwHYtF,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,yBAAemB,kBAAf;AAAT,aAArB,CAxHZ;;AAAA;AAyHhB6F,YAAAA,aAAa,GAAGzC,cAAc,CAACd,GAA/B;;AAzHgB;AAAA,kBA6HjBlC,eAAe,IAAI,IAAnB,IAA2BA,eAAe,IAAIyC,SAA9C,IAA2DzC,eAAe,IAAI,EA7H7D;AAAA;AAAA;AAAA;;AA8HhB0F,YAAAA,kBAAkB,GAAG,IAArB;AA9HgB;AAAA;;AAAA;AAAA;AAAA,mBAgIkBvC,wBAAepB,OAAf,CAAuB;AAAEC,cAAAA,IAAI,EAAEhC;AAAR,aAAvB,CAhIlB;;AAAA;AAgIVoD,YAAAA,mBAhIU;;AAAA,gBAiIXA,mBAjIW;AAAA;AAAA;AAAA;;AAAA,8CAiIiB1F,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,2BAAoBuB,eAApB;AAAT,aAArB,CAjIjB;;AAAA;AAkIhB0F,YAAAA,kBAAkB,GAAGtC,mBAAmB,CAAClB,GAAzC;;AAlIgB;AAAA,kBAsIjBjC,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAIwC,SAA5B,IAAyCxC,MAAM,IAAI,EAtIlC;AAAA;AAAA;AAAA;;AAuIhB0F,YAAAA,SAAS,GAAG,IAAZ;AAvIgB;AAAA;;AAAA;AAAA;AAAA,mBAyIStC,eAAMtB,OAAN,CAAc;AAAEC,cAAAA,IAAI,EAAE/B;AAAR,aAAd,CAzIT;;AAAA;AAyIVqD,YAAAA,UAzIU;;AAAA,gBA0IXA,UA1IW;AAAA;AAAA;AAAA;;AAAA,8CA0IQ5F,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,kBAAWwB,MAAX;AAAT,aAArB,CA1IR;;AAAA;AA2IhB0F,YAAAA,SAAS,GAAGrC,UAAU,CAACpB,GAAvB;;AA3IgB;AAAA,kBA+IjBhC,YAAY,IAAI,IAAhB,IAAwBA,YAAY,IAAIuC,SAAxC,IAAqDvC,YAAY,IAAI,EA/IpD;AAAA;AAAA;AAAA;;AAgJhB0F,YAAAA,aAAa,GAAG,IAAhB;AAhJgB;AAAA;;AAAA;AAAA;AAAA,mBAkJOrC,aAAIxB,OAAJ,CAAY;AAAEyB,cAAAA,aAAa,EAAEtD;AAAjB,aAAZ,CAlJP;;AAAA;AAkJVuD,YAAAA,QAlJU;;AAAA,gBAmJXA,QAnJW;AAAA;AAAA;AAAA;;AAAA,8CAmJM/F,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,sBAAeyB,YAAf;AAAT,aAArB,CAnJN;;AAAA;AAoJhB0F,YAAAA,aAAa,GAAGnC,QAAQ,CAACvB,GAAzB;;AApJgB;AAAA;AAAA,mBAwJUwB,kBAAS9F,IAAT,CAAc;AAAE+F,cAAAA,WAAW,EAAE;AAAEC,gBAAAA,GAAG,EAAExD;AAAP;AAAf,aAAd,CAxJV;;AAAA;AAwJfyD,YAAAA,gBAxJe;;AAAA,gBAyJhBA,gBAzJgB;AAAA;AAAA;AAAA;;AAAA,8CAyJSnG,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,2BAAiB2B,aAAjB;AAAT,aAArB,CAzJT;;AAAA;AAAA;AAAA,mBA4JUsD,kBAAS9F,IAAT,CAAc;AAAE+F,cAAAA,WAAW,EAAE;AAAEC,gBAAAA,GAAG,EAAEtD;AAAP;AAAf,aAAd,CA5JV;;AAAA;AA4Jf0D,YAAAA,gBA5Je;;AAAA,gBA6JhBA,gBA7JgB;AAAA;AAAA;AAAA;;AAAA,8CA6JStG,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,2BAAiB6B,aAAjB;AAAT,aAArB,CA7JT;;AAAA;AAAA;AAAA,mBAgKS0E,oBAAWpH,IAAX,CAAgB;AAAE+F,cAAAA,WAAW,EAAE;AAAEC,gBAAAA,GAAG,EAAE/C;AAAP;AAAf,aAAhB,CAhKT;;AAAA;AAgKfqF,YAAAA,eAhKe;;AAAA,gBAiKhBA,eAjKgB;AAAA;AAAA;AAAA;;AAAA,8CAiKQxI,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,sBAAeoC,WAAf;AAAT,aAArB,CAjKR;;AAAA;AAAA,kBAoKjBC,mBAAmB,IAAI,IAAvB,IAA+BA,mBAAmB,IAAI2B,SAAtD,IAAmE3B,mBAAmB,IAAI,EApKzE;AAAA;AAAA;AAAA;;AAqKhB+E,YAAAA,gBAAgB,GAAG,IAAnB;AArKgB;AAAA;;AAAA;AAAA;AAAA,mBAuKarB,4BAAmBzC,OAAnB,CAA2B;AAAEC,cAAAA,IAAI,EAAElB;AAAR,aAA3B,CAvKb;;AAAA;AAuKV2D,YAAAA,cAvKU;;AAAA,gBAwKXA,cAxKW;AAAA;AAAA;AAAA;;AAAA,8CAwKY/G,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,mCAAyBqC,mBAAzB;AAAT,aAArB,CAxKZ;;AAAA;AAyKhB+E,YAAAA,gBAAgB,GAAGpB,cAAc,CAACvC,GAAlC;;AAzKgB;AAAA,kBA6KjBjB,gBAAgB,IAAI,IAApB,IAA4BA,gBAAgB,IAAIwB,SAAhD,IAA6DxB,gBAAgB,IAAI,EA7KhE;AAAA;AAAA;AAAA;;AA8KhB6E,YAAAA,eAAe,GAAG,IAAlB;AA9KgB;AAAA;;AAAA;AAAA;AAAA,mBAgLexB,yBAAgBvC,OAAhB,CAAwB;AAAEC,cAAAA,IAAI,EAAEf;AAAR,aAAxB,CAhLf;;AAAA;AAgLVsD,YAAAA,gBAhLU;;AAAA,gBAiLXA,gBAjLW;AAAA;AAAA;AAAA;;AAAA,8CAiLc7G,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,6BAAsBwC,gBAAtB;AAAT,aAArB,CAjLd;;AAAA;AAkLhB6E,YAAAA,eAAe,GAAGvB,gBAAgB,CAACrC,GAAnC;;AAlLgB;AAAA,kBAsLjBT,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,IAAIgB,SAApD,IAAiEhB,kBAAkB,IAAI,EAtLtE;AAAA;AAAA;AAAA;;AAuLhBsE,YAAAA,eAAe,GAAG,IAAlB;AAvLgB;AAAA;;AAAA;AAAA;AAAA,mBAyLejB,2BAAkB/C,OAAlB,CAA0B;AAAEC,cAAAA,IAAI,EAAEP;AAAR,aAA1B,CAzLf;;AAAA;AAyLVsD,YAAAA,gBAzLU;;AAAA,gBA0LXA,gBA1LW;AAAA;AAAA;AAAA;;AAAA,8CA0LcrH,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,2BAAiBgD,kBAAjB;AAAT,aAArB,CA1Ld;;AAAA;AA2LhBsE,YAAAA,eAAe,GAAGhB,gBAAgB,CAAC7C,GAAnC;;AA3LgB;AAAA;AAAA,mBA8LDvE,cAAKwI,iBAAL,CAAuBtH,OAAvB,EAAgC;AAC/CU,cAAAA,SAAS,EAATA,SAD+C;AAE/CE,cAAAA,MAAM,EAANA,MAF+C;AAG/C2F,cAAAA,kBAAkB,EAAlBA,kBAH+C;AAI/CC,cAAAA,gBAAgB,EAAhBA,gBAJ+C;AAK/CvF,cAAAA,aAAa,EAAbA,aAL+C;AAM/CC,cAAAA,aAAa,EAAbA,aAN+C;AAO/CI,cAAAA,UAAU,EAAVA,UAP+C;AAQ/CK,cAAAA,aAAa,EAAbA,aAR+C;AAS/CC,cAAAA,iBAAiB,EAAjBA,iBAT+C;AAU/CC,cAAAA,kBAAkB,EAAlBA,kBAV+C;AAW/CC,cAAAA,UAAU,EAAVA,UAX+C;AAY/CC,cAAAA,eAAe,EAAfA,eAZ+C;AAa/CG,cAAAA,oBAAoB,EAApBA,oBAb+C;AAc/CG,cAAAA,eAAe,EAAfA,eAd+C;AAe/CC,cAAAA,iBAAiB,EAAjBA,iBAf+C;AAgB/CC,cAAAA,cAAc,EAAdA,cAhB+C;AAiB/CtD,cAAAA,iBAAiB,EAAjBA,iBAjB+C;AAkB/CyD,cAAAA,aAAa,EAAbA,aAlB+C;AAmB/CC,cAAAA,qBAAqB,EAArBA,qBAnB+C;AAoB/CE,cAAAA,eAAe,EAAfA,eApB+C;AAqB/CtC,cAAAA,QAAQ,EAAE6C,WAAW,CAACC,GArByB;AAsB/C7C,cAAAA,OAAO,EAAEmD,aAAa,CAACN,GAtBwB;AAuB/C5C,cAAAA,IAAI,EAAE0G,SAAS,CAAC9D,GAvB+B;AAwB/CrC,cAAAA,eAAe,EAAEqD,oBAAoB,CAAChB,GAxBS;AAyB/ClB,cAAAA,cAAc,EAAEkD,cAAc,CAAChC,GAzBgB;AA0B/Cb,cAAAA,SAAS,EAAEsD,aAAa,CAACzC,GA1BsB;AA2B/CZ,cAAAA,YAAY,EAAEuD,cAAc,CAAC3C,GA3BkB;AA4B/C1C,cAAAA,MAAM,EAAE8F,SA5BuC;AA6B/C5F,cAAAA,gBAAgB,EAAE6F,SA7B6B;AA8B/C5F,cAAAA,WAAW,EAAE6F,SA9BkC;AA+B/C5F,cAAAA,kBAAkB,EAAE6F,aA/B2B;AAgC/CzF,cAAAA,eAAe,EAAE0F,kBAhC8B;AAiC/CzF,cAAAA,MAAM,EAAE0F,SAjCuC;AAkC/CzF,cAAAA,YAAY,EAAE0F,aAlCiC;AAmC/CxF,cAAAA,aAAa,EAAEyD,gBAAgB,CAACC,GAAjB,CAAqB,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAACqC,EAAT;AAAA,eAArB,CAnCgC;AAoC/C9F,cAAAA,aAAa,EAAE0D,gBAAgB,CAACF,GAAjB,CAAqB,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAAC7B,GAAT;AAAA,eAArB,CApCgC;AAqC/CrB,cAAAA,WAAW,EAAEqF,eAAe,CAACpC,GAAhB,CAAoB,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAAC7B,GAAT;AAAA,eAApB,CArCkC;AAsC/CpB,cAAAA,mBAAmB,EAAE+E,gBAtC0B;AAuC/C5E,cAAAA,gBAAgB,EAAE6E,eAvC6B;AAwC/CzF,cAAAA,UAAU,EAAVA,UAxC+C;AAyC/CE,cAAAA,UAAU,EAAVA,UAzC+C;AA0C/CkB,cAAAA,kBAAkB,EAAEsE;AA1C2B,aAAhC,CA9LC;;AAAA;AA8Lf5H,YAAAA,KA9Le;;AAAA,iBA2OjBA,KA3OiB;AAAA;AAAA;AAAA;;AA4OhBT,YAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAT;AA5OgB;AAAA;;AAAA;AAAA,8CA8OTf,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CA9OS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiPrBC,YAAAA,OAAO,CAACC,GAAR;AAjPqB,8CAkPdjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAlPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAsPAlB,cAAc,CAAC8I,aAAf;AAAA,sFAA+B,kBAAO5I,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBmB,YAAAA,OADkB,GACNpB,GAAG,CAACqB,MADE,CAClBD,OADkB;AAAA;AAAA;AAAA,mBAIDlB,cAAK2I,iBAAL,CAAuBzH,OAAvB,CAJC;;AAAA;AAIfV,YAAAA,KAJe;;AAAA,iBAMjBA,KANiB;AAAA;AAAA;AAAA;;AAOhBT,YAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAT;AAPgB;AAAA;;AAAA;AAAA,8CASTf,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CATS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYrBC,YAAAA,OAAO,CAACC,GAAR;AAZqB,8CAadjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAbc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAiBAlB,cAAc,CAACgJ,wBAAf;AAAA,sFAA0C,kBAAO9I,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACSD,GAAG,CAAC0B,IADb,EAC7BkC,SAD6B,cAC7BA,SAD6B,EAClBmF,KADkB,cAClBA,KADkB,EACXC,GADW,cACXA,GADW,EACNC,UADM,cACNA,UADM;AAEjCvI,YAAAA,KAFiC,GAEzB,IAFyB;AAAA;;AAAA,iBAK5BuI,UAL4B;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMb/I,cAAKC,IAAL,CAAU;AACnBwD,cAAAA,cAAc,EAAE;AAAEuF,gBAAAA,MAAM,EAAE,OAAOtF,SAAP,GAAmB;AAA7B,eADG;AAEnBtB,cAAAA,aAAa,EAAE;AACV6G,gBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,KAAT,CADI;AAEVM,gBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASJ,GAAT;AAFI;AAFI,aAAV,EAOR5I,IAPQ,CAOH;AAAEC,cAAAA,iBAAiB,EAAE,CAAC;AAAtB,aAPG,EAQRC,QARQ,CAQC;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aARD,EAYRF,QAZQ,CAYC;AACLC,cAAAA,IAAI,EAAE,MADD;AAELC,cAAAA,MAAM,EAAE,uBAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,OADD;AAELC,gBAAAA,MAAM,EAAE,mBAFH;AAGLF,gBAAAA,QAAQ,EAAE;AACLC,kBAAAA,IAAI,EAAE,OADD;AAELC,kBAAAA,MAAM,EAAE;AAFH;AAHL;AAHL,aAZD,EAwBRF,QAxBQ,CAwBC;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxBD,EA4BRF,QA5BQ,CA4BC;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5BD,EAgCRF,QAhCQ,CAgCC;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhCD,EAoCRF,QApCQ,CAoCC;AACLC,cAAAA,IAAI,EAAE,aADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApCD,EAwCRF,QAxCQ,CAwCC;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxCD,EA4CRF,QA5CQ,CA4CC;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5CD,EAgDRF,QAhDQ,CAgDC;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhDD,EAoDRF,QApDQ,CAoDC;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApDD,EAwDRF,QAxDQ,CAwDC;AACLC,cAAAA,IAAI,EAAE,SADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxDD,EA4DRF,QA5DQ,CA4DC;AACLC,cAAAA,IAAI,EAAE,gBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5DD,EAgERF,QAhEQ,CAgEC;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhED,EAoERF,QApEQ,CAoEC;AACLC,cAAAA,IAAI,EAAE,cADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApED,EAwERF,QAxEQ,CAwEC;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxED,EA4ERF,QA5EQ,CA4EC,WA5ED,EA6ERA,QA7EQ,CA6EC,WA7ED,EA8ERA,QA9EQ,CA8EC,YA9ED,EA+ERA,QA/EQ,CA+EC;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA/ED,CANa;;AAAA;AAM3BE,YAAAA,KAN2B;AAAA;AAAA;;AAAA;AAAA;AAAA,mBA0FbR,cAAKC,IAAL,CAAU;AACnBwD,cAAAA,cAAc,EAAE;AAAEuF,gBAAAA,MAAM,EAAE,OAAOtF,SAAP,GAAmB;AAA7B,eADG;AAEnBvD,cAAAA,iBAAiB,EAAE;AACd8I,gBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,KAAT,CADQ;AAEdM,gBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASJ,GAAT;AAFQ;AAFA,aAAV,EAOR5I,IAPQ,CAOH;AAAEC,cAAAA,iBAAiB,EAAE,CAAC;AAAtB,aAPG,EAQRC,QARQ,CAQC;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aARD,EAYRF,QAZQ,CAYC;AACLC,cAAAA,IAAI,EAAE,MADD;AAELC,cAAAA,MAAM,EAAE,uBAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,OADD;AAELC,gBAAAA,MAAM,EAAE,mBAFH;AAGLF,gBAAAA,QAAQ,EAAE;AACLC,kBAAAA,IAAI,EAAE,OADD;AAELC,kBAAAA,MAAM,EAAE;AAFH;AAHL;AAHL,aAZD,EAwBRF,QAxBQ,CAwBC;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxBD,EA4BRF,QA5BQ,CA4BC;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5BD,EAgCRF,QAhCQ,CAgCC;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhCD,EAoCRF,QApCQ,CAoCC;AACLC,cAAAA,IAAI,EAAE,aADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApCD,EAwCRF,QAxCQ,CAwCC;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxCD,EA4CRF,QA5CQ,CA4CC;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5CD,EAgDRF,QAhDQ,CAgDC;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhDD,EAoDRF,QApDQ,CAoDC;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApDD,EAwDRF,QAxDQ,CAwDC;AACLC,cAAAA,IAAI,EAAE,SADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxDD,EA4DRF,QA5DQ,CA4DC;AACLC,cAAAA,IAAI,EAAE,gBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA5DD,EAgERF,QAhEQ,CAgEC;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAhED,EAoERF,QApEQ,CAoEC;AACLC,cAAAA,IAAI,EAAE,cADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aApED,EAwERF,QAxEQ,CAwEC;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAxED,EA4ERF,QA5EQ,CA4EC,WA5ED,EA6ERA,QA7EQ,CA6EC,WA7ED,EA8ERA,QA9EQ,CA8EC,YA9ED,EA+ERA,QA/EQ,CA+EC;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA/ED,CA1Fa;;AAAA;AA0F3BE,YAAAA,KA1F2B;;AAAA;AAAA,kBA+K5BA,KAAK,CAACC,MAAN,GAAe,CA/Ka;AAAA;AAAA;AAAA;;AAgL3BV,YAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,cAAAA,KAAK,EAAEH,KAAK,CAACC,MAAf;AAAuBG,cAAAA,GAAG,EAAEJ;AAA5B,aAAT;AAhL2B;AAAA;;AAAA;AAAA,8CAkLpBT,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,wBAAiB4C,SAAjB;AAAT,aAArB,CAlLoB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqLhC3C,YAAAA,OAAO,CAACC,GAAR;AArLgC,8CAsLzBjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAtLyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1C;;AAAA;AAAA;AAAA;AAAA;;AA0LAlB,cAAc,CAACwJ,kBAAf;AAAA,sFAAoC,kBAAOtJ,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACGD,GAAG,CAAC0B,IADP,EACvBkC,SADuB,cACvBA,SADuB,EACZmF,KADY,cACZA,KADY,EACLC,GADK,cACLA,GADK;AAAA;AAAA;AAAA,mBAIN9I,cAAKqJ,SAAL,CAAe,CAC9B;AACKC,cAAAA,MAAM,EAAE;AACH7F,gBAAAA,cAAc,EAAEC,SADb;AAEHvD,gBAAAA,iBAAiB,EAAE;AACd8I,kBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,KAAT,CADQ;AAEdM,kBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASJ,GAAT;AAFQ;AAFhB;AADb,aAD8B,EAU9B;AACKS,cAAAA,MAAM,EAAE;AACHhF,gBAAAA,GAAG,EAAE;AAAEiF,kBAAAA,MAAM,EAAE;AAAV,iBADF;AAEHC,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,IAAI,EAAE;AAAR;AAFT;AADb,aAV8B,EAgB9B;AACKC,cAAAA,KAAK,EAAE;AACFF,gBAAAA,UAAU,EAAE,CAAC;AADX;AADZ,aAhB8B,CAAf,CAJM;;AAAA;AAIpBjJ,YAAAA,KAJoB;;AAAA,kBA2BtBA,KAAK,CAACC,MAAN,GAAe,CA3BO;AAAA;AAAA;AAAA;;AA4BrBV,YAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,cAAAA,KAAK,EAAEH,KAAK,CAACC,MAAf;AAAuBmJ,cAAAA,OAAO,EAAEpJ;AAAhC,aAAT;AA5BqB;AAAA;;AAAA;AAAA,8CA8BdT,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO;AAAT,aAArB,CA9Bc;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiC1BC,YAAAA,OAAO,CAACC,GAAR;AAjC0B,8CAkCnBjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAlCmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;AAsCAlB,cAAc,CAACiK,mBAAf;AAAA,sFAAqC,kBAAO/J,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACuBD,GAAG,CAAC0B,IAD3B,EACxBgI,MADwB,cACxBA,MADwB,EAChBM,SADgB,cAChBA,SADgB,EACLC,WADK,cACLA,WADK,EACQlB,KADR,cACQA,KADR,EACeC,GADf,cACeA,GADf;AAE5BtI,YAAAA,KAF4B,GAEpB,IAFoB;AAAA;;AAAA,iBAKvBuJ,WALuB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMR/J,cAAKC,IAAL,CAAU;AACnBwH,cAAAA,kBAAkB,EAAE;AAAEuB,gBAAAA,MAAM,EAAE,OAAOc,SAAP,GAAmB;AAA7B,eADD;AAEnB1H,cAAAA,aAAa,EAAE;AACV6G,gBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,KAAT,CADI;AAEVM,gBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASJ,GAAT;AAFI;AAFI,aAAV,EAMXkB,cANW,EANQ;;AAAA;AAMtBxJ,YAAAA,KANsB;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAcRR,cAAKC,IAAL,CAAU;AACnB2D,cAAAA,aAAa,EAAE;AAAEoF,gBAAAA,MAAM,EAAE,OAAOQ,MAAP,GAAgB;AAA1B,eADI;AAEnBrJ,cAAAA,iBAAiB,EAAE;AACd8I,gBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,KAAT,CADQ;AAEdM,gBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASJ,GAAT;AAFQ;AAFA,aAAV,EAMXkB,cANW,EAdQ;;AAAA;AActBxJ,YAAAA,KAdsB;;AAAA;AAsB3B,gBAAIA,KAAK,IAAI,CAAb,EAAgB;AACXT,cAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEuJ,gBAAAA,KAAK,EAAEzJ;AAAT,eAAT;AACJ;;AAxB0B;AAAA;;AAAA;AAAA;AAAA;AA0B3BO,YAAAA,OAAO,CAACC,GAAR;AA1B2B,8CA2BpBjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CA3BoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AA+BAlB,cAAc,CAACsK,uBAAf;AAAA,sFAAyC,kBAAOpK,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACFD,GAAG,CAAC0B,IADF,EAC5BsI,SAD4B,cAC5BA,SAD4B,EACjBjB,KADiB,cACjBA,KADiB,EACVC,GADU,cACVA,GADU;AAAA;AAAA;AAAA,mBAIX9I,cAAKqJ,SAAL,CAAe,CAC9B;AACKC,cAAAA,MAAM,EAAE;AACH7B,gBAAAA,kBAAkB,EAAEqC,SADjB;AAEH1H,gBAAAA,aAAa,EAAE;AACV6G,kBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,KAAT,CADI;AAEVM,kBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASJ,GAAT;AAFI;AAFZ;AADb,aAD8B,EAU9B;AACKS,cAAAA,MAAM,EAAE;AACHhF,gBAAAA,GAAG,EAAE,iBADF;AAEH4F,gBAAAA,GAAG,EAAE;AACAT,kBAAAA,IAAI,EAAE;AADN;AAFF;AADb,aAV8B,CAAf,CAJW;;AAAA;AAIzBlJ,YAAAA,KAJyB;;AAwB/B,gBAAIA,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACjBV,cAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,gBAAAA,KAAK,EAAEH,KAAK,CAACC,MAAf;AAAuBmJ,gBAAAA,OAAO,EAAEpJ;AAAhC,eAAT;AACJ;;AA1B8B;AAAA;;AAAA;AAAA;AAAA;AA4B/BO,YAAAA,OAAO,CAACC,GAAR;AA5B+B,8CA6BxBjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CA7BwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzC;;AAAA;AAAA;AAAA;AAAA;;AAiCAlB,cAAc,CAACwK,gBAAf;AAAA,uFAAkC,mBAAOtK,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACUD,GAAG,CAAC0B,IADd,EACrBgI,MADqB,cACrBA,MADqB,EACba,OADa,cACbA,OADa,EACJ3G,SADI,cACJA,SADI;AAAA;AAAA;AAAA,mBAIJ1D,cAAKC,IAAL,CAAU;AACzB2D,cAAAA,aAAa,EAAE;AAAEoF,gBAAAA,MAAM,EAAE,OAAOQ,MAAP,GAAgB;AAA1B,eADU;AAEzBc,cAAAA,YAAY,EAAED,OAFW;AAGzB5G,cAAAA,cAAc,EAAE;AAAEuF,gBAAAA,MAAM,EAAE,OAAOtF,SAAP,GAAmB;AAA7B;AAHS,aAAV,EAKdxD,IALc,CAKT;AAAEC,cAAAA,iBAAiB,EAAE,CAAC;AAAtB,aALS,EAMdC,QANc,CAML;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aANK,EAUdF,QAVc,CAUL;AACLC,cAAAA,IAAI,EAAE,MADD;AAELC,cAAAA,MAAM,EAAE,uBAFH;AAGLF,cAAAA,QAAQ,EAAE;AACLC,gBAAAA,IAAI,EAAE,OADD;AAELC,gBAAAA,MAAM,EAAE,mBAFH;AAGLF,gBAAAA,QAAQ,EAAE;AACLC,kBAAAA,IAAI,EAAE,OADD;AAELC,kBAAAA,MAAM,EAAE;AAFH;AAHL;AAHL,aAVK,EAsBdF,QAtBc,CAsBL;AACLC,cAAAA,IAAI,EAAE,WADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAtBK,EA0BdF,QA1Bc,CA0BL;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA1BK,EA8BdF,QA9Bc,CA8BL;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA9BK,EAkCdF,QAlCc,CAkCL;AACLC,cAAAA,IAAI,EAAE,aADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAlCK,EAsCdF,QAtCc,CAsCL;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAtCK,EA0CdF,QA1Cc,CA0CL;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA1CK,EA8CdF,QA9Cc,CA8CL;AACLC,cAAAA,IAAI,EAAE,iBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA9CK,EAkDdF,QAlDc,CAkDL;AACLC,cAAAA,IAAI,EAAE,QADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAlDK,EAsDdF,QAtDc,CAsDL;AACLC,cAAAA,IAAI,EAAE,SADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAtDK,EA0DdF,QA1Dc,CA0DL;AACLC,cAAAA,IAAI,EAAE,gBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA1DK,EA8DdF,QA9Dc,CA8DL;AACLC,cAAAA,IAAI,EAAE,kBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA9DK,EAkEdF,QAlEc,CAkEL;AACLC,cAAAA,IAAI,EAAE,cADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAlEK,EAsEdF,QAtEc,CAsEL;AACLC,cAAAA,IAAI,EAAE,oBADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aAtEK,EA0EdF,QA1Ec,CA0EL,WA1EK,EA2EdA,QA3Ec,CA2EL,WA3EK,EA4EdA,QA5Ec,CA4EL,YA5EK,EA6EdA,QA7Ec,CA6EL;AACLC,cAAAA,IAAI,EAAE,UADD;AAELC,cAAAA,MAAM,EAAE;AAFH,aA7EK,CAJI;;AAAA;AAIlBE,YAAAA,KAJkB;;AAAA,kBAsFpBA,KAAK,CAACC,MAAN,GAAe,CAtFK;AAAA;AAAA;AAAA;;AAuFnBV,YAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,cAAAA,KAAK,EAAEH,KAAK,CAACC,MAAf;AAAuBG,cAAAA,GAAG,EAAEJ;AAA5B,aAAT;AAvFmB;AAAA;;AAAA;AAAA,+CAyFZT,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,wBAAiB0I,MAAjB,4BAAyC9F,SAAzC;AAAT,aAArB,CAzFY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4FxB3C,YAAAA,OAAO,CAACC,GAAR;AA5FwB,+CA6FjBjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,cAAIA;AAAf,aAArB,CA7FiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAiGAlB,cAAc,CAAC2K,oBAAf;AAAA,uFAAsC,mBAAOzK,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACFD,GAAG,CAAC0B,IADF,EACzBgI,MADyB,cACzBA,MADyB,EACjBX,KADiB,cACjBA,KADiB,EACVC,GADU,cACVA,GADU;AAAA;AAAA;AAAA,mBAIR9I,cAAKqJ,SAAL,CAAe,CAC9B;AACKC,cAAAA,MAAM,EAAE;AACH1F,gBAAAA,aAAa,EAAE4F,MADZ;AAEHrJ,gBAAAA,iBAAiB,EAAE;AACd8I,kBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,KAAT,CADQ;AAEdM,kBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASJ,GAAT;AAFQ;AAFhB;AADb,aAD8B,EAU9B;AACKS,cAAAA,MAAM,EAAE;AACHhF,gBAAAA,GAAG,EAAE,OADF;AAEHkF,gBAAAA,UAAU,EAAE;AACPC,kBAAAA,IAAI,EAAE;AADC;AAFT;AADb,aAV8B,EAkB9B;AACKC,cAAAA,KAAK,EAAE;AACFF,gBAAAA,UAAU,EAAE,CAAC;AADX;AADZ,aAlB8B,CAAf,CAJQ;;AAAA;AAItBjJ,YAAAA,KAJsB;;AA6B5B,gBAAIA,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AACjBV,cAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,gBAAAA,KAAK,EAAEH,KAAK,CAACC,MAAf;AAAuBmJ,gBAAAA,OAAO,EAAEpJ;AAAhC,eAAT;AACJ;;AA/B2B;AAAA;;AAAA;AAAA;AAAA;AAiC5BO,YAAAA,OAAO,CAACC,GAAR;AAjC4B,+CAkCrBjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,cAAIA;AAAf,aAArB,CAlCqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAsCAlB,cAAc,CAAC4K,oBAAf;AAAA,uFAAsC,mBAAO1K,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACUD,GAAG,CAAC0B,IADd,EACzBkC,SADyB,cACzBA,SADyB,EACd+G,OADc,cACdA,OADc,EACL5B,KADK,cACLA,KADK,EACEC,GADF,cACEA,GADF,EAEjC;;AAFiC;AAAA;AAAA,mBAKR9I,cAAKqJ,SAAL,CAAe,CAC9B;AACKC,cAAAA,MAAM,EAAE;AACH7F,gBAAAA,cAAc,EAAEC,SADb;AAEHE,gBAAAA,aAAa,EAAE6G,OAFZ;AAGHtK,gBAAAA,iBAAiB,EAAE;AACd8I,kBAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASL,KAAT,CADQ;AAEdM,kBAAAA,IAAI,EAAE,IAAID,IAAJ,CAASJ,GAAT;AAFQ;AAHhB;AADb,aAD8B,EAW9B;AACKS,cAAAA,MAAM,EAAE;AACHhF,gBAAAA,GAAG,EAAE,WADF;AAEHkF,gBAAAA,UAAU,EAAE;AACPC,kBAAAA,IAAI,EAAE;AADC;AAFT;AADb,aAX8B,EAmB9B;AACKC,cAAAA,KAAK,EAAE;AACFF,gBAAAA,UAAU,EAAE,CAAC;AADX;AADZ,aAnB8B,CAAf,CALQ;;AAAA;AAKtBjJ,YAAAA,KALsB;;AAAA,kBA+BxBA,KAAK,CAACC,MAAN,GAAe,CA/BS;AAAA;AAAA;AAAA;;AAgCvBV,YAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEC,cAAAA,KAAK,EAAEH,KAAK,CAACC,MAAf;AAAuBmJ,cAAAA,OAAO,EAAEpJ;AAAhC,aAAT;AAhCuB;AAAA;;AAAA;AAAA,+CAkChBT,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CAlCgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqC5BC,YAAAA,OAAO,CAACC,GAAR;AArC4B,+CAsCrBjB,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,cAAIA;AAAf,aAArB,CAtCqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;eA0CelB,c","sourcesContent":["import Sale from \"../models/Sale\";\r\nimport Vehicle from \"../models/Vehicle\";\r\nimport Seller from \"../models/Seller\";\r\nimport Customer from \"../models/Customer\";\r\nimport Colores from \"../models/Colores\";\r\nimport Ubicacion from \"../models/Ubicacion\";\r\nimport Financiamiento from \"../models/Financiamiento\";\r\nimport Banco from \"../models/Banco\";\r\nimport Campania from \"../models/Campania\";\r\nimport Maf from \"../models/Maf\";\r\nimport Operacion from \"../models/Operacion\";\r\nimport TipoComprobante from \"../models/TipoComprobante\";\r\nimport Situacion from \"../models/Situacion\";\r\nimport Sucursal from \"../models/Sucursal\";\r\nimport StatusFacturacion from \"../models/StatusFacturacion\";\r\nimport User from \"../models/User\";\r\nimport AccesorioE from \"../models/AccesorioE\";\r\nimport CondicionAccesorio from \"../models/CondicionAccesorio\";\r\nimport Anio from \"../models/Anio\";\r\nimport Condicion from \"../models/Condicion\";\r\n\r\nconst fileController = {};\r\n\r\nfileController.getAll = async (req, res) => {\r\n     try {\r\n          const query = await Sale.find()\r\n               .sort({\r\n                    fecha_cancelacion: -1,\r\n               })\r\n               .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal\",\r\n               })\r\n               .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                         path: \"model\",\r\n                         select: \"marca name avatar\",\r\n                         populate: {\r\n                              path: \"marca\",\r\n                              select: \"name avatar\",\r\n                         },\r\n                    },\r\n               })\r\n               .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"estadoVentaE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate(\"campanias\")\r\n               .populate(\"adicional\")\r\n               .populate(\"accesorios\")\r\n               .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n               })\r\n               .populate({\r\n                    path: \"createdBy\",\r\n                    select: \"name username\",\r\n                    strictPopulate: true,\r\n               });\r\n\r\n          if (query.length > 0) {\r\n               res.json({ total: query, all: query });\r\n          } else {\r\n               return res.status(404).json({ message: `No existen expedientes` });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.getOneById = async (req, res) => {\r\n     const { filesId } = req.params;\r\n\r\n     try {\r\n          const query = await Sale.findById(filesId)\r\n               .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal\",\r\n               })\r\n               .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                         path: \"model\",\r\n                         select: \"marca name avatar\",\r\n                         populate: {\r\n                              path: \"marca\",\r\n                              select: \"name avatar\",\r\n                         },\r\n                    },\r\n               })\r\n               .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"solicitudMAF\",\r\n                    select: \"nro_solicitud fecha_ingreso customer\",\r\n                    populate: {\r\n                         path: \"customer\",\r\n                         select: \"name document\",\r\n                    },\r\n               })\r\n               .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"campaniasTDPE\",\r\n                    select: \"cod_interno descripcion tipo oferta\",\r\n                    populate: {\r\n                         path: \"tipo\",\r\n                         select: \"name\",\r\n                    },\r\n               })\r\n               .populate({\r\n                    path: \"campaniasMafE\",\r\n                    select: \"cod_interno descripcion tipo oferta\",\r\n                    populate: {\r\n                         path: \"tipo\",\r\n                         select: \"name\",\r\n                    },\r\n               })\r\n               .populate({\r\n                    path: 'accesoriosE',\r\n                    select: 'cod_interno name model precio',\r\n                    populate: {\r\n                         path: 'model',\r\n                         select: 'name'\r\n                    }\r\n               })\r\n               .populate({\r\n                    path: \"condicionAccesorioE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({ path: \"estadoVentaE\", select: \"name document\" })\r\n               .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate(\"campanias\")\r\n               .populate(\"adicional\")\r\n               .populate(\"accesorios\")\r\n               .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n               })\r\n               .populate({\r\n                    path: \"createdBy\",\r\n                    select: \"name username\",\r\n                    strictPopulate: false,\r\n               });\r\n\r\n          if (query) {\r\n               res.json({ one: query });\r\n          } else {\r\n               return res.status(404).json({ message: err.message });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.createOne = async (req, res) => {\r\n     const {\r\n          vendedor,\r\n          cliente,\r\n          auto,\r\n          serie_tdp,\r\n          colorE,\r\n          precio,\r\n          anioFabricacionE,\r\n          anioModeloE,\r\n          ubicacionVehiculoE,\r\n          estadoVehiculoE,\r\n          fecha_ciguena,\r\n          fecha_entrega,\r\n          financiamientoE,\r\n          bancoE,\r\n          solicitudMAF,\r\n          adelantosE,\r\n          campaniasTDPE,\r\n          ofertaTDPE,\r\n          campaniasMafE,\r\n          ofertaMafE,\r\n          isToyotaValue,\r\n          arrayToyotaValues,\r\n          descuento_autonort,\r\n          acuerdoTDP,\r\n          observacion_adv,\r\n          accesoriosE,\r\n          condicionAccesorioE,\r\n          condicion_accesorios,\r\n          tipoOperacionE,\r\n          tipoComprobanteE,\r\n          nro_comprobante,\r\n          fecha_comprobante,\r\n          sucursal_venta,\r\n          sucursalE,\r\n          estadoVentaE,\r\n          estatus_venta,\r\n          fecha_cancelacion,\r\n          fecha_facturacion_tdp,\r\n          estadoFacturacionE,\r\n          monto_facturado,\r\n          createdBy,\r\n          fechaCreacionS,\r\n     } = req.body;\r\n\r\n     try {\r\n          const newSale = new Sale({\r\n               serie_tdp,\r\n               precio,\r\n               fecha_ciguena,\r\n               fecha_entrega,\r\n               adelantosE,\r\n               ofertaTDPE,\r\n               ofertaMafE,\r\n               isToyotaValue,\r\n               arrayToyotaValues,\r\n               descuento_autonort,\r\n               acuerdoTDP,\r\n               observacion_adv,\r\n               condicion_accesorios,\r\n               fecha_facturacion_tdp,\r\n               monto_facturado,\r\n               nro_comprobante,\r\n               fecha_comprobante,\r\n               fecha_cancelacion,\r\n               estatus_venta,\r\n               sucursal_venta,\r\n               fechaCreacionS,\r\n          });\r\n\r\n          //Seller Obligado\r\n          const sellerFound = await Seller.findOne({ name: vendedor });\r\n          if (!sellerFound) return res.status(404).json({ message: `Vendedor ${vendedor} no encontrado` });\r\n          newSale.vendedor = sellerFound._id;\r\n\r\n          //Vehicle Obligado\r\n          const carFound = await Vehicle.findOne({ cod_tdp: auto });\r\n          if (!carFound) return res.status(404).json({ message: `Vehículo ${auto} no encontrado` });\r\n          newSale.auto = carFound._id;\r\n\r\n          //Customer Obligado\r\n          const customerFound = await Customer.findOne({ document: cliente });\r\n          if (!customerFound) return res.status(404).json({ message: `Cliente ${cliente} no encontrado` });\r\n          newSale.cliente = customerFound._id;\r\n\r\n          //Item Null\r\n          if (colorE == null || colorE == undefined || colorE == \"\") {\r\n               newSale.colorE = null;\r\n          } else {\r\n               const colorFound = await Colores.findOne({ name: colorE });\r\n               if (!colorFound) return res.status(404).json({ message: `Cliente ${colorE} no encontrado` });\r\n               newSale.colorE = colorFound._id;\r\n          }\r\n\r\n          //Item Null\r\n          if (anioFabricacionE == null || anioFabricacionE == undefined || anioFabricacionE == \"\") {\r\n               newSale.anioFabricacionE = null;\r\n          } else {\r\n               const anioFFound = await Anio.findOne({ name: anioFabricacionE });\r\n               if (!anioFFound) return res.status(404).json({ message: `Año Fabricación ${anioFabricacionE} no encontrado` });\r\n               newSale.anioFabricacionE = anioFFound._id;\r\n          }\r\n\r\n          //Item Null\r\n          if (anioModeloE == null || anioModeloE == undefined || anioModeloE == \"\") {\r\n               newSale.anioModeloE = null;\r\n          } else {\r\n               const anioMFound = await Anio.findOne({ name: anioModeloE });\r\n               if (!anioMFound) return res.status(404).json({ message: `Año Modelo ${anioModeloE} no encontrado` });\r\n               newSale.anioModeloE = anioMFound._id;\r\n          }\r\n\r\n          //Item Null\r\n          if (ubicacionVehiculoE == null || ubicacionVehiculoE == undefined || ubicacionVehiculoE == \"\") {\r\n               newSale.ubicacionVehiculoE = null;\r\n          } else {\r\n               const ubicacionFound = await Ubicacion.findOne({ name: ubicacionVehiculoE });\r\n               if (!ubicacionFound) return res.status(404).json({ message: `Ubicación ${ubicacionVehiculoE} no encontrado` });\r\n               newSale.ubicacionVehiculoE = ubicacionFound._id;\r\n          }\r\n\r\n          //Condición obligada\r\n          const estadoVehicularFound = await Condicion.findOne({ name: estadoVehiculoE });\r\n          if (!estadoVehicularFound) return res.status(404).json({ message: `Estado vehicular ${estadoVehiculoE} no encontrado` });\r\n          newSale.estadoVehiculoE = estadoVehicularFound._id;\r\n\r\n          //Item Null\r\n          if (financiamientoE == null || financiamientoE == undefined || financiamientoE == \"\") {\r\n               newSale.financiamientoE = null;\r\n          } else {\r\n               const financiamientoFound = await Financiamiento.findOne({ name: financiamientoE });\r\n               if (!financiamientoFound) return res.status(404).json({ message: `Financiamiento ${financiamientoE} no encontrado` });\r\n               newSale.financiamientoE = financiamientoFound._id;\r\n          }\r\n\r\n          //Item Null\r\n          if (bancoE == null || bancoE == undefined || bancoE == \"\") {\r\n               newSale.bancoE = null;\r\n          } else {\r\n               const bancoFound = await Banco.findOne({ name: bancoE });\r\n               if (!bancoFound) return res.status(404).json({ message: `Banco ${bancoE} no encontrado` });\r\n               newSale.bancoE = bancoFound._id;\r\n          }\r\n\r\n          //Item Null\r\n          if (solicitudMAF == null || solicitudMAF == undefined || solicitudMAF == \"\") {\r\n               newSale.solicitudMAF = null;\r\n          } else {\r\n               const mafFound = await Maf.findOne({ nro_solicitud: solicitudMAF });\r\n               if (!mafFound) return res.status(404).json({ message: `Solicitud ${solicitudMAF} no encontrada` });\r\n               newSale.solicitudMAF = mafFound._id;\r\n          }\r\n\r\n          const campaniaTDPFound = await Campania.find({ cod_interno: { $in: campaniasTDPE } });\r\n          if (!campaniaTDPFound) return res.status(404).json({ message: `Campaña TDP ${campaniasTDPE} no encontrada` });\r\n          newSale.campaniasTDPE = campaniaTDPFound.map((a) => a._id);\r\n\r\n          const campaniaMAFFound = await Campania.find({ cod_interno: { $in: campaniasMafE } });\r\n          if (!campaniaMAFFound) return res.status(404).json({ message: `Campaña MAF ${campaniasMafE} no encontrada` });\r\n          newSale.campaniasMafE = campaniaMAFFound.map((a) => a._id);\r\n\r\n          //Operacion obligada\r\n          const operacionFound = await Operacion.findOne({ name: tipoOperacionE });\r\n          if (!operacionFound) return res.status(404).json({ message: `Tipo operación ${tipoOperacionE} no encontrada` });\r\n          newSale.tipoOperacionE = operacionFound._id;\r\n\r\n          //User Obligado\r\n          const userFound = await User.findOne({ username: createdBy });\r\n          if (!userFound) return res.status(404).json({ message: `Colaborador ${createdBy} no encontrado` });\r\n          newSale.createdBy = userFound._id;\r\n\r\n          //Item Null\r\n          if (tipoComprobanteE == null || tipoComprobanteE == undefined || tipoComprobanteE == \"\") {\r\n               newSale.tipoComprobanteE = null;\r\n          } else {\r\n               const comprobanteFound = await TipoComprobante.findOne({ name: tipoComprobanteE });\r\n               if (!comprobanteFound) return res.status(404).json({ message: `Tipo comprobante ${tipoComprobanteE} no encontrado` });\r\n               newSale.tipoComprobanteE = comprobanteFound._id;\r\n          }\r\n\r\n          // Item Null\r\n          if (condicionAccesorioE == null || condicionAccesorioE == undefined || condicionAccesorioE == \"\") {\r\n               newSale.condicionAccesorioE = null;\r\n          } else {\r\n               const condicionFound = await CondicionAccesorio.findOne({ name: condicionAccesorioE });\r\n               if (!condicionFound) return res.status(404).json({ message: `Condición accesorio ${condicionAccesorioE} no encontrada` });\r\n               newSale.condicionAccesorioE = condicionFound._id;\r\n          }\r\n\r\n          //Sucursal Obligado\r\n          const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n          if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrada` });\r\n          newSale.sucursalE = sucursalFound._id;\r\n\r\n          //Situacion Obligado\r\n          const situacionFound = await Situacion.findOne({ name: estadoVentaE });\r\n          if (!situacionFound) return res.status(404).json({ message: `Estado de Venta ${estadoVentaE} no encontrado` });\r\n          newSale.estadoVentaE = situacionFound._id;\r\n\r\n          //Item Null\r\n          if (estadoFacturacionE == null || estadoFacturacionE == undefined || estadoFacturacionE == \"\") {\r\n               newSale.estadoFacturacionE = null;\r\n          } else {\r\n               const facturacionFound = await StatusFacturacion.findOne({ name: estadoFacturacionE });\r\n               if (!facturacionFound) return res.status(404).json({ message: `Estado de Venta ${estadoFacturacionE} no encontrado` });\r\n               newSale.estadoFacturacionE = facturacionFound._id;\r\n          }\r\n\r\n          const accesorioFound = await AccesorioE.find({ cod_interno: { $in: accesoriosE } });\r\n          if (!accesorioFound) return res.status(404).json({ message: `Accesorio ${accesoriosE} no encontrado` });\r\n          newSale.accesoriosE = accesorioFound.map((a) => a._id);\r\n\r\n          const query = await newSale.save();\r\n\r\n          if (query) {\r\n               res.json({ message: \"Expediente creado con éxito\" });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.updateOneById = async (req, res) => {\r\n     const { filesId } = req.params;\r\n     const {\r\n          vendedor,\r\n          cliente,\r\n          auto,\r\n          serie_tdp,\r\n          colorE,\r\n          precio,\r\n          anioFabricacionE,\r\n          anioModeloE,\r\n          ubicacionVehiculoE,\r\n          ubicacion_vehiculo,\r\n          estadoVehiculoE,\r\n          estatus_vehiculo,\r\n          fecha_ciguena,\r\n          fecha_entrega,\r\n          financiamientoE,\r\n          bancoE,\r\n          solicitudMAF,\r\n          adelantosE,\r\n          campaniasTDPE,\r\n          ofertaTDPE,\r\n          campaniasMafE,\r\n          ofertaMafE,\r\n          isToyotaValue,\r\n          arrayToyotaValues,\r\n          descuento_autonort,\r\n          acuerdoTDP,\r\n          observacion_adv,\r\n          accesoriosE,\r\n          condicion_accesorios,\r\n          condicionAccesorioE,\r\n          tipoOperacionE,\r\n          tipoComprobanteE,\r\n          nro_comprobante,\r\n          fecha_comprobante,\r\n          sucursal_venta,\r\n          sucursalE,\r\n          estadoVentaE,\r\n          fecha_cancelacion,\r\n          estatus_venta,\r\n          fecha_facturacion_tdp,\r\n          estadoFacturacionE,\r\n          monto_facturado,\r\n     } = req.body;\r\n\r\n     // Opcionales\r\n     let colorNull = null;\r\n     let anioFNull = null;\r\n     let anioMNull = null;\r\n     let ubicacionNull = null;\r\n     let financiamientoNull = null;\r\n     let bancoNull = null;\r\n     let solicitudNull = null;\r\n     let condicionAccNull = null;\r\n     let comprobanteNull = null;\r\n     let facturacionNull = null;\r\n\r\n     try {\r\n          //Vendedor - Obligatorio\r\n          const sellerFound = await Seller.findOne({ name: vendedor });\r\n          if (!sellerFound) return res.status(404).json({ message: `Vendedor ${vendedor} no encontrado` });\r\n\r\n          //Cliente - Obligatorio\r\n          const customerFound = await Customer.findOne({ document: cliente });\r\n          if (!customerFound) return res.status(404).json({ message: `Cliente ${cliente} no encontrado` });\r\n\r\n          // Vehículo - Obligatorio\r\n          const autoFound = await Vehicle.findOne({ cod_tdp: auto });\r\n          if (!autoFound) return res.status(404).json({ message: `Vehículo ${auto} no encontrado` });\r\n\r\n          // Estado Vehicular - Obligatorio\r\n          const estadoVehicularFound = await Condicion.findOne({ name: estadoVehiculoE });\r\n          if (!estadoVehicularFound) return res.status(404).json({ message: `Condición ${estadoVehiculoE} no encontrado` });\r\n\r\n          // Operación - Obligatorio\r\n          const operacionFound = await Operacion.findOne({ name: tipoOperacionE });\r\n          if (!operacionFound) return res.status(404).json({ message: `Operación ${tipoOperacionE} no encontrado` });\r\n\r\n          // Sucursal - Obligatorio\r\n          const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n          if (!sucursalFound) return res.status(404).json({ message: `Sucursal ${sucursalE} no encontrado` });\r\n\r\n          // Situacion - Obligatorio\r\n          const situacionFound = await Situacion.findOne({ name: estadoVentaE });\r\n          if (!situacionFound) return res.status(404).json({ message: `Estado de venta ${estadoVentaE} no encontrado` });\r\n\r\n          // Color - Opcional\r\n          if (colorE == null || colorE == undefined || colorE == \"\") {\r\n               colorNull = null;\r\n          } else {\r\n               const colorFound = await Colores.findOne({ name: colorE });\r\n               if (!colorFound) return res.status(404).json({ message: `Color ${colorE} no encontrado` });\r\n               colorNull = colorFound._id;\r\n          }\r\n\r\n          // Año Fab - Opcional\r\n          if (anioFabricacionE == null || anioFabricacionE == undefined || anioFabricacionE == \"\") {\r\n               anioFNull = null;\r\n          } else {\r\n               const anioFound = await Anio.findOne({ name: anioFabricacionE });\r\n               if (!anioFound) return res.status(404).json({ message: `Año ${anioFabricacionE} no encontrado` });\r\n               anioFNull = anioFound._id;\r\n          }\r\n\r\n          // Año Mod - Opcional\r\n          if (anioModeloE == null || anioModeloE == undefined || anioModeloE == \"\") {\r\n               anioMNull = null;\r\n          } else {\r\n               const anioFound = await Anio.findOne({ name: anioModeloE });\r\n               if (!anioFound) return res.status(404).json({ message: `Año ${anioModeloE} no encontrado` });\r\n               anioMNull = anioFound._id;\r\n          }\r\n\r\n          // Ubicación Vehicular - Opcional\r\n          if (ubicacionVehiculoE == null || ubicacionVehiculoE == undefined || ubicacionVehiculoE == \"\") {\r\n               ubicacionNull = null;\r\n          } else {\r\n               const ubicacionFound = await Ubicacion.findOne({ name: ubicacionVehiculoE });\r\n               if (!ubicacionFound) return res.status(404).json({ message: `Ubicación ${ubicacionVehiculoE} no encontrada` });\r\n               ubicacionNull = ubicacionFound._id;\r\n          }\r\n\r\n          // Financiamiento - Opcional\r\n          if (financiamientoE == null || financiamientoE == undefined || financiamientoE == \"\") {\r\n               financiamientoNull = null;\r\n          } else {\r\n               const financiamientoFound = await Financiamiento.findOne({ name: financiamientoE });\r\n               if (!financiamientoFound) return res.status(404).json({ message: `Financiamiento ${financiamientoE} no encontrado` });\r\n               financiamientoNull = financiamientoFound._id;\r\n          }\r\n\r\n          // Banco - Opcional\r\n          if (bancoE == null || bancoE == undefined || bancoE == \"\") {\r\n               bancoNull = null;\r\n          } else {\r\n               const bancoFound = await Banco.findOne({ name: bancoE });\r\n               if (!bancoFound) return res.status(404).json({ message: `Banco ${bancoE} no encontrado` });\r\n               bancoNull = bancoFound._id;\r\n          }\r\n\r\n          // Solicitud MAF - Opcional\r\n          if (solicitudMAF == null || solicitudMAF == undefined || solicitudMAF == \"\") {\r\n               solicitudNull = null;\r\n          } else {\r\n               const mafFound = await Maf.findOne({ nro_solicitud: solicitudMAF });\r\n               if (!mafFound) return res.status(404).json({ message: `Solicitud ${solicitudMAF} no encontrada` });\r\n               solicitudNull = mafFound._id;\r\n          }\r\n\r\n          // Campania TDP - Opcional\r\n          const campaniaTDPFound = await Campania.find({ cod_interno: { $in: campaniasTDPE } });\r\n          if (!campaniaTDPFound) return res.status(404).json({ message: `Campaña TDP ${campaniasTDPE} no encontrada` });\r\n\r\n          // Campania MAF - Opcional\r\n          const campaniaMAFFound = await Campania.find({ cod_interno: { $in: campaniasMafE } });\r\n          if (!campaniaMAFFound) return res.status(404).json({ message: `Campaña TDP ${campaniasMafE} no encontrada` });\r\n\r\n          // Accesorios - Opcional\r\n          const accesoriosFound = await AccesorioE.find({ cod_interno: { $in: accesoriosE } });\r\n          if (!accesoriosFound) return res.status(404).json({ message: `Accesorio ${accesoriosE} no encontrado` });\r\n\r\n          // Condicion Accesorio - Opcional\r\n          if (condicionAccesorioE == null || condicionAccesorioE == undefined || condicionAccesorioE == \"\") {\r\n               condicionAccNull = null;\r\n          } else {\r\n               const condicionFound = await CondicionAccesorio.findOne({ name: condicionAccesorioE });\r\n               if (!condicionFound) return res.status(404).json({ message: `Condición accesorio ${condicionAccesorioE} no encontrada` });\r\n               condicionAccNull = condicionFound._id;\r\n          }\r\n\r\n          // Tipo Comprobante - Opcional\r\n          if (tipoComprobanteE == null || tipoComprobanteE == undefined || tipoComprobanteE == \"\") {\r\n               comprobanteNull = null;\r\n          } else {\r\n               const comprobanteFound = await TipoComprobante.findOne({ name: tipoComprobanteE });\r\n               if (!comprobanteFound) return res.status(404).json({ message: `Tipo comprobante ${tipoComprobanteE} no encontrado` });\r\n               comprobanteNull = comprobanteFound._id;\r\n          }\r\n\r\n          // Estado Facturacion - Opcional\r\n          if (estadoFacturacionE == null || estadoFacturacionE == undefined || estadoFacturacionE == \"\") {\r\n               facturacionNull = null;\r\n          } else {\r\n               const facturacionFound = await StatusFacturacion.findOne({ name: estadoFacturacionE });\r\n               if (!facturacionFound) return res.status(404).json({ message: `Facturación ${estadoFacturacionE} no encontrado` });\r\n               facturacionNull = facturacionFound._id;\r\n          }\r\n\r\n          const query = await Sale.findByIdAndUpdate(filesId, {\r\n               serie_tdp,\r\n               precio,\r\n               ubicacion_vehiculo,\r\n               estatus_vehiculo,\r\n               fecha_ciguena,\r\n               fecha_entrega,\r\n               adelantosE,\r\n               isToyotaValue,\r\n               arrayToyotaValues,\r\n               descuento_autonort,\r\n               acuerdoTDP,\r\n               observacion_adv,\r\n               condicion_accesorios,\r\n               nro_comprobante,\r\n               fecha_comprobante,\r\n               sucursal_venta,\r\n               fecha_cancelacion,\r\n               estatus_venta,\r\n               fecha_facturacion_tdp,\r\n               monto_facturado,\r\n               vendedor: sellerFound._id,\r\n               cliente: customerFound._id,\r\n               auto: autoFound._id,\r\n               estadoVehiculoE: estadoVehicularFound._id,\r\n               tipoOperacionE: operacionFound._id,\r\n               sucursalE: sucursalFound._id,\r\n               estadoVentaE: situacionFound._id,\r\n               colorE: colorNull,\r\n               anioFabricacionE: anioFNull,\r\n               anioModeloE: anioMNull,\r\n               ubicacionVehiculoE: ubicacionNull,\r\n               financiamientoE: financiamientoNull,\r\n               bancoE: bancoNull,\r\n               solicitudMAF: solicitudNull,\r\n               campaniasTDPE: campaniaTDPFound.map((a) => a.id),\r\n               campaniasMafE: campaniaMAFFound.map((a) => a._id),\r\n               accesoriosE: accesoriosFound.map((a) => a._id),\r\n               condicionAccesorioE: condicionAccNull,\r\n               tipoComprobanteE: comprobanteNull,\r\n               ofertaTDPE,\r\n               ofertaMafE,\r\n               estadoFacturacionE: facturacionNull,\r\n          });\r\n\r\n          if (query) {\r\n               res.json({ message: \"Expediente actualizado con éxito\" });\r\n          } else {\r\n               return res.status(404).json({ message: \"No existe expediente a actualizar\" });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.deleteOneById = async (req, res) => {\r\n     const { filesId } = req.params;\r\n\r\n     try {\r\n          const query = await Sale.findByIdAndDelete(filesId);\r\n\r\n          if (query) {\r\n               res.json({ message: \"Expediente eliminado con éxito\" });\r\n          } else {\r\n               return res.status(404).json({ message: \"No existe Expediente a eliminar\" });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.getFilesBySucursalyFecha = async (req, res) => {\r\n     const { sucursalE, start, end, entregados } = req.body;\r\n     let query = null;\r\n\r\n     try {\r\n          if (entregados) {\r\n               query = await Sale.find({\r\n                    sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                    fecha_entrega: {\r\n                         $gte: new Date(start),\r\n                         $lte: new Date(end),\r\n                    },\r\n               })\r\n                    .sort({ fecha_cancelacion: -1 })\r\n                    .populate({\r\n                         path: \"vendedor\",\r\n                         select: \"name sucursal\",\r\n                    })\r\n                    .populate({\r\n                         path: \"auto\",\r\n                         select: \"model version cod_tdp\",\r\n                         populate: {\r\n                              path: \"model\",\r\n                              select: \"marca name avatar\",\r\n                              populate: {\r\n                                   path: \"marca\",\r\n                                   select: \"name avatar\",\r\n                              },\r\n                         },\r\n                    })\r\n                    .populate({\r\n                         path: \"sucursalE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"colorE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"anioFabricacionE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"anioModeloE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"ubicacionVehiculoE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"estadoVehiculoE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"financiamientoE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"bancoE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"cliente\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate({\r\n                         path: \"tipoOperacionE\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate({\r\n                         path: \"tipoComprobanteE\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate({\r\n                         path: \"estadoVentaE\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate({\r\n                         path: \"estadoFacturacionE\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate(\"campanias\")\r\n                    .populate(\"adicional\")\r\n                    .populate(\"accesorios\")\r\n                    .populate({\r\n                         path: \"empleado\",\r\n                         select: \"name username\",\r\n                    });\r\n          } else {\r\n               query = await Sale.find({\r\n                    sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n                    fecha_cancelacion: {\r\n                         $gte: new Date(start),\r\n                         $lte: new Date(end),\r\n                    },\r\n               })\r\n                    .sort({ fecha_cancelacion: -1 })\r\n                    .populate({\r\n                         path: \"vendedor\",\r\n                         select: \"name sucursal\",\r\n                    })\r\n                    .populate({\r\n                         path: \"auto\",\r\n                         select: \"model version cod_tdp\",\r\n                         populate: {\r\n                              path: \"model\",\r\n                              select: \"marca name avatar\",\r\n                              populate: {\r\n                                   path: \"marca\",\r\n                                   select: \"name avatar\",\r\n                              },\r\n                         },\r\n                    })\r\n                    .populate({\r\n                         path: \"sucursalE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"colorE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"anioFabricacionE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"anioModeloE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"ubicacionVehiculoE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"estadoVehiculoE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"financiamientoE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"bancoE\",\r\n                         select: \"name\",\r\n                    })\r\n                    .populate({\r\n                         path: \"cliente\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate({\r\n                         path: \"tipoOperacionE\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate({\r\n                         path: \"tipoComprobanteE\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate({\r\n                         path: \"estadoVentaE\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate({\r\n                         path: \"estadoFacturacionE\",\r\n                         select: \"name document\",\r\n                    })\r\n                    .populate(\"campanias\")\r\n                    .populate(\"adicional\")\r\n                    .populate(\"accesorios\")\r\n                    .populate({\r\n                         path: \"empleado\",\r\n                         select: \"name username\",\r\n                    });\r\n          }\r\n\r\n          if (query.length > 0) {\r\n               res.json({ total: query.length, all: query });\r\n          } else {\r\n               return res.status(404).json({ message: `La sucursal ${sucursalE} no cuenta con expedientes` });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.groupFilesByEstado = async (req, res) => {\r\n     const { sucursalE, start, end } = req.body;\r\n\r\n     try {\r\n          const query = await Sale.aggregate([\r\n               {\r\n                    $match: {\r\n                         sucursal_venta: sucursalE,\r\n                         fecha_cancelacion: {\r\n                              $gte: new Date(start),\r\n                              $lte: new Date(end),\r\n                         },\r\n                    },\r\n               },\r\n               {\r\n                    $group: {\r\n                         _id: { estado: \"$estatus_venta\" },\r\n                         num_ventas: { $sum: 1 },\r\n                    },\r\n               },\r\n               {\r\n                    $sort: {\r\n                         num_ventas: -1,\r\n                    },\r\n               },\r\n          ]);\r\n\r\n          if (query.length > 0) {\r\n               res.json({ total: query.length, ranking: query });\r\n          } else {\r\n               return res.status(404).json({ message: `No existen expedientes` });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.conteoFilesByEstado = async (req, res) => {\r\n     const { estado, ubicacion, isEntregado, start, end } = req.body;\r\n     let query = null;\r\n\r\n     try {\r\n          if (isEntregado) {\r\n               query = await Sale.find({\r\n                    ubicacion_vehiculo: { $regex: \".*\" + ubicacion + \".*\" },\r\n                    fecha_entrega: {\r\n                         $gte: new Date(start),\r\n                         $lte: new Date(end),\r\n                    },\r\n               }).countDocuments();\r\n          } else {\r\n               query = await Sale.find({\r\n                    estatus_venta: { $regex: \".*\" + estado + \".*\" },\r\n                    fecha_cancelacion: {\r\n                         $gte: new Date(start),\r\n                         $lte: new Date(end),\r\n                    },\r\n               }).countDocuments();\r\n          }\r\n          if (query >= 0) {\r\n               res.json({ count: query });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.rankingFilesByUbicacion = async (req, res) => {\r\n     const { ubicacion, start, end } = req.body;\r\n\r\n     try {\r\n          const query = await Sale.aggregate([\r\n               {\r\n                    $match: {\r\n                         ubicacion_vehiculo: ubicacion,\r\n                         fecha_entrega: {\r\n                              $gte: new Date(start),\r\n                              $lte: new Date(end),\r\n                         },\r\n                    },\r\n               },\r\n               {\r\n                    $group: {\r\n                         _id: \"$sucursal_venta\",\r\n                         qty: {\r\n                              $sum: 1,\r\n                         },\r\n                    },\r\n               },\r\n          ]);\r\n\r\n          if (query.length > 0) {\r\n               res.json({ total: query.length, ranking: query });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.getFilesByEstado = async (req, res) => {\r\n     const { estado, tramite, sucursalE } = req.body;\r\n\r\n     try {\r\n          const query = await Sale.find({\r\n               estatus_venta: { $regex: \".*\" + estado + \".*\" },\r\n               pasoaTramite: tramite,\r\n               sucursal_venta: { $regex: \".*\" + sucursalE + \".*\" },\r\n          })\r\n               .sort({ fecha_cancelacion: -1 })\r\n               .populate({\r\n                    path: \"vendedor\",\r\n                    select: \"name sucursal avatar\",\r\n               })\r\n               .populate({\r\n                    path: \"auto\",\r\n                    select: \"model version cod_tdp\",\r\n                    populate: {\r\n                         path: \"model\",\r\n                         select: \"marca name avatar\",\r\n                         populate: {\r\n                              path: \"marca\",\r\n                              select: \"name avatar\",\r\n                         },\r\n                    },\r\n               })\r\n               .populate({\r\n                    path: \"sucursalE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"colorE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"anioFabricacionE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"anioModeloE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"ubicacionVehiculoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"estadoVehiculoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"financiamientoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"bancoE\",\r\n                    select: \"name\",\r\n               })\r\n               .populate({\r\n                    path: \"cliente\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"tipoOperacionE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"tipoComprobanteE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"estadoVentaE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate({\r\n                    path: \"estadoFacturacionE\",\r\n                    select: \"name document\",\r\n               })\r\n               .populate(\"campanias\")\r\n               .populate(\"adicional\")\r\n               .populate(\"accesorios\")\r\n               .populate({\r\n                    path: \"empleado\",\r\n                    select: \"name username\",\r\n               });\r\n\r\n          if (query.length > 0) {\r\n               res.json({ total: query.length, all: query });\r\n          } else {\r\n               return res.status(404).json({ message: `Expedientes ${estado} no existen en ${sucursalE}` });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.rankingFilesByModelo = async (req, res) => {\r\n     const { estado, start, end } = req.body;\r\n\r\n     try {\r\n          const query = await Sale.aggregate([\r\n               {\r\n                    $match: {\r\n                         estatus_venta: estado,\r\n                         fecha_cancelacion: {\r\n                              $gte: new Date(start),\r\n                              $lte: new Date(end),\r\n                         },\r\n                    },\r\n               },\r\n               {\r\n                    $group: {\r\n                         _id: \"$auto\",\r\n                         num_ventas: {\r\n                              $sum: 1,\r\n                         },\r\n                    },\r\n               },\r\n               {\r\n                    $sort: {\r\n                         num_ventas: -1,\r\n                    },\r\n               },\r\n          ]);\r\n\r\n          if (query.length > 0) {\r\n               res.json({ total: query.length, ranking: query });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nfileController.rankingFilesBySeller = async (req, res) => {\r\n     const { sucursalE, estadoE, start, end } = req.body;\r\n     // console.log(req.body);\r\n\r\n     try {\r\n          const query = await Sale.aggregate([\r\n               {\r\n                    $match: {\r\n                         sucursal_venta: sucursalE,\r\n                         estatus_venta: estadoE,\r\n                         fecha_cancelacion: {\r\n                              $gte: new Date(start),\r\n                              $lte: new Date(end),\r\n                         },\r\n                    },\r\n               },\r\n               {\r\n                    $group: {\r\n                         _id: \"$vendedor\",\r\n                         num_ventas: {\r\n                              $sum: 1,\r\n                         },\r\n                    },\r\n               },\r\n               {\r\n                    $sort: {\r\n                         num_ventas: -1,\r\n                    },\r\n               },\r\n          ]);\r\n\r\n          if (query.length > 0) {\r\n               res.json({ total: query.length, ranking: query });\r\n          } else {\r\n               return res.status(201).json({ message: \"No existen ventas\" });\r\n          }\r\n     } catch (err) {\r\n          console.log(err);\r\n          return res.status(503).json({ message: err.message });\r\n     }\r\n};\r\n\r\nexport default fileController;\r\n"],"file":"files.controller.js"}