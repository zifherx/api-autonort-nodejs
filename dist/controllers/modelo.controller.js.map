{"version":3,"file":"modelo.controller.js","names":["getModelos","req","res","Modelo","find","sort","name","modelos","length","json","status","message","console","log","getModeloById","modeloId","params","findById","getModeloByActivo","createModelo","body","newModelo","save","modeloCreado","updateModelo","findByIdAndUpdate","deleteModelo","findByIdAndDelete"],"sources":["../../src/controllers/modelo.controller.js"],"sourcesContent":["import Modelo from \"../models/Modelo\";\r\n\r\nexport const getModelos = async(req, res) => {\r\n    try {\r\n        const modelos = await Modelo.find().sort({ name: 'asc' });\r\n        if (modelos.length > 0) {\r\n            res.json(modelos);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Modelos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getModeloById = async(req, res) => {\r\n    const { modeloId } = req.params;\r\n    try {\r\n        const modelos = await Modelo.findById(modeloId);\r\n        if (modelos) {\r\n            res.json(modelos);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Modelo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getModeloByActivo = async(req, res) => {\r\n    try {\r\n        const modelos = await Modelo.find({ status: \"Activo\" }).sort({ name: 'asc' });\r\n        if (modelos.length > 0) {\r\n            res.json(modelos);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Modelos Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createModelo = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const newModelo = new Modelo({ name, status });\r\n        const modeloCreado = await newModelo.save();\r\n        if (modeloCreado) {\r\n            res.json({ message: 'Modelo creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateModelo = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { modeloId } = req.params;\r\n    try {\r\n        const updateModelo = await Modelo.findByIdAndUpdate(modeloId, { name, status });\r\n        if (updateModelo) {\r\n            res.json({ message: 'Modelo actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Modelo a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteModelo = async(req, res) => {\r\n    const { modeloId } = req.params;\r\n    try {\r\n        const deleteModelo = await Modelo.findByIdAndDelete(modeloId);\r\n        if (deleteModelo) {\r\n            res.json({ message: 'Modelo eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Modelo a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"mappings":"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"}