{"version":3,"sources":["../../src/controllers/modelo.controller.js"],"names":["getModelos","req","res","Modelo","find","modelos","length","status","json","message","getModeloById","modeloId","params","findById","send","getModeloByActivo","createModelo","body","name","newModelo","save","modeloCreado","console","log","updateModelo","findByIdAndUpdate","new","e","deleteModelo","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Modelo from \"../models/Modelo\";\r\n\r\nexport const getModelos = async(req, res) => {\r\n    try {\r\n        const modelos = await Modelo.find();\r\n        if (modelos.length > 0) {\r\n            res.status(200).json(modelos);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const getModeloById = async(req, res) => {\r\n    const { modeloId } = req.params;\r\n    try {\r\n        const modelos = await Modelo.findById(modeloId);\r\n        if (modelos) {\r\n            res.send(modelos);\r\n        } else {\r\n            res.status(404).json({ message: 'No existe' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const getModeloByActivo = async(req, res) => {\r\n    try {\r\n        const modelos = await Modelo.find({ status: \"Activo\" });\r\n        if (modelos) {\r\n            res.status(200).json(modelos);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        //console.log(err);\r\n        res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const createModelo = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const newModelo = new Modelo({ name, status });\r\n\r\n        const modeloCreado = await newModelo.save();\r\n\r\n        if (modeloCreado) {\r\n            res.json({ message: 'Modelo creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const updateModelo = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { modeloId } = req.params;\r\n    try {\r\n\r\n        const updateModelo = await Modelo.findByIdAndUpdate(modeloId, { name, status }, { new: true });\r\n\r\n        if (updateModelo) {\r\n            res.json({ message: 'Modelo actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Modelo' });\r\n        }\r\n    } catch (err) {\r\n        console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const deleteModelo = async(req, res) => {\r\n    const { modeloId } = req.params;\r\n    try {\r\n\r\n        const deleteModelo = await Modelo.findByIdAndDelete(modeloId);\r\n\r\n        if (deleteModelo) {\r\n            res.json({ message: 'Modelo eliminado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Modelo' });\r\n        }\r\n    } catch (err) {\r\n        console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}"],"file":"modelo.controller.js"}