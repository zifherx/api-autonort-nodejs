{"version":3,"file":"statusAAP.controller.js","names":["getAll","req","res","StatusAAP","find","sort","value","query","length","json","total","all","status","message","console","log","getStatusAAPById","statusAAPId","params","findById","one","getStatusAAPByActivo","estado","total_active","all_active","createStatusAAP","body","name","nuevo","save","updateStatusAAP","findByIdAndUpdate","deleteStatusAAP","findByIdAndDelete"],"sources":["../../src/controllers/statusAAP.controller.js"],"sourcesContent":["import StatusAAP from '../models/StatusAAP'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await StatusAAP.find().sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getStatusAAPById = async(req, res) => {\r\n    const { statusAAPId } = req.params\r\n    try {\r\n        const query = await StatusAAP.findById(statusAAPId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Estado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getStatusAAPByActivo = async(req, res) => {\r\n    try {\r\n        const query = await StatusAAP.find({ estado: true }).sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createStatusAAP = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    try {\r\n        const nuevo = new StatusAAP({ name, value, estado });\r\n        const query = await nuevo.save()\r\n        if (query) {\r\n            res.json({ message: 'Estado creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateStatusAAP = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    const { statusAAPId } = req.params;\r\n    try {\r\n        const query = await StatusAAP.findByIdAndUpdate(statusAAPId, { name, value, estado });\r\n        if (query) {\r\n            res.json({ message: 'Estado actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Estado a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteStatusAAP = async(req, res) => {\r\n    const { statusAAPId } = req.params;\r\n    try {\r\n        const query = await StatusAAP.findByIdAndDelete(statusAAPId);\r\n        if (query) {\r\n            res.json({ message: 'Estado eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Estado a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}"],"mappings":"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"}