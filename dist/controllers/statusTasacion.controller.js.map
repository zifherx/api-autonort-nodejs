{"version":3,"file":"statusTasacion.controller.js","names":["statusTasacionCtrl","getAll","req","res","StatusTasacion","find","sort","value","query","length","json","total","all","status","message","console","log","getOneById","statusId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","name","nuevo","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/statusTasacion.controller.js"],"sourcesContent":["import StatusTasacion from '../models/StatusTasacion'\r\n\r\nconst statusTasacionCtrl = {};\r\n\r\nstatusTasacionCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await StatusTasacion.find().sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.getOneById = async(req, res) => {\r\n    const { statusId } = req.params\r\n    try {\r\n        const query = await StatusTasacion.findById(statusId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Estado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await StatusTasacion.find({ estado: true }).sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.createOne = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    try {\r\n        const nuevo = new StatusTasacion({ name, value, estado });\r\n        const query = await nuevo.save()\r\n        if (query) {\r\n            res.json({ message: 'Estado creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.updateOneById = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    const { statusId } = req.params;\r\n    try {\r\n        const query = await StatusTasacion.findByIdAndUpdate(statusId, { name, value, estado });\r\n        if (query) {\r\n            res.json({ message: 'Estado actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Estado a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.deleteOneById = async(req, res) => {\r\n    const { statusId } = req.params;\r\n    try {\r\n        const query = await StatusTasacion.findByIdAndDelete(statusId);\r\n        if (query) {\r\n            res.json({ message: 'Estado eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Estado a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport default statusTasacionCtrl;"],"mappings":"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"}