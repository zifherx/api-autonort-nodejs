{"version":3,"sources":["../../src/controllers/statusTasacion.controller.js"],"names":["statusTasacionCtrl","getAll","req","res","StatusTasacion","find","sort","value","query","length","json","total","all","status","message","console","log","getOneById","statusId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","name","nuevo","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import StatusTasacion from '../models/StatusTasacion'\r\n\r\nconst statusTasacionCtrl = {};\r\n\r\nstatusTasacionCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await StatusTasacion.find().sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.getOneById = async(req, res) => {\r\n    const { statusId } = req.params\r\n    try {\r\n        const query = await StatusTasacion.findById(statusId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Estado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await StatusTasacion.find({ estado: true }).sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.createOne = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    try {\r\n        const nuevo = new StatusTasacion({ name, value, estado });\r\n        const query = await nuevo.save()\r\n        if (query) {\r\n            res.json({ message: 'Estado creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.updateOneById = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    const { statusId } = req.params;\r\n    try {\r\n        const query = await StatusTasacion.findByIdAndUpdate(statusId, { name, value, estado });\r\n        if (query) {\r\n            res.json({ message: 'Estado actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Estado a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nstatusTasacionCtrl.deleteOneById = async(req, res) => {\r\n    const { statusId } = req.params;\r\n    try {\r\n        const query = await StatusTasacion.findByIdAndDelete(statusId);\r\n        if (query) {\r\n            res.json({ message: 'Estado eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Estado a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport default statusTasacionCtrl;"],"file":"statusTasacion.controller.js"}