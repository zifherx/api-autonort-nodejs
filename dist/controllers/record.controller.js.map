{"version":3,"sources":["../../src/controllers/record.controller.js"],"names":["createRecord","req","res","body","fecha","estatusContable","sales","newRecord","Record","Sale","find","nroComprobante","$in","foundSale","map","_id","console","log","save","recordSaved","status","json","message","getRecords","filtro1","path","populate","expedientes","getRecordById","recordId","params","findById","expediente","updateRecordById","e","deleteRecordById","findByIdAndDelete","deleteRecord"],"mappings":"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","sourcesContent":["import Record from '../models/Record'\r\nimport Sale from '../models/Sale'\r\n\r\nexport const createRecord = async(req, res) => {\r\n    try {\r\n        const { fecha, estatusContable, sales } = req.body;\r\n        const newRecord = new Record({ fecha, estatusContable });\r\n\r\n        //Sales\r\n        const foundSale = await Sale.find({ nroComprobante: { $in: sales } });\r\n        newRecord.sales = foundSale.map(sales => sales._id);\r\n\r\n        console.log(newRecord);\r\n        const recordSaved = await newRecord.save();\r\n        res.status(201).json(recordSaved);\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error Interno' });\r\n    }\r\n}\r\n\r\nexport const getRecords = async(req, res) => {\r\n    const filtro1 = { path: 'sales', populate: { path: 'vehicle seller financing customer' } };\r\n\r\n    try {\r\n        const expedientes = await Record.find()\r\n            .populate(filtro1)\r\n\r\n        res.status(200).json(expedientes);\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error Interno' });\r\n    }\r\n}\r\n\r\nexport const getRecordById = async(req, res) => {\r\n    const filtro1 = { path: 'sales', populate: { path: 'vehicle seller financing customer' } };\r\n\r\n    try {\r\n        const { recordId } = req.params;\r\n        const expediente = await Record.findById(recordId)\r\n            .populate(filtro1);\r\n\r\n        if (expediente) {\r\n            res.status(200).json(expediente);\r\n        } else {\r\n            res.status(201).json({ message: 'No existe el expediente' });\r\n        }\r\n\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error Interno' });\r\n    }\r\n}\r\n\r\nexport const updateRecordById = async(req, res) => {\r\n    try {\r\n        res.status(201).json({ message: 'Not implement Yet' })\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error Interno' });\r\n    }\r\n}\r\n\r\nexport const deleteRecordById = async(req, res) => {\r\n    try {\r\n        const { recordId } = req.params;\r\n        const deleteRecord = await Record.findByIdAndDelete(recordId);\r\n\r\n        if (deleteRecord) {\r\n            res.status(200).json({ message: 'Expediente Eliminado' });\r\n        } else {\r\n            res.status(401).json({ message: 'Expediente no existe' });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error Interno' });\r\n    }\r\n}"],"file":"record.controller.js"}