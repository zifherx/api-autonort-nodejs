{"version":3,"sources":["../../src/controllers/ubicacion.controller.js"],"names":["ubicacionController","getAll","req","res","Ubicacion","find","sort","valor","query","length","json","total","all","status","message","console","log","getOneById","ubicacionId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","name","objeto","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Ubicacion from \"../models/Ubicacion\";\r\n\r\nconst ubicacionController = {};\r\n\r\nubicacionController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Ubicacion.find().sort({ valor: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Ubicaciones' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.getOneById = async(req, res) => {\r\n    const { ubicacionId } = req.params;\r\n    try {\r\n        const query = await Ubicacion.findById(ubicacionId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Ubicación' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Ubicacion.find({ estado: true }).sort({ valor: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Ubicaciones Activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.createOne = async(req, res) => {\r\n    const { name,valor, estado } = req.body;\r\n    try {\r\n        const objeto = new Ubicacion({ name, valor, estado });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Ubicación creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.updateOneById = async(req, res) => {\r\n    const { name, valor, estado } = req.body;\r\n    const { ubicacionId } = req.params;\r\n    try {\r\n        const query = await Ubicacion.findByIdAndUpdate(ubicacionId, { name, valor, estado });\r\n        if (query) {\r\n            res.json({ message: 'Ubicación actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Ubicación a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.deleteOneById = async(req, res) => {\r\n    const { ubicacionId } = req.params;\r\n    try {\r\n        const query = await Ubicacion.findByIdAndDelete(ubicacionId);\r\n        if (query) {\r\n            res.json({ message: 'Ubicación eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Ubicación a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default ubicacionController;"],"file":"ubicacion.controller.js"}