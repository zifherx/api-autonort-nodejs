{"version":3,"file":"ubicacion.controller.js","names":["ubicacionController","getAll","req","res","Ubicacion","find","sort","valor","query","length","json","total","all","status","message","console","log","getOneById","ubicacionId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","name","objeto","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/ubicacion.controller.js"],"sourcesContent":["import Ubicacion from \"../models/Ubicacion\";\r\n\r\nconst ubicacionController = {};\r\n\r\nubicacionController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Ubicacion.find().sort({ valor: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Ubicaciones' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.getOneById = async(req, res) => {\r\n    const { ubicacionId } = req.params;\r\n    try {\r\n        const query = await Ubicacion.findById(ubicacionId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Ubicación' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Ubicacion.find({ estado: true }).sort({ valor: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Ubicaciones Activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.createOne = async(req, res) => {\r\n    const { name,valor, estado } = req.body;\r\n    try {\r\n        const objeto = new Ubicacion({ name, valor, estado });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Ubicación creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.updateOneById = async(req, res) => {\r\n    const { name, valor, estado } = req.body;\r\n    const { ubicacionId } = req.params;\r\n    try {\r\n        const query = await Ubicacion.findByIdAndUpdate(ubicacionId, { name, valor, estado });\r\n        if (query) {\r\n            res.json({ message: 'Ubicación actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Ubicación a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nubicacionController.deleteOneById = async(req, res) => {\r\n    const { ubicacionId } = req.params;\r\n    try {\r\n        const query = await Ubicacion.findByIdAndDelete(ubicacionId);\r\n        if (query) {\r\n            res.json({ message: 'Ubicación eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Ubicación a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default ubicacionController;"],"mappings":"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"}