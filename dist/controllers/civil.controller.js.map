{"version":3,"file":"civil.controller.js","names":["civilController","getAll","req","res","EstadoCivil","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","civilId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/civil.controller.js"],"sourcesContent":["import EstadoCivil from \"../models/EstadoCivil\";\r\n\r\nconst civilController = {};\r\n\r\ncivilController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await EstadoCivil.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen estados civiles'})\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncivilController.getOneById = async(req, res) => {\r\n    const { civilId } = req.params;\r\n    try {\r\n        const query = await EstadoCivil.findById(civilId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe estado civil'})\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncivilController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await EstadoCivil.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen estados civiles activos'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\ncivilController.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const obj = new EstadoCivil({ name, estado });\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Estado civil creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncivilController.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { civilId } = req.params;\r\n    try {\r\n        const query = await EstadoCivil.findByIdAndUpdate(civilId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Estado civil actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe estado civil a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncivilController.deleteOneById = async(req, res) => {\r\n    const { civilId } = req.params;\r\n    try {\r\n        const query = await EstadoCivil.findByIdAndDelete(civilId);\r\n        if (query) {\r\n            res.json({ message: 'Estado civil eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe estado civil a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default civilController;"],"mappings":"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"}