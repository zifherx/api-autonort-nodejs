{"version":3,"sources":["../../src/controllers/sectorista.controller.js"],"names":["getSectoristas","req","res","Sectorista","find","sectorista","length","send","status","json","message","getSectoristaById","sectoristaId","params","findById","getSectoristaByActivo","createSectorista","body","name","newSectorista","save","sectoristaCreado","updateSectorista","findByIdAndUpdate","new","deleteSectorista","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Sectorista from \"../models/Sectorista\";\r\n\r\nexport const getSectoristas = async(req, res) => {\r\n    try {\r\n        const sectorista = await Sectorista.find();\r\n        if (sectorista.length > 0) {\r\n            res.send(sectorista);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const getSectoristaById = async(req, res) => {\r\n    const { sectoristaId } = req.params;\r\n    try {\r\n        const sectorista = await Sectorista.findById(sectoristaId);\r\n        if (sectorista) {\r\n            res.send(sectorista);\r\n        } else {\r\n            res.status(404).json({ message: 'No existe' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const getSectoristaByActivo = async(req, res) => {\r\n    try {\r\n        const sectorista = await Sectorista.find({ status: \"Activo\" });\r\n        if (sectorista) {\r\n            res.status(200).json(sectorista);\r\n        } else {\r\n            res.status(404).json({ message: 'Vacío' })\r\n        }\r\n    } catch (err) {\r\n        //console.log(err);\r\n        res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const createSectorista = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const newSectorista = new Sectorista({ name, status });\r\n\r\n        const sectoristaCreado = await newSectorista.save();\r\n\r\n        if (sectoristaCreado) {\r\n            res.json({ message: 'Sectorista creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const updateSectorista = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { sectoristaId } = req.params;\r\n    try {\r\n\r\n        const updateSectorista = await Sectorista.findByIdAndUpdate(sectoristaId, { name, status }, { new: true });\r\n\r\n        if (updateSectorista) {\r\n            res.json({ message: 'Sectorista actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Sectorista' });\r\n        }\r\n    } catch (err) {\r\n        //console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}\r\n\r\nexport const deleteSectorista = async(req, res) => {\r\n    const { sectoristaId } = req.params;\r\n    try {\r\n\r\n        const deleteSectorista = await Sectorista.findByIdAndDelete(sectoristaId);\r\n\r\n        if (deleteSectorista) {\r\n            res.json({ message: 'Sectorista eliminado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Sectorista' });\r\n        }\r\n    } catch (err) {\r\n        //console.log(e);\r\n        res.status(403).json({ message: 'No Autorizado' })\r\n    }\r\n}"],"file":"sectorista.controller.js"}