{"version":3,"sources":["../../src/controllers/seguro.controller.js"],"names":["getAll","req","res","Seguro","find","sort","name","query","length","json","status","message","console","error","getSeguroByActivo","getSeguroById","seguroId","params","findById","createSeguro","body","document","telefono","company","sucursal","fecha_registro","mes","forma_pago","cuotas","fecha_emision","tipo_venta","area_venta","poliza","vendedor","placa","chasis","motor","marca","modelo","anio","uso","asesor","endoso","inicio_vigencia","fin_vigencia","suma_asegurada","aseguradora","comision_seguro","comision_asesor","empleado","newObj","User","username","$in","foundEmployee","map","a","_id","save","objSaved","updateSeguro","findByIdAndUpdate","updateObj","deleteSeguro","findByIdAndDelete","deleteObj","log"],"mappings":"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","sourcesContent":["import Seguro from \"../models/Seguro\";\r\nimport User from \"../models/User\";\r\n\r\nexport const getAll = async (req, res) => {\r\n  try {\r\n    const query = await Seguro.find().sort({ name: \"asc\" });\r\n    if (query.length > 0) {\r\n      res.json(query);\r\n    } else {\r\n      return res.status(404).json({ message: \"No existen Seguros\" });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const getSeguroByActivo = async (req, res) => {};\r\n\r\nexport const getSeguroById = async (req, res) => {\r\n  const { seguroId } = req.params;\r\n  try {\r\n    const query = await Seguro.findById(seguroId);\r\n    if (query) {\r\n      res.json(query);\r\n    } else {\r\n      return res.status(404).json({ message: \"No existe el Seguro\" });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const createSeguro = async (req, res) => {\r\n  const {\r\n    name,\r\n    document,\r\n    telefono,\r\n    company,\r\n    sucursal,\r\n    fecha_registro,\r\n    mes,\r\n    status,\r\n    forma_pago,\r\n    cuotas,\r\n    fecha_emision,\r\n    tipo_venta,\r\n    area_venta,\r\n    poliza,\r\n    vendedor,\r\n    placa,\r\n    chasis,\r\n    motor,\r\n    marca,\r\n    modelo,\r\n    anio,\r\n    uso,\r\n    asesor,\r\n    endoso,\r\n    inicio_vigencia,\r\n    fin_vigencia,\r\n    suma_asegurada,\r\n    aseguradora,\r\n    comision_seguro,\r\n    comision_asesor,\r\n    empleado,\r\n  } = req.body;\r\n\r\n  try {\r\n    const newObj = new Seguro({\r\n      name,\r\n      document,\r\n      telefono,\r\n      company,\r\n      sucursal,\r\n      fecha_registro,\r\n      mes,\r\n      status,\r\n      forma_pago,\r\n      cuotas,\r\n      fecha_emision,\r\n      tipo_venta,\r\n      area_venta,\r\n      poliza,\r\n      vendedor,\r\n      placa,\r\n      chasis,\r\n      motor,\r\n      marca,\r\n      modelo,\r\n      anio,\r\n      uso,\r\n      asesor,\r\n      endoso,\r\n      inicio_vigencia,\r\n      fin_vigencia,\r\n      suma_asegurada,\r\n      aseguradora,\r\n      comision_seguro,\r\n      comision_asesor,\r\n    });\r\n\r\n    const foundEmployee = await User.find({ username: { $in: empleado } });\r\n    newObj.empleado = foundEmployee.map((a) => a._id);\r\n\r\n    const objSaved = await newObj.save();\r\n\r\n    if (objSaved) {\r\n      res.json({ message: \"Seguro creado con éxito\" });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const updateSeguro = async (req, res) => {\r\n  const { seguroId } = req.params;\r\n  const {\r\n    name,\r\n    document,\r\n    telefono,\r\n    company,\r\n    sucursal,\r\n    fecha_registro,\r\n    mes,\r\n    status,\r\n    forma_pago,\r\n    cuotas,\r\n    fecha_emision,\r\n    tipo_venta,\r\n    area_venta,\r\n    poliza,\r\n    vendedor,\r\n    placa,\r\n    chasis,\r\n    motor,\r\n    marca,\r\n    modelo,\r\n    anio,\r\n    uso,\r\n    asesor,\r\n    endoso,\r\n    inicio_vigencia,\r\n    fin_vigencia,\r\n    suma_asegurada,\r\n    aseguradora,\r\n    comision_seguro,\r\n    comision_asesor,\r\n    empleado,\r\n  } = req.body;\r\n\r\n  try {\r\n    //Empleado\r\n    const foundEmployee = await User.find({ username: { $in: empleado } });\r\n\r\n    const updateObj = await Seguro.findByIdAndUpdate(seguroId, {\r\n      name,\r\n      document,\r\n      telefono,\r\n      company,\r\n      sucursal,\r\n      fecha_registro,\r\n      mes,\r\n      status,\r\n      forma_pago,\r\n      cuotas,\r\n      fecha_emision,\r\n      tipo_venta,\r\n      area_venta,\r\n      poliza,\r\n      vendedor,\r\n      placa,\r\n      chasis,\r\n      motor,\r\n      marca,\r\n      modelo,\r\n      anio,\r\n      uso,\r\n      asesor,\r\n      endoso,\r\n      inicio_vigencia,\r\n      fin_vigencia,\r\n      suma_asegurada,\r\n      aseguradora,\r\n      comision_seguro,\r\n      comision_asesor,\r\n      empleado: foundEmployee.map((a) => a._id),\r\n    });\r\n\r\n    if(updateObj){\r\n        res.json({ message: 'Seguro actualizado con éxito'});\r\n    }else{\r\n        return res.status(404).json({ message: 'No existe Seguro a actualizar'})\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const deleteSeguro = async (req, res) => {\r\n    const { seguroId } = req.params;\r\n\r\n    try {\r\n        const deleteObj = await Seguro.findByIdAndDelete(seguroId);\r\n\r\n        if(deleteObj){\r\n            res.json({ message: \"Seguro eliminado con éxito\" });\r\n        }else{\r\n            return res.status(404).json({ message: \"No existe Seguro a eliminar\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message });\r\n    }\r\n};\r\n"],"file":"seguro.controller.js"}