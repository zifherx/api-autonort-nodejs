{"version":3,"sources":["../../src/controllers/seguro.controller.js"],"names":["getAll","req","res","Seguro","find","populate","query","length","json","status","message","console","error","getSeguroByActivo","getSeguroById","seguroId","params","findById","createSeguro","body","cliente","company","sucursal","mes","forma_pago","cuotas","fecha_emision","tipo_venta","area_venta","poliza","vendedor","placa","chasis","motor","marca","modelo","anio","uso","asesor","endoso","entidad","inicio_vigencia","fin_vigencia","suma_asegurada","aseguradora","comision_seguro","comision_asesor","empleado","newObj","Customer","name","$in","foundCliente","map","a","_id","User","username","foundEmployee","b","save","objSaved","updateSeguro","findByIdAndUpdate","updateObj","deleteSeguro","findByIdAndDelete","deleteObj","log"],"mappings":"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","sourcesContent":["import Customer from \"../models/Customer\";\r\nimport Seguro from \"../models/Seguro\";\r\nimport User from \"../models/User\";\r\n\r\nexport const getAll = async (req, res) => {\r\n  try {\r\n    const query = await Seguro.find().populate('cliente').populate('empleado');\r\n    if (query.length > 0) {\r\n      res.json(query);\r\n    } else {\r\n      return res.status(404).json({ message: \"No existen Seguros\" });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const getSeguroByActivo = async (req, res) => {};\r\n\r\nexport const getSeguroById = async (req, res) => {\r\n  const { seguroId } = req.params;\r\n  try {\r\n    const query = await Seguro.findById(seguroId).populate('cliente').populate('empleado');\r\n    if (query) {\r\n      res.json(query);\r\n    } else {\r\n      return res.status(404).json({ message: \"No existe el Seguro\" });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const createSeguro = async (req, res) => {\r\n  const {\r\n    cliente,company,sucursal, mes, status, forma_pago,cuotas,fecha_emision, tipo_venta, area_venta,poliza,vendedor, placa, chasis,motor,\r\n    marca, modelo, anio, uso, asesor, endoso, entidad, inicio_vigencia, fin_vigencia,suma_asegurada, aseguradora, comision_seguro, comision_asesor, empleado } = req.body;\r\n\r\n  try {\r\n    const newObj = new Seguro({ company, sucursal, mes, status, forma_pago, cuotas, fecha_emision, tipo_venta, area_venta, poliza, vendedor, placa, chasis, motor,\r\n      marca, modelo, anio, uso, asesor, endoso, entidad, inicio_vigencia, fin_vigencia, suma_asegurada, aseguradora, comision_seguro, comision_asesor});\r\n\r\n    const foundCliente = await Customer.find({ name: {$in: cliente}});\r\n    newObj.cliente =foundCliente.map(a => a._id);\r\n\r\n      if(!foundCliente.length > 0){\r\n        return res.status(404).json({message: 'No existe este cliente'});\r\n      }\r\n      \r\n    const foundEmployee = await User.find({ username: { $in: empleado } });\r\n    newObj.empleado = foundEmployee.map((b) => b._id);\r\n\r\n    const objSaved = await newObj.save();\r\n\r\n    if (objSaved) {\r\n      res.json({ message: \"Seguro creado con éxito\" });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const updateSeguro = async (req, res) => {\r\n  const { seguroId } = req.params;\r\n  const { cliente, company, sucursal, mes, status, forma_pago, cuotas, fecha_emision, tipo_venta, area_venta, poliza, vendedor, placa, chasis,\r\n    motor, marca, modelo, anio, uso, asesor, endoso, entidad, inicio_vigencia,fin_vigencia,suma_asegurada, aseguradora,comision_seguro, comision_asesor, empleado } = req.body;\r\n\r\n  try {\r\n    //Cliente\r\n    const foundCliente = await Customer.find({ name: {$in: cliente}});\r\n    //Empleado\r\n    const foundEmployee = await User.find({ username: { $in: empleado } });\r\n\r\n    const updateObj = await Seguro.findByIdAndUpdate(seguroId, { cliente: foundCliente.map(a => a._id) , company, sucursal, mes, status,forma_pago, cuotas,\r\n      fecha_emision, tipo_venta, area_venta, poliza, vendedor, placa, chasis, motor, marca, modelo, anio, uso, asesor, endoso, entidad, inicio_vigencia, fin_vigencia,\r\n      suma_asegurada, aseguradora, comision_seguro, comision_asesor, empleado: foundEmployee.map((b) => b._id),\r\n    });\r\n\r\n    if (updateObj) {\r\n      res.json({ message: \"Seguro actualizado con éxito\" });\r\n    } else {\r\n      return res.status(404).json({ message: \"No existe Seguro a actualizar\" });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const deleteSeguro = async (req, res) => {\r\n  const { seguroId } = req.params;\r\n\r\n  try {\r\n    const deleteObj = await Seguro.findByIdAndDelete(seguroId);\r\n\r\n    if (deleteObj) {\r\n      res.json({ message: \"Seguro eliminado con éxito\" });\r\n    } else {\r\n      return res.status(404).json({ message: \"No existe Seguro a eliminar\" });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n"],"file":"seguro.controller.js"}