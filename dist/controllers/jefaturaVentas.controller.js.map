{"version":3,"sources":["../../src/controllers/jefaturaVentas.controller.js"],"names":["jefaturaCtrl","getAll","req","res","JefaturaVentas","find","populate","path","select","query","length","json","total","all","status","message","console","error","getAllActivos","estado","total_active","all_active","getOneById","jefaturaId","params","findById","one","createOne","body","name","email","areaE","marcaE","sucursalE","encargadoDe","createdBy","newObj","User","findOne","username","userFound","_id","Area","areaFound","MarcaTasaciones","marcaFound","Sucursal","sucursalFound","save","updateById","findByIdAndUpdate","deleteById","findByIdAndDelete","obtenerJefexSucursal","sucursal","$in","log"],"mappings":"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","sourcesContent":["import JefaturaVentas from \"../models/JefaturaVentas\";\r\nimport User from \"../models/User\";\r\nimport Area from \"../models/Area\";\r\nimport MarcaTasaciones from \"../models/MarcaTasaciones\";\r\nimport Sucursal from \"../models/Sucursal\";\r\n\r\nconst jefaturaCtrl = {};\r\n\r\njefaturaCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await JefaturaVentas.find()\r\n            .populate({\r\n                path: 'areaE',\r\n                select: 'name'\r\n            })\r\n            .populate({\r\n                path: 'marcaE',\r\n                select: 'name avatar'\r\n            })\r\n            .populate({\r\n                path: 'sucursalE',\r\n                select: 'name'\r\n            })\r\n            .populate({\r\n                path: 'createdBy',\r\n                select: 'name'\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen jefes' })\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\njefaturaCtrl.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await JefaturaVentas.find({estado: true })\r\n            .populate({\r\n                path: 'areaE',\r\n                select: 'name'\r\n            })\r\n            .populate({\r\n                path: 'marcaE',\r\n                select: 'name avatar'\r\n            })\r\n            .populate({\r\n                path: 'sucursalE',\r\n                select: 'name'\r\n            })\r\n            .populate({\r\n                path: 'createdBy',\r\n                select: 'name'\r\n            });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen jefes' })\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\njefaturaCtrl.getOneById = async(req, res) => {\r\n    const { jefaturaId } = req.params;\r\n    try {\r\n        const query = await JefaturaVentas.findById(jefaturaId)\r\n            .populate({\r\n                path: 'areaE',\r\n                select: 'name'\r\n            })\r\n            .populate({\r\n                path: 'marcaE',\r\n                select: 'name avatar'\r\n            })\r\n            .populate({\r\n                path: 'sucursalE',\r\n                select: 'name'\r\n            })\r\n            .populate({\r\n                path: 'createdBy',\r\n                select: 'name'\r\n            });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Jefe' })\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\njefaturaCtrl.createOne = async(req, res) => {\r\n\r\n    const { name, email, areaE, marcaE, sucursalE, encargadoDe, estado, createdBy } = req.body;\r\n\r\n    try {\r\n\r\n        const newObj = new JefaturaVentas({ name, email, encargadoDe, estado });\r\n\r\n        const userFound = await User.findOne({ username: createdBy });\r\n        if(!userFound) return res.status(404).json({message: `No existe el usuario ${createdBy}`});\r\n        newObj.createdBy = userFound._id;\r\n        \r\n        const areaFound = await Area.findOne({name: areaE});\r\n        if(!areaFound) return res.status(404).json({message: `No existe el area ${areaE}`});\r\n        newObj.areaE = areaFound._id;\r\n        \r\n        const marcaFound = await MarcaTasaciones.findOne({name: marcaE});\r\n        if(!marcaFound) return res.status(404).json({message: `No existe la marca ${marcaE}`});\r\n        newObj.marcaE = marcaFound._id;\r\n        \r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `No existe la sucursal ${sucursalE}`});\r\n        newObj.sucursalE = sucursalFound._id;\r\n\r\n        const query = await newObj.save();\r\n        if (query) {\r\n            res.json({ message: 'Jefe creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\njefaturaCtrl.updateById = async(req, res) => {\r\n    const { jefaturaId } = req.params;\r\n    const { name, email, areaE, marcaE, sucursalE, encargadoDe, estado } = req.body;\r\n\r\n    try {\r\n\r\n        const areaFound = await Area.findOne({name: areaE});\r\n        if(!areaFound) return res.status(404).json({message: `No existe el area ${areaE}`});\r\n        \r\n        const marcaFound = await MarcaTasaciones.findOne({name: marcaE});\r\n        if(!marcaFound) return res.status(404).json({message: `No existe la marca ${marcaE}`});\r\n        \r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `No existe la sucursal ${sucursalE}`});\r\n\r\n        const query = await JefaturaVentas.findByIdAndUpdate(jefaturaId, {\r\n            name,\r\n            email,\r\n            areaE: areaFound._id,\r\n            marcaE: marcaFound._id,\r\n            sucursalE: sucursalFound._id,\r\n            encargadoDe,\r\n            estado\r\n        });\r\n        if (query) {\r\n            res.json({ message: 'Jefe actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Jefe a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\njefaturaCtrl.deleteById = async(req, res) => {\r\n    const { jefaturaId } = req.params;\r\n\r\n    try {\r\n        const query = await JefaturaVentas.findByIdAndDelete(jefaturaId);\r\n        if (query) {\r\n            res.json({ message: 'Jefe eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Jefe a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\njefaturaCtrl.obtenerJefexSucursal = async(req, res) => {\r\n    const { areaE, marcaE, sucursal } = req.body\r\n\r\n    try {\r\n        const areaFound = await Area.findOne({name: areaE});\r\n        if(!areaFound) return res.status(404).json({message: `No existe el area ${areaE}`});\r\n        \r\n        const marcaFound = await MarcaTasaciones.findOne({name: marcaE});\r\n        if(!marcaFound) return res.status(404).json({message: `No existe la marca ${marcaE}`});\r\n        \r\n        const query = await JefaturaVentas.findOne({ \r\n            areaE: areaFound._id,\r\n            marcaE: marcaFound._id,\r\n            encargadoDe: {$in: sucursal},\r\n            estado: true })\r\n        .select('name email areaE marcaE sucursalE encargadoDe area marca sucursal')\r\n        .populate({path: 'areaE', select: 'name'})\r\n        .populate({path: 'marcaE', select: 'name'})\r\n        .populate({path: 'sucursalE', select: 'name'});\r\n\r\n        if (query) {\r\n            res.json({ one: query })\r\n        } else {\r\n            return res.status(404).json({ message: 'No se encontraron asesores' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default jefaturaCtrl;"],"file":"jefaturaVentas.controller.js"}