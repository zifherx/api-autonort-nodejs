{"version":3,"sources":["../../src/controllers/jefaturaVentas.controller.js"],"names":["jefaturaCtrl","getAll","req","res","JefaturaVentas","find","populate","query","length","json","status","message","console","error","createOne","body","name","email","area","sucursal","createdBy","newObj","User","username","$in","userFound","map","a","_id","save","obtenerJefexSucursal","findOne","select","asesor","log"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAG,EAArB;;AAEAA,YAAY,CAACC,MAAb;AAAA,qFAAsB,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEMC,wBAAeC,IAAf,GAAsBC,QAAtB,CAA+B,WAA/B,EAA4C,MAA5C,CAFN;;AAAA;AAERC,YAAAA,KAFQ;;AAAA,kBAIVA,KAAK,CAACC,MAAN,GAAe,CAJL;AAAA;AAAA;AAAA;;AAKVL,YAAAA,GAAG,CAACM,IAAJ,CAASF,KAAT;AALU;AAAA;;AAAA;AAAA,6CAOHJ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CAPG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUdC,YAAAA,OAAO,CAACC,KAAR;AAVc,6CAWPV,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEI,cAAAA,KAAK;AAAP,aAArB,CAXO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;;AAeAb,YAAY,CAACc,SAAb;AAAA,sFAAyB,kBAAMZ,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE8BD,GAAG,CAACa,IAFlC,EAEbC,IAFa,aAEbA,IAFa,EAEPC,KAFO,aAEPA,KAFO,EAEAC,IAFA,aAEAA,IAFA,EAEMC,QAFN,aAEMA,QAFN,EAEgBC,SAFhB,aAEgBA,SAFhB;AAAA;AAMXC,YAAAA,MANW,GAMF,IAAIjB,uBAAJ,CAAmB;AAAEY,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,KAAK,EAALA,KAAR;AAAeC,cAAAA,IAAI,EAAJA,IAAf;AAAqBC,cAAAA,QAAQ,EAARA;AAArB,aAAnB,CANE;AAAA;AAAA,mBAQOG,cAAKjB,IAAL,CAAU;AAAEkB,cAAAA,QAAQ,EAAE;AAAEC,gBAAAA,GAAG,EAAEJ;AAAP;AAAZ,aAAV,CARP;;AAAA;AAQXK,YAAAA,SARW;AASjBJ,YAAAA,MAAM,CAACD,SAAP,GAAmBK,SAAS,CAACC,GAAV,CAAc,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,GAAN;AAAA,aAAf,CAAnB;AATiB;AAAA,mBAWGP,MAAM,CAACQ,IAAP,EAXH;;AAAA;AAWXtB,YAAAA,KAXW;;AAYjB,gBAAIA,KAAJ,EAAW;AACPJ,cAAAA,GAAG,CAACM,IAAJ,CAAS;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACH;;AAdgB;AAAA;;AAAA;AAAA;AAAA;AAgBjBC,YAAAA,OAAO,CAACC,KAAR;AACAV,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEI,cAAAA,KAAK;AAAP,aAArB;;AAjBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAqBAb,YAAY,CAAC8B,oBAAb;AAAA,sFAAoC,kBAAM5B,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACLD,GAAG,CAACa,IADC,EACxBI,QADwB,cACxBA,QADwB,EACdD,IADc,cACdA,IADc;AAAA;AAAA;AAAA,mBAIRd,wBAAe2B,OAAf,CAAuB;AAAEZ,cAAAA,QAAQ,EAAEA,QAAZ;AAAsBD,cAAAA,IAAI,EAAEA,IAA5B;AAAkCR,cAAAA,MAAM,EAAE;AAA1C,aAAvB,EAAyEsB,MAAzE,CAAgF,YAAhF,CAJQ;;AAAA;AAItBzB,YAAAA,KAJsB;;AAAA,iBAMxBA,KANwB;AAAA;AAAA;AAAA;;AAOxBJ,YAAAA,GAAG,CAACM,IAAJ,CAAS;AAAEwB,cAAAA,MAAM,EAAE1B;AAAV,aAAT;AAPwB;AAAA;;AAAA;AAAA,8CASjBJ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CATiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAY5BC,YAAAA,OAAO,CAACsB,GAAR;AACA/B,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAb4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;eAiBeX,Y","sourcesContent":["import JefaturaVentas from \"../models/JefaturaVentas\";\r\nimport User from \"../models/User\";\r\n\r\nconst jefaturaCtrl = {};\r\n\r\njefaturaCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await JefaturaVentas.find().populate('createdBy', 'name');\r\n\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen jefes' })\r\n        }\r\n    } catch (err) {\r\n        console.error(err)\r\n        return res.status(503).json({ error: err })\r\n    }\r\n}\r\n\r\njefaturaCtrl.createOne = async(req, res) => {\r\n\r\n    const { name, email, area, sucursal, createdBy } = req.body;\r\n\r\n    try {\r\n\r\n        const newObj = new JefaturaVentas({ name, email, area, sucursal });\r\n\r\n        const userFound = await User.find({ username: { $in: createdBy } })\r\n        newObj.createdBy = userFound.map(a => a._id)\r\n\r\n        const query = await newObj.save();\r\n        if (query) {\r\n            res.json({ message: 'Jefatura creada con Ã©xito' });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        res.status(503).json({ error: err });\r\n    }\r\n}\r\n\r\njefaturaCtrl.obtenerJefexSucursal = async(req, res) => {\r\n    const { sucursal, area } = req.body\r\n\r\n    try {\r\n        const query = await JefaturaVentas.findOne({ sucursal: sucursal, area: area, status: true }).select('name email');\r\n\r\n        if (query) {\r\n            res.json({ asesor: query })\r\n        } else {\r\n            return res.status(404).json({ message: 'No se encontraron asesores' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default jefaturaCtrl;"],"file":"jefaturaVentas.controller.js"}