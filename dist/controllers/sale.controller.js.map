{"version":3,"sources":["../../src/controllers/sale.controller.js"],"names":["createSale","req","res","body","vendedor","cliente","auto","serie_tdp","color","precio","anio_fabricacion","anio_modelo","ubicacion_vehiculo","fecha_ciguena","fecha_entrega","estatus_vehiculo","tipo_financiamiento","entidad_bancaria","sustento","fecha_sustento","monto_aprobado","oficina","ejecutivo","montoAdelanto1","fechaAdelanto1","montoAdelanto2","fechaAdelanto2","montoAdelanto3","fechaAdelanto3","montoAdelanto4","fechaAdelanto4","montoAdelanto5","fechaAdelanto5","montoAdelanto6","fechaAdelanto6","montoAdelanto7","fechaAdelanto7","montoAdelanto8","fechaAdelanto8","campanias","adicional","descuento_autonort","observacion_adv","accesorios","condicion_accesorios","fecha_facturacion_tdp","estatus_facturacion","tipo_operacion","fecha_inicio_reserva","fecha_fin_reserva","tipo_comprobante","nro_comprobante","fecha_comprobante","estatus_venta","sucursal_venta","fecha_cancelacion","empleado","newSale","Sale","Seller","find","name","$in","foundSeller","map","seller","_id","Vehicle","cod_tdp","foundVehicle","vehicle","Customer","document","foundCustomer","customer","Campaign","foundCampaign","campaign","Adicional","foundAdicional","Props","foundProps","props","User","username","foundEmployee","em","save","saleSaved","json","message","console","log","status","getSales","populate","ventasfull","length","getSaleById","salesId","params","findById","venta","updateSaleById","findByIdAndUpdate","ventaActualizada","deleteSaleById","findByIdAndDelete","deleteSale","UnidadesByStatus","estado","tramite","where","query","UnidadesBySucursal","sucursal","start","end","$gte","Date","$lte","conteoUnidadesCanceladas","countDocuments","consulta","conteoUnidadesLibres","conteoUnidadesBySucursalStatusFecha","conteoVentasByVendedor","estatus","filter","aggregate","$match","$group","num_ventas","$sum"],"mappings":"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","sourcesContent":["import Sale from '../models/Sale'\r\nimport Vehicle from '../models/Vehicle'\r\nimport Seller from '../models/Seller'\r\nimport Customer from '../models/Customer'\r\nimport Campaign from '../models/Campaign'\r\nimport Adicional from '../models/Adicional'\r\nimport Props from '../models/Props'\r\nimport User from '../models/User'\r\n\r\nexport const createSale = async(req, res) => {\r\n    const { vendedor, cliente, auto, serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo,fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias, adicional, descuento_autonort, observacion_adv, accesorios, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion, empleado } = req.body;\r\n\r\n    try {\r\n\r\n        const newSale = new Sale({ serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, descuento_autonort, observacion_adv, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n        newSale.vendedor = foundSeller.map(seller => seller._id);\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n        newSale.auto = foundVehicle.map(vehicle => vehicle._id);\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n        newSale.cliente = foundCustomer.map(customer => customer._id);\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n        newSale.campanias = foundCampaign.map(campaign => campaign._id);\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n        newSale.adicional = foundAdicional.map(adicional => adicional._id);\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n        newSale.accesorios = foundProps.map(props => props._id);\r\n\r\n        //Empleado\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newSale.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //console.log(newSale);\r\n        const saleSaved = await newSale.save();\r\n        if (saleSaved) {\r\n            res.json({ message: 'Expediente creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSales = async(req, res) => {\r\n    try {\r\n        const ventasfull = await Sale.find()\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado');\r\n\r\n        if (ventasfull.length > 0) {\r\n            res.json(ventasfull);\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Expedientes' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n\r\n        const venta = await Sale.findById(salesId)\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado');\r\n\r\n        if (venta) {\r\n            res.json(venta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Expediente' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    const { vendedor, cliente, auto, serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias, adicional, descuento_autonort, observacion_adv, accesorios, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion } = req.body;\r\n\r\n    try {\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n\r\n        const ventaActualizada = await Sale.findByIdAndUpdate(salesId, { vendedor: foundSeller.map(seller => seller._id), cliente: foundCustomer.map(customer => customer._id), auto: foundVehicle.map(vehicle => vehicle._id), serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo,fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias: foundCampaign.map(campaign => campaign._id), adicional: foundAdicional.map(adicional => adicional._id), descuento_autonort, observacion_adv, accesorios: foundProps.map(props => props._id), condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        if (ventaActualizada) {\r\n            res.json({ message: 'Expediente actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a actualizar' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n        const deleteSale = await Sale.findByIdAndDelete(salesId);\r\n\r\n        if (deleteSale) {\r\n            res.json({ message: 'Expediente eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesByStatus = async(req, res) => {\r\n    const { estado, tramite } = req.body;\r\n    try {\r\n        const query = await Sale.find().where({ estatus_venta: estado })\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${estado}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesBySucursal = async(req, res) => {\r\n    const { sucursal, start, end } = req.body;\r\n    try {\r\n        const query = await Sale.where({ sucursal_venta: sucursal, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).find().populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Unidades' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesCanceladas = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Cancelado' }).countDocuments();\r\n        //console.log(consulta)\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesLibres = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Libre' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Libres' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesBySucursalStatusFecha = async(req, res) => {\r\n    const { sucursal, status, start, end } = req.body;\r\n    //console.log(start, end);\r\n    try {\r\n        const consulta = await Sale.find({ sucursal_venta: sucursal, estatus_venta: status, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).countDocuments();\r\n        //console.log('Query: ', consulta);\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${status} en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoVentasByVendedor = async(req, res) => {\r\n    const { sucursal, estatus, start, end } = req.body;\r\n    try {\r\n        const filter = { sucursal_venta: sucursal, estatus_venta: estatus, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } };\r\n        const consulta = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: \"$vendedor\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }]);\r\n        if (consulta.length > 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"sale.controller.js"}