{"version":3,"sources":["../../src/controllers/sale.controller.js"],"names":["createSale","req","res","body","vendedor","cliente","auto","serie_tdp","color","precio","anio_fabricacion","anio_modelo","ubicacion_vehiculo","estatus_vehiculo","tipo_financiamiento","entidad_bancaria","sustento","fecha_sustento","monto_aprobado","oficina","ejecutivo","montoAdelanto1","fechaAdelanto1","montoAdelanto2","fechaAdelanto2","montoAdelanto3","fechaAdelanto3","montoAdelanto4","fechaAdelanto4","montoAdelanto5","fechaAdelanto5","montoAdelanto6","fechaAdelanto6","montoAdelanto7","fechaAdelanto7","montoAdelanto8","fechaAdelanto8","campanias","adicional","descuento_autonort","observacion_adv","accesorios","condicion_accesorios","fecha_facturacion_tdp","estatus_facturacion","tipo_operacion","fecha_inicio_reserva","fecha_fin_reserva","tipo_comprobante","nro_comprobante","fecha_comprobante","estatus_venta","sucursal_venta","fecha_cancelacion","empleado","newSale","Sale","Seller","find","name","$in","foundSeller","map","seller","_id","Vehicle","cod_tdp","foundVehicle","vehicle","Customer","document","foundCustomer","customer","Campaign","foundCampaign","campaign","Adicional","foundAdicional","Props","foundProps","props","User","username","foundEmployee","em","save","saleSaved","json","message","console","log","status","getSales","populate","ventasfull","length","getSaleById","salesId","params","findById","venta","updateSaleById","findByIdAndUpdate","ventaActualizada","deleteSaleById","findByIdAndDelete","deleteSale","UnidadesByStatus","estado","where","query","UnidadesBySucursal","sucursal","conteoUnidadesCanceladas","countDocuments","consulta","conteoUnidadesLibres","conteoTarapotoCanceladas","conteoJaenCanceladas","conteoTarapotoLibres","conteoJaenLibres","conteoUnidadesAnticipos","conteoTarapotoAnticipos","conteoJaenAnticipos","conteoVentasByVendedor","aggregate","$group","num_ventas","$sum"],"mappings":"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","sourcesContent":["import Sale from '../models/Sale'\r\nimport Vehicle from '../models/Vehicle'\r\nimport Seller from '../models/Seller'\r\nimport Customer from '../models/Customer'\r\nimport Campaign from '../models/Campaign'\r\nimport Adicional from '../models/Adicional'\r\nimport Props from '../models/Props'\r\nimport User from '../models/User'\r\n\r\nexport const createSale = async(req, res) => {\r\n    const { vendedor, cliente, auto, serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias, adicional, descuento_autonort, observacion_adv, accesorios, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion, empleado } = req.body;\r\n\r\n    try {\r\n\r\n        const newSale = new Sale({ serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, descuento_autonort, observacion_adv, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n        newSale.vendedor = foundSeller.map(seller => seller._id);\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n        newSale.auto = foundVehicle.map(vehicle => vehicle._id);\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n        newSale.cliente = foundCustomer.map(customer => customer._id);\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n        newSale.campanias = foundCampaign.map(campaign => campaign._id);\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n        newSale.adicional = foundAdicional.map(adicional => adicional._id);\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n        newSale.accesorios = foundProps.map(props => props._id);\r\n\r\n        //Empleado\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newSale.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //console.log(newSale);\r\n        const saleSaved = await newSale.save();\r\n        if (saleSaved) {\r\n            res.json({ message: 'Expediente creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSales = async(req, res) => {\r\n    try {\r\n        const ventasfull = await Sale.find()\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado');\r\n\r\n        if (ventasfull.length > 0) {\r\n            res.json(ventasfull);\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Expedientes' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n\r\n        const venta = await Sale.findById(salesId)\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado');\r\n\r\n        if (venta) {\r\n            res.json(venta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Expediente' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    const { vendedor, cliente, auto, serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias, adicional, descuento_autonort, observacion_adv, accesorios, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion } = req.body;\r\n\r\n    try {\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n\r\n        const ventaActualizada = await Sale.findByIdAndUpdate(salesId, { vendedor: foundSeller.map(seller => seller._id), cliente: foundCustomer.map(customer => customer._id), auto: foundVehicle.map(vehicle => vehicle._id), serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias: foundCampaign.map(campaign => campaign._id), adicional: foundAdicional.map(adicional => adicional._id), descuento_autonort, observacion_adv, accesorios: foundProps.map(props => props._id), condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        if (ventaActualizada) {\r\n            res.json({ message: 'Expediente actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a actualizar' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n        const deleteSale = await Sale.findByIdAndDelete(salesId);\r\n\r\n        if (deleteSale) {\r\n            res.json({ message: 'Expediente eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesByStatus = async(req, res) => {\r\n    const { estado } = req.body;\r\n    try {\r\n        const query = await Sale.where({ estatus_venta: estado }).find()\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Canceladas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesBySucursal = async(req, res) => {\r\n    const { sucursal } = req.body;\r\n    try {\r\n        const query = await Sale.where({ sucursal_venta: sucursal }).find().populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Unidades' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesCanceladas = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Cancelado' }).countDocuments();\r\n        //console.log(consulta)\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesLibres = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Libre' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Libres' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoTarapotoCanceladas = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Cancelado', sucursal_venta: 'Tarapoto' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Canceladas en Tarapoto' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoJaenCanceladas = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Cancelado', sucursal_venta: 'Jaén' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Canceladas en Jaén' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoTarapotoLibres = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Libre', sucursal_venta: 'Tarapoto' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Libres en Tarapoto' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoJaenLibres = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Libre', sucursal_venta: 'Jaén' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Libres en Jaén' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesAnticipos = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Anticipo' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades en Anticipo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoTarapotoAnticipos = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Anticipo', sucursal_venta: 'Tarapoto' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades en Anticipo en Tarapoto' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoJaenAnticipos = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Anticipo', sucursal_venta: 'Jaén' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades en Anticipo en Jaén' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoVentasByVendedor = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.aggregate([{\r\n            $group: {\r\n                _id: \"$vendedor\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }]);\r\n        if (consulta.length > 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"sale.controller.js"}