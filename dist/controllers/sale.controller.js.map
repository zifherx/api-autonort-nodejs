{"version":3,"sources":["../../src/controllers/sale.controller.js"],"names":["createSale","req","res","body","vendedor","cliente","auto","serie_tdp","color","precio","anio_fabricacion","anio_modelo","ubicacion_vehiculo","fecha_entrega","estatus_vehiculo","tipo_financiamiento","entidad_bancaria","sustento","fecha_sustento","monto_aprobado","oficina","ejecutivo","montoAdelanto1","fechaAdelanto1","montoAdelanto2","fechaAdelanto2","montoAdelanto3","fechaAdelanto3","montoAdelanto4","fechaAdelanto4","montoAdelanto5","fechaAdelanto5","montoAdelanto6","fechaAdelanto6","montoAdelanto7","fechaAdelanto7","montoAdelanto8","fechaAdelanto8","campanias","adicional","descuento_autonort","observacion_adv","accesorios","condicion_accesorios","fecha_facturacion_tdp","estatus_facturacion","tipo_operacion","fecha_inicio_reserva","fecha_fin_reserva","tipo_comprobante","nro_comprobante","fecha_comprobante","estatus_venta","sucursal_venta","fecha_cancelacion","empleado","newSale","Sale","Seller","find","name","$in","foundSeller","map","seller","_id","Vehicle","cod_tdp","foundVehicle","vehicle","Customer","document","foundCustomer","customer","Campaign","foundCampaign","campaign","Adicional","foundAdicional","Props","foundProps","props","User","username","foundEmployee","em","save","saleSaved","json","message","console","log","status","getSales","populate","ventasfull","length","getSaleById","salesId","params","findById","venta","updateSaleById","findByIdAndUpdate","ventaActualizada","deleteSaleById","findByIdAndDelete","deleteSale","UnidadesByStatus","estado","tramite","where","pasoaTramite","query","UnidadesBySucursal","sucursal","start","end","$gte","Date","$lte","conteoUnidadesCanceladas","countDocuments","consulta","conteoUnidadesLibres","conteoUnidadesBySucursalStatusFecha","conteoVentasByVendedor","estatus","filter","aggregate","$match","$group","num_ventas","$sum"],"mappings":"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","sourcesContent":["import Sale from '../models/Sale'\r\nimport Vehicle from '../models/Vehicle'\r\nimport Seller from '../models/Seller'\r\nimport Customer from '../models/Customer'\r\nimport Campaign from '../models/Campaign'\r\nimport Adicional from '../models/Adicional'\r\nimport Props from '../models/Props'\r\nimport User from '../models/User'\r\n\r\nexport const createSale = async(req, res) => {\r\n    const { vendedor, cliente, auto, serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias, adicional, descuento_autonort, observacion_adv, accesorios, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion, empleado } = req.body;\r\n\r\n    try {\r\n\r\n        const newSale = new Sale({ serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, descuento_autonort, observacion_adv, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n        newSale.vendedor = foundSeller.map(seller => seller._id);\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n        newSale.auto = foundVehicle.map(vehicle => vehicle._id);\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n        newSale.cliente = foundCustomer.map(customer => customer._id);\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n        newSale.campanias = foundCampaign.map(campaign => campaign._id);\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n        newSale.adicional = foundAdicional.map(adicional => adicional._id);\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n        newSale.accesorios = foundProps.map(props => props._id);\r\n\r\n        //Empleado\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newSale.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //console.log(newSale);\r\n        const saleSaved = await newSale.save();\r\n        if (saleSaved) {\r\n            res.json({ message: 'Expediente creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSales = async(req, res) => {\r\n    try {\r\n        const ventasfull = await Sale.find()\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado');\r\n\r\n        if (ventasfull.length > 0) {\r\n            res.json(ventasfull);\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Expedientes' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n\r\n        const venta = await Sale.findById(salesId)\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado');\r\n\r\n        if (venta) {\r\n            res.json(venta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Expediente' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    const { vendedor, cliente, auto, serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias, adicional, descuento_autonort, observacion_adv, accesorios, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion } = req.body;\r\n\r\n    try {\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n\r\n        const ventaActualizada = await Sale.findByIdAndUpdate(salesId, { vendedor: foundSeller.map(seller => seller._id), cliente: foundCustomer.map(customer => customer._id), auto: foundVehicle.map(vehicle => vehicle._id), serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias: foundCampaign.map(campaign => campaign._id), adicional: foundAdicional.map(adicional => adicional._id), descuento_autonort, observacion_adv, accesorios: foundProps.map(props => props._id), condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        if (ventaActualizada) {\r\n            res.json({ message: 'Expediente actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a actualizar' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n        const deleteSale = await Sale.findByIdAndDelete(salesId);\r\n\r\n        if (deleteSale) {\r\n            res.json({ message: 'Expediente eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesByStatus = async(req, res) => {\r\n    const { estado, tramite } = req.body;\r\n    try {\r\n        const query = await Sale.find().where({ estatus_venta: estado, pasoaTramite: tramite })\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${estado}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesBySucursal = async(req, res) => {\r\n    const { sucursal, start, end } = req.body;\r\n    try {\r\n        const query = await Sale.where({ sucursal_venta: sucursal, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).find().populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Unidades' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesCanceladas = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Cancelado' }).countDocuments();\r\n        //console.log(consulta)\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesLibres = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Libre' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Libres' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesBySucursalStatusFecha = async(req, res) => {\r\n    const { sucursal, status, start, end } = req.body;\r\n    //console.log(start, end);\r\n    try {\r\n        const consulta = await Sale.find({ sucursal_venta: sucursal, estatus_venta: status, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).countDocuments();\r\n        //console.log('Query: ', consulta);\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${status} en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoVentasByVendedor = async(req, res) => {\r\n    const { sucursal, estatus, start, end } = req.body;\r\n    try {\r\n        const filter = { sucursal_venta: sucursal, estatus_venta: estatus, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } };\r\n        const consulta = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: \"$vendedor\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }]);\r\n        if (consulta.length > 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"sale.controller.js"}