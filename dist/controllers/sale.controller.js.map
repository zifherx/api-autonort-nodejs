{"version":3,"sources":["../../src/controllers/sale.controller.js"],"names":["createSale","req","res","body","vendedor","cliente","auto","serie_tdp","color","precio","anio_fabricacion","anio_modelo","ubicacion_vehiculo","fecha_ciguena","fecha_entrega","estatus_vehiculo","tipo_financiamiento","entidad_bancaria","sustento","fecha_sustento","monto_aprobado","oficina","ejecutivo","montoAdelanto1","fechaAdelanto1","montoAdelanto2","fechaAdelanto2","montoAdelanto3","fechaAdelanto3","montoAdelanto4","fechaAdelanto4","montoAdelanto5","fechaAdelanto5","montoAdelanto6","fechaAdelanto6","montoAdelanto7","fechaAdelanto7","montoAdelanto8","fechaAdelanto8","campanias","adicional","descuento_autonort","observacion_adv","accesorios","condicion_accesorios","fecha_facturacion_tdp","estatus_facturacion","tipo_operacion","fecha_inicio_reserva","fecha_fin_reserva","tipo_comprobante","nro_comprobante","fecha_comprobante","estatus_venta","sucursal_venta","fecha_cancelacion","empleado","newSale","Sale","Seller","find","name","$in","foundSeller","map","seller","_id","Vehicle","cod_tdp","foundVehicle","vehicle","Customer","document","foundCustomer","customer","Campaign","foundCampaign","campaign","Adicional","foundAdicional","Props","foundProps","props","User","username","foundEmployee","em","save","saleSaved","json","message","console","log","status","getSales","sort","populate","path","select","query","length","total","files","getSaleById","salesId","params","findById","expediente","updateSaleById","monto_facturado","findByIdAndUpdate","ventaActualizada","deleteSaleById","findByIdAndDelete","deleteSale","UnidadesLibres","estado","tramite","pasoaTramite","UnidadesByStatus","sucursal","UnidadesBySucursalyFecha","start","end","$gte","Date","$lte","conteoUnidadesByStatus","where","countDocuments","count","conteoUnidadesBySucursalFecha","conteoUnidadesBySucursalStatusFecha","conteoVentasByVendedor","estatus","filter","aggregate","$match","$group","num_ventas","$sum","$sort","consulta","conteoVentasByModelo","ranking","rankingVentasByModelo","conteoUnidadesEntregadasBySucursal","conteoVehiculosEntregadosByFecha","ubicacion","filtro","qty","deploy","obtenerToyotaValues","statusVenta","objetos","forEach","element","perra","serie","vehiculo","push","nro_adicionales","toyota_values","getVehiclesySeller","findOne","sellerFound","staus","getSalesBySeller","getRankingByStatusyFecha","probandoRanking","month","$month"],"mappings":"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","sourcesContent":["import Sale from '../models/Sale'\r\nimport Vehicle from '../models/Vehicle'\r\nimport Seller from '../models/Seller'\r\nimport Customer from '../models/Customer'\r\nimport Campaign from '../models/Campaign'\r\nimport Adicional from '../models/Adicional'\r\nimport Props from '../models/Props'\r\nimport User from '../models/User'\r\n\r\nexport const createSale = async(req, res) => {\r\n    const {\r\n        vendedor,\r\n        cliente,\r\n        auto,\r\n        serie_tdp,\r\n        color,\r\n        precio,\r\n        anio_fabricacion,\r\n        anio_modelo,\r\n        ubicacion_vehiculo,\r\n        fecha_ciguena,\r\n        fecha_entrega,\r\n        estatus_vehiculo,\r\n        tipo_financiamiento,\r\n        entidad_bancaria,\r\n        sustento,\r\n        fecha_sustento,\r\n        monto_aprobado,\r\n        oficina,\r\n        ejecutivo,\r\n        montoAdelanto1,\r\n        fechaAdelanto1,\r\n        montoAdelanto2,\r\n        fechaAdelanto2,\r\n        montoAdelanto3,\r\n        fechaAdelanto3,\r\n        montoAdelanto4,\r\n        fechaAdelanto4,\r\n        montoAdelanto5,\r\n        fechaAdelanto5,\r\n        montoAdelanto6,\r\n        fechaAdelanto6,\r\n        montoAdelanto7,\r\n        fechaAdelanto7,\r\n        montoAdelanto8,\r\n        fechaAdelanto8,\r\n        campanias,\r\n        adicional,\r\n        descuento_autonort,\r\n        observacion_adv,\r\n        accesorios,\r\n        condicion_accesorios,\r\n        fecha_facturacion_tdp,\r\n        estatus_facturacion,\r\n        tipo_operacion,\r\n        fecha_inicio_reserva,\r\n        fecha_fin_reserva,\r\n        tipo_comprobante,\r\n        nro_comprobante,\r\n        fecha_comprobante,\r\n        estatus_venta,\r\n        sucursal_venta,\r\n        fecha_cancelacion,\r\n        empleado\r\n    } = req.body;\r\n\r\n    try {\r\n\r\n        const newSale = new Sale({ serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, descuento_autonort, observacion_adv, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n        newSale.vendedor = foundSeller.map(seller => seller._id);\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n        newSale.auto = foundVehicle.map(vehicle => vehicle._id);\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n        newSale.cliente = foundCustomer.map(customer => customer._id);\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n        newSale.campanias = foundCampaign.map(campaign => campaign._id);\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n        newSale.adicional = foundAdicional.map(adicional => adicional._id);\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n        newSale.accesorios = foundProps.map(props => props._id);\r\n\r\n        //Empleado\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newSale.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //console.log(newSale);\r\n        const saleSaved = await newSale.save();\r\n        if (saleSaved) {\r\n            res.json({ message: 'Expediente creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSales = async(req, res) => {\r\n    try {\r\n        const query = await Sale.find()\r\n            .sort({ fecha_cancelacion: 'desc' })\r\n            .populate({ path: 'vendedor', select: 'name sucursal' })\r\n            .populate({\r\n                path: 'auto',\r\n                select: 'cod_tdp model version',\r\n                populate: {\r\n                    path: 'model',\r\n                    select: 'avatar name marca',\r\n                    populate: {\r\n                        path: 'marca',\r\n                        select: 'avatar name'\r\n                    }\r\n                }\r\n            })\r\n            .populate({ path: 'cliente', select: 'name document cellphone' })\r\n            .populate({ path: 'campanias' })\r\n            .populate({ path: 'adicional' })\r\n            .populate({ path: 'accesorios' })\r\n            .populate({ path: 'empleado', select: 'username name' })\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, files: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Expedientes' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n\r\n        const query = await Sale.findById(salesId)\r\n            .populate({ path: 'vendedor', select: 'name sucursal' })\r\n            .populate({\r\n                path: 'auto',\r\n                select: 'model version cod_tdp',\r\n                populate: {\r\n                    path: 'model',\r\n                    select: 'marca name avatar',\r\n                    populate: { path: 'marca', select: 'name avatar' }\r\n                },\r\n            })\r\n            .populate({ path: 'cliente', select: 'name document' })\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate({ path: 'empleado', select: 'name username' });\r\n\r\n        if (query) {\r\n            res.json({ expediente: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Expediente' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    const { vendedor, cliente, auto, serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias, adicional, descuento_autonort, observacion_adv, accesorios, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, monto_facturado, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion } = req.body;\r\n\r\n    try {\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n\r\n        const ventaActualizada = await Sale.findByIdAndUpdate(salesId, {\r\n            vendedor: foundSeller.map(seller => seller._id),\r\n            cliente: foundCustomer.map(customer => customer._id),\r\n            auto: foundVehicle.map(vehicle => vehicle._id),\r\n            serie_tdp,\r\n            color,\r\n            precio,\r\n            anio_fabricacion,\r\n            anio_modelo,\r\n            ubicacion_vehiculo,\r\n            fecha_ciguena,\r\n            fecha_entrega,\r\n            estatus_vehiculo,\r\n            tipo_financiamiento,\r\n            entidad_bancaria,\r\n            sustento,\r\n            fecha_sustento,\r\n            monto_aprobado,\r\n            oficina,\r\n            ejecutivo,\r\n            montoAdelanto1,\r\n            fechaAdelanto1,\r\n            montoAdelanto2,\r\n            fechaAdelanto2,\r\n            montoAdelanto3,\r\n            fechaAdelanto3,\r\n            montoAdelanto4,\r\n            fechaAdelanto4,\r\n            montoAdelanto5,\r\n            fechaAdelanto5,\r\n            montoAdelanto6,\r\n            fechaAdelanto6,\r\n            montoAdelanto7,\r\n            fechaAdelanto7,\r\n            montoAdelanto8,\r\n            fechaAdelanto8,\r\n            campanias: foundCampaign.map(campaign => campaign._id),\r\n            adicional: foundAdicional.map(adicional => adicional._id),\r\n            descuento_autonort,\r\n            observacion_adv,\r\n            accesorios: foundProps.map(props => props._id),\r\n            condicion_accesorios,\r\n            fecha_facturacion_tdp,\r\n            estatus_facturacion,\r\n            monto_facturado,\r\n            tipo_operacion,\r\n            fecha_inicio_reserva,\r\n            fecha_fin_reserva,\r\n            tipo_comprobante,\r\n            nro_comprobante,\r\n            fecha_comprobante,\r\n            estatus_venta,\r\n            sucursal_venta,\r\n            fecha_cancelacion\r\n        });\r\n\r\n        if (ventaActualizada) {\r\n            res.json({ message: 'Expediente actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a actualizar' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n        const deleteSale = await Sale.findByIdAndDelete(salesId);\r\n\r\n        if (deleteSale) {\r\n            res.json({ message: 'Expediente eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesLibres = async(req, res) => {\r\n    const { estado, tramite } = req.body;\r\n    try {\r\n        const query = await Sale.find({ estatus_venta: estado, pasoaTramite: tramite })\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, files: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${estado}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const UnidadesByStatus = async(req, res) => {\r\n    const { estado, tramite, sucursal } = req.body;\r\n    try {\r\n        const query = await Sale.find({ estatus_venta: estado, pasoaTramite: tramite, sucursal_venta: sucursal }).sort({ fecha_cancelacion: 'desc' })\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, files: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${estado}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesBySucursalyFecha = async(req, res) => {\r\n    const { sucursal, start, end } = req.body;\r\n    try {\r\n        const query = await Sale.find({ sucursal_venta: sucursal, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } })\r\n            .sort({ fecha_cancelacion: 'desc' })\r\n            .populate({ path: 'vendedor', select: 'name sucursal' })\r\n            .populate({\r\n                path: 'auto',\r\n                select: 'cod_tdp model version',\r\n                populate: {\r\n                    path: 'model',\r\n                    select: 'avatar name marca',\r\n                    populate: {\r\n                        path: 'marca',\r\n                        select: 'avatar name'\r\n                    }\r\n                }\r\n            })\r\n            .populate({ path: 'cliente', select: 'name document cellphone' })\r\n            .populate({ path: 'campanias' })\r\n            .populate({ path: 'adicional' })\r\n            .populate({ path: 'accesorios' })\r\n            .populate({ path: 'empleado', select: 'username name' })\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, files: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Unidades' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesByStatus = async(req, res) => {\r\n    const { estado, start, end } = req.body;\r\n    try {\r\n        const query = await Sale.where({\r\n            estatus_venta: estado,\r\n            fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) }\r\n        }).countDocuments();\r\n        //console.log(consulta)\r\n        if (query >= 0) {\r\n            res.json({ count: query });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesBySucursalFecha = async(req, res) => {\r\n    const { sucursal, start, end } = req.body;\r\n    try {\r\n        const query = await Sale.find({ sucursal_venta: sucursal, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).countDocuments();\r\n        if (query >= 0) {\r\n            res.json({ count: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen unidades' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesBySucursalStatusFecha = async(req, res) => {\r\n    const { sucursal, status, start, end } = req.body;\r\n    //console.log(start, end);\r\n    try {\r\n        const query = await Sale.find({ sucursal_venta: sucursal, estatus_venta: status, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).countDocuments();\r\n        //console.log('Query: ', query);\r\n        if (query >= 0) {\r\n            res.json({ count: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${status} en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoVentasByVendedor = async(req, res) => {\r\n    const { sucursal, estatus, start, end } = req.body;\r\n    // console.log(req.body)\r\n    try {\r\n        const filter = {\r\n            sucursal_venta: sucursal,\r\n            estatus_venta: estatus,\r\n            fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) }\r\n        };\r\n        const consulta = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: \"$vendedor\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }, {\r\n            $sort: { num_ventas: -1 }\r\n        }]);\r\n        if (consulta.length > 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(201).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoVentasByModelo = async(req, res) => {\r\n    const { sucursal, estatus, start, end } = req.body;\r\n\r\n    try {\r\n        const filter = { sucursal_venta: sucursal, estatus_venta: estatus, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } };\r\n        const query = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: \"$auto\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }]);\r\n        if (query.length > 0) {\r\n            res.json({ ranking: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const rankingVentasByModelo = async(req, res) => {\r\n    const { estado, start, end } = req.body;\r\n\r\n    try {\r\n        const filter = {\r\n            estatus_venta: estado,\r\n            fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) }\r\n        };\r\n        const query = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: \"$auto\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }, {\r\n            $sort: { num_ventas: -1 }\r\n        }]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, ranking: query });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesEntregadasBySucursal = async(req, res) => {\r\n    const { sucursal, start, end } = req.body;\r\n    try {\r\n        const query = await Sale.where({\r\n            sucursal_venta: sucursal,\r\n            fecha_entrega: { $gte: new Date(start), $lte: new Date(end) }\r\n        }).find().countDocuments();\r\n        if (query >= 0) {\r\n            res.json({ total: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades entregadas en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const conteoVehiculosEntregadosByFecha = async(req, res) => {\r\n    const { ubicacion, start, end } = req.body;\r\n    try {\r\n        const filtro = {\r\n            ubicacion_vehiculo: ubicacion,\r\n            fecha_entrega: { $gte: new Date(start), $lte: new Date(end) }\r\n        };\r\n        const query = await Sale.aggregate([\r\n            { $match: filtro }, {\r\n                $group: {\r\n                    _id: '$sucursal_venta',\r\n                    qty: { $sum: 1 }\r\n                }\r\n            }\r\n        ]);\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, deploy: query })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const obtenerToyotaValues = async(req, res) => {\r\n    const { sucursal, statusVenta, start, end } = req.body;\r\n    const objetos = []\r\n    try {\r\n        // const query = await Sale.where({ sucursal_venta: sucursal, estatus_venta: statusVenta, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) }, adicional: { $gte: 1 } }).find();\r\n        const query = await Sale.where({ sucursal_venta: sucursal, estatus_venta: statusVenta, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).find().populate('adicional vendedor auto')\r\n            // const values = await query.adicional\r\n            // console.log(query)\r\n        query.forEach((element) => {\r\n            console.log(element)\r\n            if (element.adicional.length > 0) {\r\n                let perra = {};\r\n                perra.sucursal = element.sucursal_venta\r\n                perra.serie = element.serie_tdp\r\n                perra.adicional = element.adicional\r\n                perra.vendedor = element.vendedor\r\n                perra.vehiculo = element.auto\r\n                objetos.push(perra)\r\n            }\r\n        })\r\n        if (query >= 0) {\r\n\r\n            res.json({ nro_adicionales: objetos.length, toyota_values: objetos })\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${statusVenta} en ${sucursal} con Toyota Value en ese rango de fechas` })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getVehiclesySeller = async(req, res) => {\r\n    const { vendedor, start, end } = req.body;\r\n\r\n    try {\r\n        const sellerFound = await Seller.findOne({ name: vendedor });\r\n\r\n        const filtro = { vendedor: sellerFound._id, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } };\r\n        const query = await Sale.aggregate([{\r\n            $match: filtro\r\n        }, {\r\n            $group: {\r\n                _id: \"$auto\",\r\n                qty: { $sum: 1 }\r\n            }\r\n        }]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, deploy: query });\r\n        } else {\r\n            return res.staus(201).json({ message: 'No existen Ventas en este Vendedor' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getSalesBySeller = async(req, res) => {\r\n    const { vendedor, start, end } = req.body;\r\n\r\n    try {\r\n        const sellerFound = await Seller.findOne({ name: vendedor });\r\n\r\n        const filtro = { vendedor: sellerFound._id, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } };\r\n        const query = await Sale.aggregate([{\r\n            $match: filtro\r\n        }, {\r\n            $group: {\r\n                _id: \"$estatus_venta\",\r\n                qty: { $sum: 1 }\r\n            }\r\n        }]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, deploy: query });\r\n        } else {\r\n            return res.staus(201).json({ message: 'No existen Ventas en este Vendedor' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getRankingByStatusyFecha = async(req, res) => {\r\n    const { sucursal, start, end } = req.body;\r\n    try {\r\n        const filter = { sucursal_venta: sucursal, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } };\r\n        const consulta = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: \"$estatus_venta\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }, {\r\n            $sort: { num_ventas: -1 }\r\n        }]);\r\n        if (consulta.length > 0) {\r\n            res.json({ total: consulta.length, ranking: consulta });\r\n        } else {\r\n            return res.status(201).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const probandoRanking = async(req, res) => {\r\n    const { sucursal, estado, start, end } = req.body;\r\n\r\n    try {\r\n        const filter = {\r\n            sucursal_venta: sucursal,\r\n            estatus_venta: estado,\r\n            fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) }\r\n        };\r\n        const query = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: { seller: '$vendedor', month: { $month: '$fecha_cancelacion' } },\r\n                count: { $sum: 1 }\r\n            },\r\n        }, {\r\n            $sort: { _id: 1 }\r\n        }]);\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, deploy: query });\r\n        } else {\r\n            return res.status(201).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}"],"file":"sale.controller.js"}