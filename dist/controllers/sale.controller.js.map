{"version":3,"sources":["../../src/controllers/sale.controller.js"],"names":["createSale","req","res","body","vendedor","cliente","auto","serie_tdp","color","precio","anio_fabricacion","anio_modelo","ubicacion_vehiculo","fecha_ciguena","fecha_entrega","estatus_vehiculo","tipo_financiamiento","entidad_bancaria","sustento","fecha_sustento","monto_aprobado","oficina","ejecutivo","montoAdelanto1","fechaAdelanto1","montoAdelanto2","fechaAdelanto2","montoAdelanto3","fechaAdelanto3","montoAdelanto4","fechaAdelanto4","montoAdelanto5","fechaAdelanto5","montoAdelanto6","fechaAdelanto6","montoAdelanto7","fechaAdelanto7","montoAdelanto8","fechaAdelanto8","campanias","adicional","descuento_autonort","observacion_adv","accesorios","condicion_accesorios","fecha_facturacion_tdp","estatus_facturacion","tipo_operacion","fecha_inicio_reserva","fecha_fin_reserva","tipo_comprobante","nro_comprobante","fecha_comprobante","estatus_venta","sucursal_venta","fecha_cancelacion","empleado","newSale","Sale","Seller","find","name","$in","foundSeller","map","seller","_id","Vehicle","cod_tdp","foundVehicle","vehicle","Customer","document","foundCustomer","customer","Campaign","foundCampaign","campaign","Adicional","foundAdicional","Props","foundProps","props","User","username","foundEmployee","em","save","saleSaved","json","message","console","log","status","getSales","populate","ventasfull","length","getSaleById","salesId","params","findById","venta","updateSaleById","findByIdAndUpdate","ventaActualizada","deleteSaleById","findByIdAndDelete","deleteSale","UnidadesByStatus","estado","tramite","where","query","UnidadesBySucursal","sucursal","start","end","$gte","Date","$lte","conteoUnidadesCanceladas","countDocuments","consulta","conteoUnidadesLibres","conteoUnidadesBySucursalStatusFecha","conteoVentasByVendedor","estatus","filter","aggregate","$match","$group","num_ventas","$sum","conteoVentasByModelo","vistaUnidadesEntregadasByStatus","statusVenta","statusVehiculo","obtenerToyotaValues","objetos","forEach","element","perra","serie","vehiculo","push","nro_adicionales","toyota_values"],"mappings":"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","sourcesContent":["import Sale from '../models/Sale'\r\nimport Vehicle from '../models/Vehicle'\r\nimport Seller from '../models/Seller'\r\nimport Customer from '../models/Customer'\r\nimport Campaign from '../models/Campaign'\r\nimport Adicional from '../models/Adicional'\r\nimport Props from '../models/Props'\r\nimport User from '../models/User'\r\n\r\nexport const createSale = async(req, res) => {\r\n    const {\r\n        vendedor,\r\n        cliente,\r\n        auto,\r\n        serie_tdp,\r\n        color,\r\n        precio,\r\n        anio_fabricacion,\r\n        anio_modelo,\r\n        ubicacion_vehiculo,\r\n        fecha_ciguena,\r\n        fecha_entrega,\r\n        estatus_vehiculo,\r\n        tipo_financiamiento,\r\n        entidad_bancaria,\r\n        sustento,\r\n        fecha_sustento,\r\n        monto_aprobado,\r\n        oficina,\r\n        ejecutivo,\r\n        montoAdelanto1,\r\n        fechaAdelanto1,\r\n        montoAdelanto2,\r\n        fechaAdelanto2,\r\n        montoAdelanto3,\r\n        fechaAdelanto3,\r\n        montoAdelanto4,\r\n        fechaAdelanto4,\r\n        montoAdelanto5,\r\n        fechaAdelanto5,\r\n        montoAdelanto6,\r\n        fechaAdelanto6,\r\n        montoAdelanto7,\r\n        fechaAdelanto7,\r\n        montoAdelanto8,\r\n        fechaAdelanto8,\r\n        campanias,\r\n        adicional,\r\n        descuento_autonort,\r\n        observacion_adv,\r\n        accesorios,\r\n        condicion_accesorios,\r\n        fecha_facturacion_tdp,\r\n        estatus_facturacion,\r\n        tipo_operacion,\r\n        fecha_inicio_reserva,\r\n        fecha_fin_reserva,\r\n        tipo_comprobante,\r\n        nro_comprobante,\r\n        fecha_comprobante,\r\n        estatus_venta,\r\n        sucursal_venta,\r\n        fecha_cancelacion,\r\n        empleado\r\n    } = req.body;\r\n\r\n    try {\r\n\r\n        const newSale = new Sale({ serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, descuento_autonort, observacion_adv, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n        newSale.vendedor = foundSeller.map(seller => seller._id);\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n        newSale.auto = foundVehicle.map(vehicle => vehicle._id);\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n        newSale.cliente = foundCustomer.map(customer => customer._id);\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n        newSale.campanias = foundCampaign.map(campaign => campaign._id);\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n        newSale.adicional = foundAdicional.map(adicional => adicional._id);\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n        newSale.accesorios = foundProps.map(props => props._id);\r\n\r\n        //Empleado\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newSale.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //console.log(newSale);\r\n        const saleSaved = await newSale.save();\r\n        if (saleSaved) {\r\n            res.json({ message: 'Expediente creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSales = async(req, res) => {\r\n    try {\r\n        const ventasfull = await Sale.find()\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado');\r\n\r\n        if (ventasfull.length > 0) {\r\n            res.json(ventasfull);\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Expedientes' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n\r\n        const venta = await Sale.findById(salesId)\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado');\r\n\r\n        if (venta) {\r\n            res.json(venta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Expediente' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    const { vendedor, cliente, auto, serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias, adicional, descuento_autonort, observacion_adv, accesorios, condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion } = req.body;\r\n\r\n    try {\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: vendedor } });\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: cliente } });\r\n\r\n        //Campaign\r\n        const foundCampaign = await Campaign.find({ name: { $in: campanias } });\r\n\r\n        //Adicional\r\n        const foundAdicional = await Adicional.find({ name: { $in: adicional } });\r\n\r\n        //Props\r\n        const foundProps = await Props.find({ name: { $in: accesorios } });\r\n\r\n        const ventaActualizada = await Sale.findByIdAndUpdate(salesId, { vendedor: foundSeller.map(seller => seller._id), cliente: foundCustomer.map(customer => customer._id), auto: foundVehicle.map(vehicle => vehicle._id), serie_tdp, color, precio, anio_fabricacion, anio_modelo, ubicacion_vehiculo, fecha_ciguena, fecha_entrega, estatus_vehiculo, tipo_financiamiento, entidad_bancaria, sustento, fecha_sustento, monto_aprobado, oficina, ejecutivo, montoAdelanto1, fechaAdelanto1, montoAdelanto2, fechaAdelanto2, montoAdelanto3, fechaAdelanto3, montoAdelanto4, fechaAdelanto4, montoAdelanto5, fechaAdelanto5, montoAdelanto6, fechaAdelanto6, montoAdelanto7, fechaAdelanto7, montoAdelanto8, fechaAdelanto8, campanias: foundCampaign.map(campaign => campaign._id), adicional: foundAdicional.map(adicional => adicional._id), descuento_autonort, observacion_adv, accesorios: foundProps.map(props => props._id), condicion_accesorios, fecha_facturacion_tdp, estatus_facturacion, tipo_operacion, fecha_inicio_reserva, fecha_fin_reserva, tipo_comprobante, nro_comprobante, fecha_comprobante, estatus_venta, sucursal_venta, fecha_cancelacion });\r\n\r\n        if (ventaActualizada) {\r\n            res.json({ message: 'Expediente actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a actualizar' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSaleById = async(req, res) => {\r\n    const { salesId } = req.params;\r\n\r\n    try {\r\n        const deleteSale = await Sale.findByIdAndDelete(salesId);\r\n\r\n        if (deleteSale) {\r\n            res.json({ message: 'Expediente eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Expediente a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesByStatus = async(req, res) => {\r\n    const { estado, tramite } = req.body;\r\n    try {\r\n        const query = await Sale.find().where({ estatus_venta: estado })\r\n            .populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${estado}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const UnidadesBySucursal = async(req, res) => {\r\n    const { sucursal, start, end } = req.body;\r\n    try {\r\n        const query = await Sale.where({ sucursal_venta: sucursal, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).find().populate('vendedor')\r\n            .populate('auto')\r\n            .populate('cliente')\r\n            .populate('campanias')\r\n            .populate('adicional')\r\n            .populate('accesorios')\r\n            .populate('empleado')\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No Existen Unidades' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesCanceladas = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Cancelado' }).countDocuments();\r\n        //console.log(consulta)\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesLibres = async(req, res) => {\r\n    try {\r\n        const consulta = await Sale.where({ estatus_venta: 'Libre' }).countDocuments();\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Unidades Libres' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoUnidadesBySucursalStatusFecha = async(req, res) => {\r\n    const { sucursal, status, start, end } = req.body;\r\n    //console.log(start, end);\r\n    try {\r\n        const consulta = await Sale.find({ sucursal_venta: sucursal, estatus_venta: status, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).countDocuments();\r\n        //console.log('Query: ', consulta);\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${status} en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoVentasByVendedor = async(req, res) => {\r\n    const { sucursal, estatus, start, end } = req.body;\r\n    // console.log(req.body)\r\n    try {\r\n        const filter = { sucursal_venta: sucursal, estatus_venta: estatus, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } };\r\n        const consulta = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: \"$vendedor\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }]);\r\n        if (consulta.length > 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const conteoVentasByModelo = async(req, res) => {\r\n    const { sucursal, estatus, start, end } = req.body;\r\n    try {\r\n        const filter = { sucursal_venta: sucursal, estatus_venta: estatus, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } };\r\n        const consulta = await Sale.aggregate([{\r\n            $match: filter\r\n        }, {\r\n            $group: {\r\n                _id: \"$auto\",\r\n                num_ventas: { $sum: 1 }\r\n            }\r\n        }]);\r\n        if (consulta.length > 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Ventas aún' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const vistaUnidadesEntregadasByStatus = async(req, res) => {\r\n    const { sucursal, statusVenta, start, end, statusVehiculo } = req.body;\r\n    //console.log(start, end);\r\n    try {\r\n        const consulta = await Sale.where({ sucursal_venta: sucursal, estatus_venta: statusVenta, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) }, ubicacion_vehiculo: statusVehiculo }).find().countDocuments();\r\n        // console.log('Query: ', consulta);\r\n        if (consulta >= 0) {\r\n            res.json(consulta);\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${statusVenta} y ${statusVehiculo} en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const obtenerToyotaValues = async(req, res) => {\r\n    const { sucursal, statusVenta, start, end } = req.body;\r\n    const objetos = []\r\n    try {\r\n        // const query = await Sale.where({ sucursal_venta: sucursal, estatus_venta: statusVenta, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) }, adicional: { $gte: 1 } }).find();\r\n        const query = await Sale.where({ sucursal_venta: sucursal, estatus_venta: statusVenta, fecha_cancelacion: { $gte: new Date(start), $lte: new Date(end) } }).find().populate('adicional vendedor auto')\r\n            // const values = await query.adicional\r\n            // console.log(query)\r\n        query.forEach((element) => {\r\n            console.log(element)\r\n            if (element.adicional.length > 0) {\r\n                let perra = {};\r\n                perra.sucursal = element.sucursal_venta\r\n                perra.serie = element.serie_tdp\r\n                perra.adicional = element.adicional\r\n                perra.vendedor = element.vendedor\r\n                perra.vehiculo = element.auto\r\n                objetos.push(perra)\r\n            }\r\n        })\r\n        if (query >= 0) {\r\n\r\n            res.json({ nro_adicionales: objetos.length, toyota_values: objetos })\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Unidades ${statusVenta} en ${sucursal} con Toyota Value en ese rango de fechas` })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"sale.controller.js"}