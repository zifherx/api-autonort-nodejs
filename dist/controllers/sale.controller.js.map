{"version":3,"sources":["../../src/controllers/sale.controller.js"],"names":["createSale","req","res","body","fecha","nroComprobante","seller","vehicle","financing","entity","support","office","account_executive","customer","situacion","newSale","Sale","Seller","find","name","$in","foundSeller","map","_id","Vehicle","serie_tdp","foundVehicle","Financing","type","foundFinancing","Customer","document","foundCustomer","save","saleSaved","status","json","console","log","message","getSales","populate","ventasfull","getSaleById","salesId","params","findById","venta","updateSaleById","findByIdAndUpdate","new","ventaActualizada","deleteSaleById","findByIdAndDelete","deleteSale"],"mappings":"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","sourcesContent":["import Sale from '../models/Sale'\r\nimport Vehicle from '../models/Vehicle'\r\nimport Seller from '../models/Seller'\r\nimport Financing from '../models/Financing'\r\nimport Customer from '../models/Customer'\r\n\r\nexport const createSale = async(req, res) => {\r\n    try {\r\n        const { fecha, nroComprobante, seller, vehicle, financing, entity, support, office, account_executive, customer, situacion } = req.body;\r\n\r\n        const newSale = new Sale({ fecha, nroComprobante, entity, support, office, account_executive, situacion });\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: seller } });\r\n        newSale.seller = foundSeller.map(seller => seller._id);\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ serie_tdp: { $in: vehicle } });\r\n        newSale.vehicle = foundVehicle.map(vehicle => vehicle._id);\r\n\r\n        //Financing\r\n        const foundFinancing = await Financing.find({ type: { $in: financing } });\r\n        newSale.financing = foundFinancing.map(financing => financing._id);\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: customer } });\r\n        newSale.customer = foundCustomer.map(customer => customer._id);\r\n\r\n        //console.log(newSale);\r\n        const saleSaved = await newSale.save();\r\n        res.status(201).json(saleSaved);\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error interno' })\r\n    }\r\n}\r\n\r\nexport const getSales = async(req, res) => {\r\n    try {\r\n        const ventasfull = await Sale.find()\r\n            .populate('seller')\r\n            .populate('vehicle')\r\n            .populate('financing')\r\n            .populate('customer');\r\n\r\n        res.status(200).json(ventasfull);\r\n\r\n        //console.log(ventasfull)\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error interno' })\r\n    }\r\n}\r\n\r\nexport const getSaleById = async(req, res) => {\r\n    try {\r\n        const { salesId } = req.params;\r\n        const venta = await Sale.findById(salesId)\r\n            .populate('seller')\r\n            .populate('vehicle')\r\n            .populate('financing')\r\n            .populate('customer');\r\n\r\n        if (venta) {\r\n            res.status(200).json(venta);\r\n        } else {\r\n            res.status(201).json({ message: 'No existe la venta' });\r\n        }\r\n\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error interno' })\r\n    }\r\n}\r\n\r\nexport const updateSaleById = async(req, res) => {\r\n    try {\r\n        const { salesId } = req.params;\r\n        const { fecha, nroComprobante, seller, vehicle, financing, entity, support, office, account_executive, customer, situacion } = req.body;\r\n\r\n        //Seller\r\n        const foundSeller = await Seller.find({ name: { $in: seller } });\r\n\r\n        //Vehicle\r\n        const foundVehicle = await Vehicle.find({ serie_tdp: { $in: vehicle } });\r\n\r\n        //Financing\r\n        const foundFinancing = await Financing.find({ type: { $in: financing } });\r\n\r\n        //Customer\r\n        const foundCustomer = await Customer.find({ document: { $in: customer } });\r\n\r\n        const ventaActualizada = await Sale.findByIdAndUpdate(salesId, { fecha, nroComprobante, seller: foundSeller.map(seller => seller._id), vehicle: foundVehicle.map(vehicle => vehicle._id), financing: foundFinancing.map(financing => financing._id), entity, support, office, account_executive, customer: foundCustomer.map(customer => customer._id), situacion }, { new: true });\r\n\r\n        if (ventaActualizada) {\r\n            //Mandamos la respuesta\r\n            res.status(201).json(ventaActualizada);\r\n        } else {\r\n            //Mandamos la respuesta\r\n            res.status(401).json({ message: 'Venta no existe' });\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error interno' })\r\n    }\r\n}\r\n\r\nexport const deleteSaleById = async(req, res) => {\r\n    try {\r\n        const { salesId } = req.params;\r\n        const deleteSale = await Sale.findByIdAndDelete(salesId);\r\n\r\n        if (deleteSale) {\r\n            res.status(200).json({ message: 'Venta Eliminada' });\r\n        } else {\r\n            res.status(401).json({ message: 'Venta no existe' });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ message: 'Error interno' })\r\n    }\r\n}"],"file":"sale.controller.js"}