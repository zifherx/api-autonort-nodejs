{"version":3,"sources":["../../src/controllers/endoso.controller.js"],"names":["getAll","req","res","Endoso","find","sort","name","query","length","json","total","all","status","message","console","log","getAllActivos","total_active","all_active","getOneById","endosoId","params","findById","one","createOne","body","estado","newObj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Endoso from \"../models/Endoso\";\r\n\r\nexport const getAll = async (req,res) => {\r\n    try {\r\n        const query = await Endoso.find().sort({name: 'asc'});\r\n        if(query.length > 0){\r\n            res.json({total: query.length, all: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existen Endosos'})\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport const getAllActivos = async (req,res) => {\r\n    try {\r\n        const query = await Endoso.find({status: 'Activo'}).sort({name: 'asc'});\r\n        if(query.length > 0){\r\n            res.json({total_active: query.length, all_active: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existen Endosos Activos'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport const getOneById = async (req,res) => {\r\n    const {endosoId} = req.params;\r\n    try {\r\n        const query = await Endoso.findById(endosoId);\r\n        if(query){\r\n            res.json({one: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existe el Endoso'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport const createOne = async (req,res) => {\r\n    const { name, estado} = req.body;\r\n    \r\n    try {\r\n        const newObj = new Endoso( { name, estado});\r\n        const query = await newObj.save();\r\n        if(query){\r\n            res.json({message: 'Endoso creado con éxito'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport const updateOneById = async (req,res) => {\r\n    const { name, estado} = req.body;\r\n    const { endosoId } = req.params;\r\n    try {\r\n        const query = await Endoso.findByIdAndUpdate(endosoId, {name, estado});\r\n        if(query){\r\n            res.json({message: 'Endoso actualizado con éxito'});\r\n        }else{\r\n            return res.json(404).json({message: 'No existe Endoso a actualizar'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n    \r\n}\r\n\r\nexport const deleteOneById = async (req,res) => {\r\n    const { endosoId } = req.params;\r\n    try {\r\n        const query = await Endoso.findByIdAndDelete(endosoId);\r\n        if(query){\r\n            res.json({message: 'Endoso eliminado con éxito'});\r\n        }else{\r\n            return res.json(404).json({message: 'No existe Endoso a eliminar'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}"],"file":"endoso.controller.js"}