{"version":3,"sources":["../../src/controllers/endoso.controller.js"],"names":["getEndosos","req","res","Endoso","find","sort","name","query","length","json","status","message","console","log","getEndosoByActivo","getEndosoById","endosoId","params","findById","createEndoso","body","newObj","save","updateEndoso","findByIdAndUpdate","deleteEndoso","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Endoso from \"../models/Endoso\";\r\n\r\nexport const getEndosos = async (req,res) => {\r\n    try {\r\n        const query = await Endoso.find().sort({name: 'asc'});\r\n        if(query.length > 0){\r\n            res.json(query);\r\n        }else{\r\n            return res.status(404).json({message: 'No existen Endosos'})\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport const getEndosoByActivo = async (req,res) => {\r\n    try {\r\n        const query = await Endoso.find({status: 'Activo'}).sort({name: 'asc'});\r\n        if(query.length > 0){\r\n            res.json(query)\r\n        }else{\r\n            return res.status(404).json({message: 'No existen Endosos Activos'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport const getEndosoById = async (req,res) => {\r\n    const {endosoId} = req.params;\r\n    try {\r\n        const query = await Endoso.findById(endosoId);\r\n        if(query){\r\n            res.json(query);\r\n        }else{\r\n            return res.status(404).json({message: 'No existe el Endoso'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport const createEndoso = async (req,res) => {\r\n    const { name, status} = req.body;\r\n    \r\n    try {\r\n        const newObj = new Endoso( { name, status});\r\n        const query = await newObj.save();\r\n        if(query){\r\n            res.json({message: 'Endoso creado con éxito'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport const updateEndoso = async (req,res) => {\r\n    const { name, status} = req.body;\r\n    const { endosoId } = req.params;\r\n    try {\r\n        const newObj = await Endoso.findByIdAndUpdate(endosoId, {name, status});\r\n        if(newObj){\r\n            res.json({message: 'Endoso actualizado con éxito'});\r\n        }else{\r\n            return res.json(404).json({message: 'No existe Endoso a actualizar'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({message: err.message});\r\n    }\r\n    \r\n}\r\n\r\nexport const deleteEndoso = async (req,res) => {\r\n    const { endosoId } = req.params;\r\n    try {\r\n        const newObj = await Endoso.findByIdAndDelete(endosoId);\r\n        if(newObj){\r\n            res.json({message: 'Endoso eliminado con éxito'});\r\n        }else{\r\n            return res.json(404).json({message: 'No existe Endoso a eliminar'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({message: err.message});\r\n    }\r\n}"],"file":"endoso.controller.js"}