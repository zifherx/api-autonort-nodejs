{"version":3,"sources":["../../src/controllers/anio.controller.js"],"names":["getAnios","req","res","Anio","find","sort","name","query","length","json","total","all","status","message","console","log","getAnioById","anioId","params","findById","one","getAnioByActivo","estado","total_active","all_active","createAnio","body","newAnio","save","updateAnio","findByIdAndUpdate","deleteAnio","findByIdAndDelete"],"mappings":";;;;;;;;;;;;;AAAA;;AAEO,IAAMA,QAAQ;AAAA,qFAAG,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEIC,cAAKC,IAAL,GAAYC,IAAZ,CAAiB;AAAEC,cAAAA,IAAI,EAAE,CAAC;AAAT,aAAjB,CAFJ;;AAAA;AAEVC,YAAAA,KAFU;;AAAA,kBAGZA,KAAK,CAACC,MAAN,GAAe,CAHH;AAAA;AAAA;AAAA;;AAIZN,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAACC,cAAAA,KAAK,EAAEH,KAAK,CAACC,MAAd;AAAsBG,cAAAA,GAAG,EAAEJ;AAA3B,aAAT;AAJY;AAAA;;AAAA;AAAA,6CAMLL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CANK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAShBC,YAAAA,OAAO,CAACC,GAAR;AATgB,6CAUTb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,YAAIA;AAAf,aAArB,CAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARb,QAAQ;AAAA;AAAA;AAAA,GAAd;;;;AAcA,IAAMgB,WAAW;AAAA,sFAAG,kBAAMf,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACfe,YAAAA,MADe,GACJhB,GAAG,CAACiB,MADA,CACfD,MADe;AAAA;AAAA;AAAA,mBAGCd,cAAKgB,QAAL,CAAcF,MAAd,CAHD;;AAAA;AAGbV,YAAAA,KAHa;;AAAA,iBAIfA,KAJe;AAAA;AAAA;AAAA;;AAKfL,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAACW,cAAAA,GAAG,EAAEb;AAAN,aAAT;AALe;AAAA;;AAAA;AAAA,8CAORL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CAPQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUnBC,YAAAA,OAAO,CAACC,GAAR;AAVmB,8CAWZb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAXY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXG,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAeA,IAAMK,eAAe;AAAA,sFAAG,kBAAMpB,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHC,cAAKC,IAAL,CAAU;AAAEkB,cAAAA,MAAM,EAAE;AAAV,aAAV,EAA4BjB,IAA5B,CAAiC;AAAEC,cAAAA,IAAI,EAAE,CAAC;AAAT,aAAjC,CAFG;;AAAA;AAEjBC,YAAAA,KAFiB;;AAAA,kBAGnBA,KAAK,CAACC,MAAN,GAAe,CAHI;AAAA;AAAA;AAAA;;AAInBN,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAACc,cAAAA,YAAY,EAAEhB,KAAK,CAACC,MAArB;AAA6BgB,cAAAA,UAAU,EAAEjB;AAAzC,aAAT;AAJmB;AAAA;;AAAA;AAAA,8CAMZL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CANY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASvBC,YAAAA,OAAO,CAACC,GAAR;AATuB,8CAUhBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAVgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfQ,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAcA,IAAMI,UAAU;AAAA,sFAAG,kBAAMxB,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACGD,GAAG,CAACyB,IADP,EACdpB,IADc,aACdA,IADc,EACRgB,MADQ,aACRA,MADQ;AAAA;AAGZK,YAAAA,OAHY,GAGF,IAAIxB,aAAJ,CAAS;AAAEG,cAAAA,IAAI,EAAJA,IAAF;AAAQgB,cAAAA,MAAM,EAANA;AAAR,aAAT,CAHE;AAAA;AAAA,mBAKEK,OAAO,CAACC,IAAR,EALF;;AAAA;AAKZrB,YAAAA,KALY;;AAOlB,gBAAIA,KAAJ,EAAW;AACPL,cAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEI,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACH;;AATiB;AAAA;;AAAA;AAAA;AAAA;AAWlBC,YAAAA,OAAO,CAACC,GAAR;AAXkB,8CAYXb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAZW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVY,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AAgBA,IAAMI,UAAU;AAAA,sFAAG,kBAAM5B,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACGD,GAAG,CAACyB,IADP,EACdpB,IADc,cACdA,IADc,EACRgB,MADQ,cACRA,MADQ;AAEdL,YAAAA,MAFc,GAEHhB,GAAG,CAACiB,MAFD,CAEdD,MAFc;AAAA;AAAA;AAAA,mBAIEd,cAAK2B,iBAAL,CAAuBb,MAAvB,EAA+B;AAAEX,cAAAA,IAAI,EAAJA,IAAF;AAAQgB,cAAAA,MAAM,EAANA;AAAR,aAA/B,CAJF;;AAAA;AAIZf,YAAAA,KAJY;;AAAA,iBAMdA,KANc;AAAA;AAAA;AAAA;;AAOdL,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAT;AAPc;AAAA;;AAAA;AAAA,8CASPX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CATO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYlBC,YAAAA,OAAO,CAACC,GAAR;AAZkB,8CAaXb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAbW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVgB,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AAiBA,IAAME,UAAU;AAAA,sFAAG,kBAAM9B,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACde,YAAAA,MADc,GACHhB,GAAG,CAACiB,MADD,CACdD,MADc;AAAA;AAAA;AAAA,mBAGEd,cAAK6B,iBAAL,CAAuBf,MAAvB,CAHF;;AAAA;AAGZV,YAAAA,KAHY;;AAAA,iBAIdA,KAJc;AAAA;AAAA;AAAA;;AAKdL,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAT;AALc;AAAA;;AAAA;AAAA,8CAOPX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CAPO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUlBC,YAAAA,OAAO,CAACC,GAAR;AAVkB,8CAWXb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAXW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVkB,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import Anio from \"../models/Anio\";\r\n\r\nexport const getAnios = async(req, res) => {\r\n    try {\r\n        const query = await Anio.find().sort({ name: -1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Años' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAnioById = async(req, res) => {\r\n    const { anioId } = req.params;\r\n    try {\r\n        const query = await Anio.findById(anioId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Año' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAnioByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Anio.find({ estado: true }).sort({ name: -1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Años Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createAnio = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const newAnio = new Anio({ name, estado });\r\n\r\n        const query = await newAnio.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Año creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateAnio = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { anioId } = req.params;\r\n    try {\r\n        const query = await Anio.findByIdAndUpdate(anioId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Año actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Anio a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteAnio = async(req, res) => {\r\n    const { anioId } = req.params;\r\n    try {\r\n        const query = await Anio.findByIdAndDelete(anioId);\r\n        if (query) {\r\n            res.json({ message: 'Año eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Año a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"anio.controller.js"}