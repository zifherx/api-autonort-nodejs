{"version":3,"sources":["../../src/controllers/anio.controller.js"],"names":["getAnios","req","res","Anio","find","sort","name","Anios","length","json","status","message","console","log","getAnioById","anioId","params","findById","anios","getAnioByActivo","createAnio","body","newAnio","save","anioCreado","updateAnio","findByIdAndUpdate","deleteAnio","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Anio from \"../models/Anio\";\r\n\r\nexport const getAnios = async(req, res) => {\r\n    try {\r\n        const Anios = await Anio.find().sort({ name: 'asc' });\r\n        if (Anios.length > 0) {\r\n            res.json(Anios);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Años' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAnioById = async(req, res) => {\r\n    const { anioId } = req.params;\r\n    try {\r\n        const anios = await Anio.findById(anioId);\r\n        if (anios) {\r\n            res.json(anios);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Año' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAnioByActivo = async(req, res) => {\r\n    try {\r\n        const anios = await Anio.find({ status: \"Activo\" }).sort({ name: 'asc' });\r\n        if (anios.length > 0) {\r\n            res.json(anios);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Años Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createAnio = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const newAnio = new Anio({ name, status });\r\n\r\n        const anioCreado = await newAnio.save();\r\n\r\n        if (anioCreado) {\r\n            res.json({ message: 'Año creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateAnio = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { anioId } = req.params;\r\n    try {\r\n        const updateAnio = await Anio.findByIdAndUpdate(anioId, { name, status });\r\n\r\n        if (updateAnio) {\r\n            res.json({ message: 'Año actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Anio a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteAnio = async(req, res) => {\r\n    const { anioId } = req.params;\r\n    try {\r\n        const deleteAnio = await Anio.findByIdAndDelete(anioId);\r\n        if (deleteAnio) {\r\n            res.json({ message: 'Año eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Año a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"anio.controller.js"}