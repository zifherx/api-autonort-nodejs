{"version":3,"file":"anio.controller.js","names":["getAnios","req","res","Anio","find","sort","name","query","length","json","total","all","status","message","console","log","getAnioById","anioId","params","findById","one","getAnioByActivo","estado","total_active","all_active","createAnio","body","newAnio","save","updateAnio","findByIdAndUpdate","deleteAnio","findByIdAndDelete"],"sources":["../../src/controllers/anio.controller.js"],"sourcesContent":["import Anio from \"../models/Anio\";\r\n\r\nexport const getAnios = async(req, res) => {\r\n    try {\r\n        const query = await Anio.find().sort({ name: -1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Años' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAnioById = async(req, res) => {\r\n    const { anioId } = req.params;\r\n    try {\r\n        const query = await Anio.findById(anioId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Año' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAnioByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Anio.find({ estado: true }).sort({ name: -1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Años Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createAnio = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const newAnio = new Anio({ name, estado });\r\n\r\n        const query = await newAnio.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Año creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateAnio = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { anioId } = req.params;\r\n    try {\r\n        const query = await Anio.findByIdAndUpdate(anioId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Año actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Anio a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteAnio = async(req, res) => {\r\n    const { anioId } = req.params;\r\n    try {\r\n        const query = await Anio.findByIdAndDelete(anioId);\r\n        if (query) {\r\n            res.json({ message: 'Año eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Año a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;AAAA;;+CACA,oJ;;AACO,IAAMA,QAAQ;EAAA,oFAAG,iBAAMC,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEIC,aAAA,CAAKC,IAAL,GAAYC,IAAZ,CAAiB;cAAEC,IAAI,EAAE,CAAC;YAAT,CAAjB,CAFJ;;UAAA;YAEVC,KAFU;;YAAA,MAGZA,KAAK,CAACC,MAAN,GAAe,CAHH;cAAA;cAAA;YAAA;;YAIZN,GAAG,CAACO,IAAJ,CAAS;cAACC,KAAK,EAAEH,KAAK,CAACC,MAAd;cAAsBG,GAAG,EAAEJ;YAA3B,CAAT;YAJY;YAAA;;UAAA;YAAA,iCAMLL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CANK;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAShBC,OAAO,CAACC,GAAR;YATgB,iCAUTb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,YAAIA;YAAf,CAArB,CAVS;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAARb,QAAQ;IAAA;EAAA;AAAA,GAAd;;;;AAcA,IAAMgB,WAAW;EAAA,qFAAG,kBAAMf,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YACfe,MADe,GACJhB,GAAG,CAACiB,MADA,CACfD,MADe;YAAA;YAAA;YAAA,OAGCd,aAAA,CAAKgB,QAAL,CAAcF,MAAd,CAHD;;UAAA;YAGbV,KAHa;;YAAA,KAIfA,KAJe;cAAA;cAAA;YAAA;;YAKfL,GAAG,CAACO,IAAJ,CAAS;cAACW,GAAG,EAAEb;YAAN,CAAT;YALe;YAAA;;UAAA;YAAA,kCAORL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAPQ;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAUnBC,OAAO,CAACC,GAAR;YAVmB,kCAWZb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAXY;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAXG,WAAW;IAAA;EAAA;AAAA,GAAjB;;;;AAeA,IAAMK,eAAe;EAAA,qFAAG,kBAAMpB,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEHC,aAAA,CAAKC,IAAL,CAAU;cAAEkB,MAAM,EAAE;YAAV,CAAV,EAA4BjB,IAA5B,CAAiC;cAAEC,IAAI,EAAE,CAAC;YAAT,CAAjC,CAFG;;UAAA;YAEjBC,KAFiB;;YAAA,MAGnBA,KAAK,CAACC,MAAN,GAAe,CAHI;cAAA;cAAA;YAAA;;YAInBN,GAAG,CAACO,IAAJ,CAAS;cAACc,YAAY,EAAEhB,KAAK,CAACC,MAArB;cAA6BgB,UAAU,EAAEjB;YAAzC,CAAT;YAJmB;YAAA;;UAAA;YAAA,kCAMZL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CANY;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YASvBC,OAAO,CAACC,GAAR;YATuB,kCAUhBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAVgB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAfQ,eAAe;IAAA;EAAA;AAAA,GAArB;;;;AAcA,IAAMI,UAAU;EAAA,qFAAG,kBAAMxB,GAAN,EAAWC,GAAX;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,YACGD,GAAG,CAACyB,IADP,EACdpB,IADc,aACdA,IADc,EACRgB,MADQ,aACRA,MADQ;YAAA;YAGZK,OAHY,GAGF,IAAIxB,aAAJ,CAAS;cAAEG,IAAI,EAAJA,IAAF;cAAQgB,MAAM,EAANA;YAAR,CAAT,CAHE;YAAA;YAAA,OAKEK,OAAO,CAACC,IAAR,EALF;;UAAA;YAKZrB,KALY;;YAOlB,IAAIA,KAAJ,EAAW;cACPL,GAAG,CAACO,IAAJ,CAAS;gBAAEI,OAAO,EAAE;cAAX,CAAT;YACH;;YATiB;YAAA;;UAAA;YAAA;YAAA;YAWlBC,OAAO,CAACC,GAAR;YAXkB,kCAYXb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAZW;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAVY,UAAU;IAAA;EAAA;AAAA,GAAhB;;;;AAgBA,IAAMI,UAAU;EAAA,qFAAG,kBAAM5B,GAAN,EAAWC,GAAX;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,aACGD,GAAG,CAACyB,IADP,EACdpB,IADc,cACdA,IADc,EACRgB,MADQ,cACRA,MADQ;YAEdL,MAFc,GAEHhB,GAAG,CAACiB,MAFD,CAEdD,MAFc;YAAA;YAAA;YAAA,OAIEd,aAAA,CAAK2B,iBAAL,CAAuBb,MAAvB,EAA+B;cAAEX,IAAI,EAAJA,IAAF;cAAQgB,MAAM,EAANA;YAAR,CAA/B,CAJF;;UAAA;YAIZf,KAJY;;YAAA,KAMdA,KANc;cAAA;cAAA;YAAA;;YAOdL,GAAG,CAACO,IAAJ,CAAS;cAAEI,OAAO,EAAE;YAAX,CAAT;YAPc;YAAA;;UAAA;YAAA,kCASPX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CATO;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAYlBC,OAAO,CAACC,GAAR;YAZkB,kCAaXb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAbW;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAVgB,UAAU;IAAA;EAAA;AAAA,GAAhB;;;;AAiBA,IAAME,UAAU;EAAA,qFAAG,kBAAM9B,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YACde,MADc,GACHhB,GAAG,CAACiB,MADD,CACdD,MADc;YAAA;YAAA;YAAA,OAGEd,aAAA,CAAK6B,iBAAL,CAAuBf,MAAvB,CAHF;;UAAA;YAGZV,KAHY;;YAAA,KAIdA,KAJc;cAAA;cAAA;YAAA;;YAKdL,GAAG,CAACO,IAAJ,CAAS;cAAEI,OAAO,EAAE;YAAX,CAAT;YALc;YAAA;;UAAA;YAAA,kCAOPX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAPO;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAUlBC,OAAO,CAACC,GAAR;YAVkB,kCAWXb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAXW;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAVkB,UAAU;IAAA;EAAA;AAAA,GAAhB"}