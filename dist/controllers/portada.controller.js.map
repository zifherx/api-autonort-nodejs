{"version":3,"sources":["../../src/controllers/portada.controller.js"],"names":["portadaCtrl","getAll","req","res","Portada","find","query","length","json","images","status","message","console","log","getAllActives","total","createOne","body","avatar","file","newObj","rutaImage","location","save"],"mappings":"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","sourcesContent":["import Portada from '../models/Portada'\r\n\r\nconst portadaCtrl = {};\r\n\r\nportadaCtrl.getAll = async(req,res) => {\r\n    try {\r\n        const query = await Portada.find();\r\n\r\n        if(query.length > 0){\r\n            res.json({images: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existen Portadas'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nportadaCtrl.getAllActives = async(req,res) => {\r\n    try {\r\n        const query = await Portada.find({status: true});\r\n\r\n        if(query.length > 0){\r\n            res.json({total: query.length, images: query});\r\n        }else{\r\n            return res.status(404).json({message: 'No existen Portadas'});\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nportadaCtrl.createOne = async (req, res) => {\r\n    const {status} = req.body;\r\n    const avatar = req.file;\r\n    \r\n    try {\r\n            let newObj = new Portada({rutaImage: avatar.location,status});\r\n\r\n            const query = await newObj.save();\r\n\r\n            if(query){\r\n                res.json({ message: 'Portada creada con Ã©xito' });\r\n            }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({message: err.message});\r\n    }\r\n}\r\n\r\nexport default portadaCtrl;"],"file":"portada.controller.js"}