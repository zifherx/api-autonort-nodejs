{"version":3,"file":"portada.controller.js","names":["portadaCtrl","getAll","req","res","Portada","find","query","length","json","total","all","status","message","console","log","getAllActivos","estado","select","total_active","all_active","getOneById","portadaId","params","findById","one","createOne","body","name","avatar","file","obj","undefined","nombreAvatar","originalname","location","save","updateOneById","findByIdAndUpdate","deleteOneByID","findByIdAndDelete"],"sources":["../../src/controllers/portada.controller.js"],"sourcesContent":["import Portada from \"../models/Portada\";\r\n\r\nconst portadaCtrl = {};\r\n\r\nportadaCtrl.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Portada.find();\r\n\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total: query.length, all: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen Portadas\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nportadaCtrl.getAllActivos = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Portada.find({ estado: true })\r\n        .select('name avatar estado');\r\n\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total_active: query.length, all_active: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen Portadas\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n}\r\n\r\nportadaCtrl.getOneById = async (req, res) => {\r\n\tconst { portadaId } = req.params;\r\n\ttry {\r\n\t\tconst query = await Portada.findById(portadaId);\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ one: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe portada\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nportadaCtrl.createOne = async (req, res) => {\r\n\tconst { name,estado } = req.body;\r\n\tconst avatar = req.file;\r\n\r\n\ttry {\r\n\t\tlet obj = null;\r\n\r\n\t\tif (avatar == null || avatar == undefined) {\r\n\t\t\tobj = new Portada({\r\n                name,\r\n\t\t\t\testado,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tobj = new Portada({\r\n                name,\r\n                nombreAvatar: avatar.originalname,\r\n\t\t\t\tavatar: avatar.location,\r\n\t\t\t\testado,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst query = await obj.save();\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Portada creada con éxito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nportadaCtrl.updateOneById = async (req, res) => {\r\n\tconst { estado } = req.body;\r\n\tconst { portadaId } = req.params;\r\n\tconst avatar = req.file;\r\n\r\n\ttry {\r\n\r\n        let query = null;\r\n\r\n        if(avatar == null || avatar == undefined){\r\n            query = await Portada.findByIdAndUpdate(portadaId, {\r\n                estado\r\n            });\r\n        }else{\r\n            query = await Portada.findByIdAndUpdate(portadaId, {\r\n                nombreAvatar: avatar.originalname,\r\n                avatar: avatar.location,\r\n                estado\r\n            });\r\n        }\r\n        \r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Portada actualizada con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No se encontró portada\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nportadaCtrl.deleteOneByID = async (req, res) => {\r\n\tconst { portadaId } = req.params;\r\n\ttry {\r\n\t\tconst query = await Portada.findByIdAndDelete(portadaId);\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Portada eliminada con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No se encontró portada\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default portadaCtrl;\r\n"],"mappings":"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"}