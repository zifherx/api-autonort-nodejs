{"version":3,"sources":["../../src/controllers/props.controller.js"],"names":["createProp","req","res","body","name","type","forCar","cantidad","precio","newProp","Props","save","propSaved","status","json","console","log","messsage","getProps","find","props","getPropById","propsId","params","findById","updatePropById","findByIdAndUpdate","new","updateProp","deletePropById","findByIdAndDelete","deletedProp"],"mappings":"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","sourcesContent":["import Props from '../models/Props'\r\n\r\nexport const createProp = async(req, res) => {\r\n    try {\r\n        const { name, type, forCar, cantidad, precio } = req.body;\r\n        const newProp = new Props({ name, type, forCar, cantidad, precio });\r\n        const propSaved = await newProp.save();\r\n        res.status(201).json(propSaved);\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ messsage: 'No se puede ejecutar la consulta' });\r\n    }\r\n}\r\n\r\nexport const getProps = async(req, res) => {\r\n    try {\r\n        const props = await Props.find();\r\n        if (props) {\r\n            res.status(200).json(props);\r\n        } else {\r\n            res.status(201).json({ messsage: 'No existen campañas a mostrar' });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ messsage: 'No se puede ejecutar la consulta' });\r\n    }\r\n}\r\n\r\nexport const getPropById = async(req, res) => {\r\n    try {\r\n        const { propsId } = req.params;\r\n        const props = await Props.findById(propsId);\r\n        if (props) {\r\n            res.status(200).json(props);\r\n        } else {\r\n            res.status(201).json({ messsage: 'No existe campaña a mostrar' });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ messsage: 'No se puede ejecutar la consulta' });\r\n    }\r\n}\r\n\r\nexport const updatePropById = async(req, res) => {\r\n    try {\r\n        const { propsId } = req.params;\r\n        const updateProp = await Props.findByIdAndUpdate(propsId, req.body, { new: true });\r\n        if (updateProp) {\r\n            res.status(200).json(updateProp);\r\n        } else {\r\n            res.status(401).json({ messsage: 'No existe campaña a actualizar' });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ messsage: 'No se puede ejecutar la consulta' });\r\n    }\r\n}\r\n\r\nexport const deletePropById = async(req, res) => {\r\n    try {\r\n        const { propsId } = req.params;\r\n        const deletedProp = await Props.findByIdAndDelete(propsId);\r\n        if (deletedProp) {\r\n            res.status(200).json({ messsage: 'Accesorio Eliminado' });\r\n        } else {\r\n            res.status(401).json({ messsage: 'Accesorio no Existe' });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n        res.status(401).json({ messsage: 'No se puede ejecutar la consulta' });\r\n    }\r\n}"],"file":"props.controller.js"}