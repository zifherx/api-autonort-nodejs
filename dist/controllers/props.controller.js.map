{"version":3,"sources":["../../src/controllers/props.controller.js"],"names":["createProp","req","res","body","name","forCar","stock","precio","status","empleado","newProp","Props","User","find","username","$in","foundEmployee","map","em","_id","save","propSaved","json","message","console","log","getAll","sort","names","props","length","getAccesoriosActivos","activos","getAccesorioById","propsId","params","findById","messsage","getAccesorioByAuto","modelo","foundProp","updatePropById","findByIdAndUpdate","updateProp","deletePropById","findByIdAndDelete","deletedProp"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEO,IAAMA,UAAU;AAAA,qFAAG,iBAAMC,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACoCD,GAAG,CAACE,IADxC,EACdC,IADc,aACdA,IADc,EACRC,MADQ,aACRA,MADQ,EACAC,KADA,aACAA,KADA,EACOC,MADP,aACOA,MADP,EACeC,MADf,aACeA,MADf,EACuBC,QADvB,aACuBA,QADvB;AAAA;AAGZC,YAAAA,OAHY,GAGF,IAAIC,cAAJ,CAAU;AAAEP,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,MAAM,EAANA,MAAR;AAAgBC,cAAAA,KAAK,EAALA,KAAhB;AAAuBC,cAAAA,MAAM,EAANA,MAAvB;AAA+BC,cAAAA,MAAM,EAANA;AAA/B,aAAV,CAHE;AAAA;AAAA,mBAKUI,cAAKC,IAAL,CAAU;AAAEC,cAAAA,QAAQ,EAAE;AAAEC,gBAAAA,GAAG,EAAEN;AAAP;AAAZ,aAAV,CALV;;AAAA;AAKZO,YAAAA,aALY;AAMlBN,YAAAA,OAAO,CAACD,QAAR,GAAmBO,aAAa,CAACC,GAAd,CAAkB,UAAAC,EAAE;AAAA,qBAAIA,EAAE,CAACC,GAAP;AAAA,aAApB,CAAnB;AANkB;AAAA,mBAQMT,OAAO,CAACU,IAAR,EARN;;AAAA;AAQZC,YAAAA,SARY;;AASlB,gBAAIA,SAAJ,EAAe;AACXnB,cAAAA,GAAG,CAACoB,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACH;;AAXiB;AAAA;;AAAA;AAAA;AAAA;AAalBC,YAAAA,OAAO,CAACC,GAAR;AACAvB,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,YAAIA;AAAf,aAArB;;AAdkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVvB,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AAkBA,IAAM0B,MAAM;AAAA,sFAAG,kBAAMzB,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEMS,eAAME,IAAN,GAAac,IAAb,CAAkB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAAlB,CAFN;;AAAA;AAERC,YAAAA,KAFQ;;AAGd,gBAAIA,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AAClB5B,cAAAA,GAAG,CAACoB,IAAJ,CAASO,KAAT;AACH,aAFD,MAEO;AACH3B,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAArB;AACH;;AAPa;AAAA;;AAAA;AAAA;AAAA;AASdC,YAAAA,OAAO,CAACC,GAAR;AACAvB,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANG,MAAM;AAAA;AAAA;AAAA,GAAZ;;;;AAcA,IAAMK,oBAAoB;AAAA,sFAAG,kBAAM9B,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAENS,eAAME,IAAN,CAAW;AAAEL,cAAAA,MAAM,EAAE;AAAV,aAAX,EAAiCmB,IAAjC,CAAsC;AAAEvB,cAAAA,IAAI,EAAE;AAAR,aAAtC,CAFM;;AAAA;AAEtB4B,YAAAA,OAFsB;;AAAA,kBAGxBA,OAAO,CAACF,MAAR,GAAiB,CAHO;AAAA;AAAA;AAAA;;AAIxB5B,YAAAA,GAAG,CAACoB,IAAJ,CAASU,OAAT;AAJwB;AAAA;;AAAA;AAAA,8CAMjB9B,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAArB,CANiB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAS5BC,YAAAA,OAAO,CAACC,GAAR;AACAvB,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAV4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBQ,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;;;AAcA,IAAME,gBAAgB;AAAA,sFAAG,kBAAMhC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBgC,YAAAA,OADoB,GACRjC,GAAG,CAACkC,MADI,CACpBD,OADoB;AAAA;AAAA;AAAA,mBAGJvB,eAAMyB,QAAN,CAAeF,OAAf,CAHI;;AAAA;AAGlBL,YAAAA,KAHkB;;AAAA,iBAIpBA,KAJoB;AAAA;AAAA;AAAA;;AAKpB3B,YAAAA,GAAG,CAACoB,IAAJ,CAASO,KAAT;AALoB;AAAA;;AAAA;AAAA,8CAOb3B,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEe,cAAAA,QAAQ,EAAE;AAAZ,aAArB,CAPa;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUxBb,YAAAA,OAAO,CAACC,GAAR;AACAvB,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAXwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBU,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;;;AAeA,IAAMK,kBAAkB;AAAA,sFAAG,kBAAMrC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBqC,YAAAA,MADsB,GACXtC,GAAG,CAACE,IADO,CACtBoC,MADsB;AAAA;AAAA;AAAA,mBAGF5B,eAAME,IAAN,CAAW;AAAER,cAAAA,MAAM,EAAEkC;AAAV,aAAX,CAHE;;AAAA;AAGpBC,YAAAA,SAHoB;;AAK1B,gBAAIA,SAAJ,EAAe;AACXtC,cAAAA,GAAG,CAACoB,IAAJ,CAASkB,SAAT;AACH,aAFD,MAEO;AACHtC,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAArB;AACH;;AATyB;AAAA;;AAAA;AAAA;AAAA;AAW1BC,YAAAA,OAAO,CAACC,GAAR;AACAvB,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAZ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBe,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;;;AAgBA,IAAMG,cAAc;AAAA,sFAAG,kBAAMxC,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClBgC,YAAAA,OADkB,GACNjC,GAAG,CAACkC,MADE,CAClBD,OADkB;AAAA,yBAEsBjC,GAAG,CAACE,IAF1B,EAElBC,IAFkB,cAElBA,IAFkB,EAEZC,MAFY,cAEZA,MAFY,EAEJC,KAFI,cAEJA,KAFI,EAEGC,MAFH,cAEGA,MAFH,EAEWC,MAFX,cAEWA,MAFX;AAAA;AAAA;AAAA,mBAOGG,eAAM+B,iBAAN,CAAwBR,OAAxB,EAAiC;AAAE9B,cAAAA,IAAI,EAAJA,IAAF;AAAQC,cAAAA,MAAM,EAANA,MAAR;AAAgBC,cAAAA,KAAK,EAALA,KAAhB;AAAuBC,cAAAA,MAAM,EAANA,MAAvB;AAA+BC,cAAAA,MAAM,EAANA;AAA/B,aAAjC,CAPH;;AAAA;AAOhBmC,YAAAA,UAPgB;;AAAA,iBAQlBA,UARkB;AAAA;AAAA;AAAA;;AASlBzC,YAAAA,GAAG,CAACoB,IAAJ,CAAS;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAAT;AATkB;AAAA;;AAAA;AAAA,8CAWXrB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEe,cAAAA,QAAQ,EAAE;AAAZ,aAArB,CAXW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AActBb,YAAAA,OAAO,CAACC,GAAR;AACAvB,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAfsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdkB,cAAc;AAAA;AAAA;AAAA,GAApB;;;;AAmBA,IAAMG,cAAc;AAAA,sFAAG,kBAAM3C,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAClBgC,YAAAA,OADkB,GACNjC,GAAG,CAACkC,MADE,CAClBD,OADkB;AAAA;AAAA;AAAA,mBAGIvB,eAAMkC,iBAAN,CAAwBX,OAAxB,CAHJ;;AAAA;AAGhBY,YAAAA,WAHgB;;AAItB,gBAAIA,WAAJ,EAAiB;AACb5C,cAAAA,GAAG,CAACoB,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACH,aAFD,MAEO;AACHrB,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEe,gBAAAA,QAAQ,EAAE;AAAZ,eAArB;AACH;;AARqB;AAAA;;AAAA;AAAA;AAAA;AAUtBb,YAAAA,OAAO,CAACC,GAAR;AACAvB,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBc,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAXsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdqB,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import Props from '../models/Props'\r\nimport User from '../models/User'\r\n\r\nexport const createProp = async(req, res) => {\r\n    const { name, forCar, stock, precio, status, empleado } = req.body;\r\n    try {\r\n        const newProp = new Props({ name, forCar, stock, precio, status });\r\n\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newProp.empleado = foundEmployee.map(em => em._id);\r\n\r\n        const propSaved = await newProp.save();\r\n        if (propSaved) {\r\n            res.json({ message: 'Accesorio creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const props = await Props.find().sort({ names: 'asc' });\r\n        if (props.length > 0) {\r\n            res.json(props);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Accesorios' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAccesoriosActivos = async(req, res) => {\r\n    try {\r\n        const activos = await Props.find({ status: 'Activo' }).sort({ name: 'asc' });\r\n        if (activos.length > 0) {\r\n            res.json(activos);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Accesorios Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAccesorioById = async(req, res) => {\r\n    const { propsId } = req.params;\r\n    try {\r\n        const props = await Props.findById(propsId);\r\n        if (props) {\r\n            res.json(props);\r\n        } else {\r\n            return res.status(404).json({ messsage: 'No existe Accesorio' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAccesorioByAuto = async(req, res) => {\r\n    const { modelo } = req.body;\r\n    try {\r\n        const foundProp = await Props.find({ forCar: modelo });\r\n\r\n        if (foundProp) {\r\n            res.json(foundProp);\r\n        } else {\r\n            res.status(404).json({ message: 'No existe el accesorio' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updatePropById = async(req, res) => {\r\n    const { propsId } = req.params;\r\n    const { name, forCar, stock, precio, status } = req.body;\r\n\r\n    try {\r\n        //const foundAuto = await Vehicle.find({ cod_tdp: { $in: auto } });\r\n\r\n        const updateProp = await Props.findByIdAndUpdate(propsId, { name, forCar, stock, precio, status });\r\n        if (updateProp) {\r\n            res.json({ message: 'Accesorio actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ messsage: 'No existe Accesorio a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deletePropById = async(req, res) => {\r\n    const { propsId } = req.params;\r\n    try {\r\n        const deletedProp = await Props.findByIdAndDelete(propsId);\r\n        if (deletedProp) {\r\n            res.json({ message: 'Accesorio eliminado con éxito' });\r\n        } else {\r\n            res.status(404).json({ messsage: 'No existe Accesorio a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"props.controller.js"}