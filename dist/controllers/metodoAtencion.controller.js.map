{"version":3,"sources":["../../src/controllers/metodoAtencion.controller.js"],"names":["metodoController","getAll","req","res","MetodoAtencion","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","metodoId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import MetodoAtencion from \"../models/MetodoAtencion\";\r\n\r\nconst metodoController = {};\r\n\r\nmetodoController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await MetodoAtencion.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen métodos de atención' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmetodoController.getOneById = async(req, res) => {\r\n    const { metodoId } = req.params;\r\n    try {\r\n        const query = await MetodoAtencion.findById(metodoId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe método de atención' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmetodoController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await MetodoAtencion.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen MetodoAtencions activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nmetodoController.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const obj = new MetodoAtencion({ name, estado });\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Método de atención creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmetodoController.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { metodoId } = req.params;\r\n    try {\r\n        const query = await MetodoAtencion.findByIdAndUpdate(metodoId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Método de atención actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe método de atención a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nmetodoController.deleteOneById = async(req, res) => {\r\n    const { metodoId } = req.params;\r\n    try {\r\n        const query = await MetodoAtencion.findByIdAndDelete(metodoId);\r\n        if (query) {\r\n            res.json({ message: 'Método de atencion eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe método de atención a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default metodoController;"],"file":"metodoAtencion.controller.js"}