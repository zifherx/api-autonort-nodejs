{"version":3,"file":"statusEntrega.controller.js","names":["statusCtrl","getAll","req","res","StatusEntrega","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","statusId","params","findById","one","getAllActivos","estado","value","total_active","all_active","createOne","body","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/statusEntrega.controller.js"],"sourcesContent":["import StatusEntrega from \"../models/StatusEntrega\";\r\n\r\nconst statusCtrl = {};\r\n\r\nstatusCtrl.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await StatusEntrega.find().sort({ name: 1 });\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total: query.length, all: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen estados de entrega\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nstatusCtrl.getOneById = async (req, res) => {\r\n\tconst { statusId } = req.params;\r\n\ttry {\r\n\t\tconst query = await StatusEntrega.findById(statusId);\r\n\t\tif (query) {\r\n\t\t\tres.json({ one: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe estado de entrega\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nstatusCtrl.getAllActivos = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await StatusEntrega.find({ estado: true }).sort({ value: 1 });\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total_active: query.length, all_active: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen estados de entrega activos\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nstatusCtrl.createOne = async (req, res) => {\r\n\tconst { name, value, estado } = req.body;\r\n\ttry {\r\n\t\tconst obj = new StatusEntrega({ name, value, estado });\r\n\r\n\t\tconst query = await obj.save();\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Estado de entrega creado con éxito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nstatusCtrl.updateOneById = async (req, res) => {\r\n\tconst { name, value, estado } = req.body;\r\n\tconst { statusId } = req.params;\r\n\ttry {\r\n\t\tconst query = await StatusEntrega.findByIdAndUpdate(statusId, { name, value, estado });\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Estado de entrega actualizado con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe estado de entrega a actualizar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nstatusCtrl.deleteOneById = async (req, res) => {\r\n\tconst { statusId } = req.params;\r\n\ttry {\r\n\t\tconst query = await StatusEntrega.findByIdAndDelete(statusId);\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Estado de entrega eliminado con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe estado de entrega a eliminar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default statusCtrl;\r\n"],"mappings":"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"}