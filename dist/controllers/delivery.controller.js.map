{"version":3,"file":"delivery.controller.js","names":["createDelivery","req","res","body","tramite","fecha_entrega_cliente","hora_entrega_cliente","status","empleado","nuevoRegistro","Delivery","Customer","find","name","$in","cliente","cod_cliente","map","a","_id","Sale","expediente","cod_expediente","b","Record","sales","inmatriculado","c","User","username","foundEmployee","em","cod_tramite","findByIdAndUpdate","pasoaEntrega","new","save","registroGuardado","json","message","console","log","getAll","filtro1","path","populate","query","length","getDeliveryById","deliveryId","params","findById","updateDeliveryById","x","objActualizado","deleteDeliveryById","findByIdAndDelete","objeto"],"sources":["../../src/controllers/delivery.controller.js"],"sourcesContent":["import Customer from \"../models/Customer\";\r\nimport Delivery from \"../models/Delivery\";\r\nimport Record from \"../models/Record\";\r\nimport Sale from \"../models/Sale\";\r\nimport User from \"../models/User\";\r\n\r\nexport const createDelivery = async (req, res) => {\r\n  const { tramite, fecha_entrega_cliente, hora_entrega_cliente, status,empleado } = req.body;\r\n\r\n  try {\r\n    const nuevoRegistro = new Delivery({\r\n      tramite,\r\n      fecha_entrega_cliente,\r\n      hora_entrega_cliente,\r\n      status,\r\n    });\r\n    //Cliente\r\n    const cliente = await Customer.find({ name: { $in: tramite } });\r\n    const cod_cliente = cliente.map((a) => a._id);\r\n    //Sale\r\n    const expediente = await Sale.find({ cliente: cod_cliente });\r\n    const cod_expediente = expediente.map((b) => b._id);\r\n    //Record\r\n    const inmatriculado = await Record.find({ sales: cod_expediente });\r\n    nuevoRegistro.tramite = inmatriculado.map((c) => c._id);\r\n\r\n    //Empleado\r\n    const foundEmployee = await User.find({ username: { $in: empleado } });\r\n    nuevoRegistro.empleado = foundEmployee.map(em => em._id);\r\n\r\n    //Cambio de filtro al Expediente\r\n    const cod_tramite = inmatriculado[0]._id;\r\n    const a = await Record.findByIdAndUpdate(cod_tramite, {pasoaEntrega: 1}, {new: true})\r\n    /* console.log(cod_tramite);\r\n    console.log(a); */\r\n\r\n    const registroGuardado = await nuevoRegistro.save();\r\n\r\n    if (registroGuardado) {\r\n      res.json({ message: \"Entrega creada con éxito\" });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const getAll = async (req, res) => {\r\n  const filtro1 = {\r\n    path: \"tramite\",\r\n    populate: { path: \"sales\", populate: \"auto cliente vendedor empleado\" },\r\n  };\r\n  try {\r\n    const query = await Delivery.find().populate(filtro1).populate('empleado');\r\n    if (query.length > 0) {\r\n      res.json(query);\r\n    } else {\r\n      return res.status(404).json({ message: \"No existen Entregas\" });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const getDeliveryById = async (req, res) => {\r\n  const { deliveryId } = req.params;\r\n  const filtro1 = {\r\n    path: \"tramite\",\r\n    populate: { path: \"sales\", populate: \"auto cliente vendedor empleado\" },\r\n  };\r\n\r\n  try {\r\n    const query = await Delivery.findById(deliveryId).populate(filtro1).populate('empleado');\r\n    if (query) {\r\n      res.json(query);\r\n    } else {\r\n      return res.status(404).json({ message: \"No existe el Expediente\" });\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const updateDeliveryById = async (req, res) => {\r\n  const { deliveryId } = req.params;\r\n  const { tramite, fecha_entrega_cliente, hora_entrega_cliente, status } = req.body;\r\n\r\n  try {\r\n    //Cliente\r\n    const cliente = await Customer.find({ name: { $in: tramite } });\r\n    const cod_cliente = cliente.map((a) => a._id);\r\n    //Sale\r\n    const expediente = await Sale.find({ cliente: cod_cliente });\r\n    const cod_expediente = expediente.map((b) => b._id);\r\n    //Record\r\n    const inmatriculado = await Record.find({ sales: cod_expediente });\r\n\r\n    if(cliente <= 0){\r\n      return res.status(404).json({message: 'Cliente ingresado no existe'});\r\n    }\r\n\r\n    if(expediente <= 0){\r\n      return res.status(404).json({message: 'Cliente ingresado no cuenta con expediente'});\r\n    }\r\n\r\n    if(inmatriculado <= 0){\r\n      return res.status(404).json({message: 'El expediente no se encuentra en trámites'});\r\n    }\r\n\r\n    const objActualizado = await Delivery.findByIdAndUpdate(deliveryId, {\r\n      tramite: inmatriculado.map((x) => x._id),\r\n      fecha_entrega_cliente,\r\n      hora_entrega_cliente,\r\n      status,\r\n    });\r\n\r\n    if(objActualizado){\r\n        res.json({message: 'Entrega actualizada con éxito'});\r\n    }else{\r\n        return res.status(404).json({message: 'No existe Expediente a Actualizar'})\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n\r\nexport const deleteDeliveryById = async (req, res) => {\r\n    const { deliveryId } = req.params;\r\n\r\n  try {\r\n\r\n    const objeto = await Delivery.findByIdAndDelete(deliveryId);\r\n\r\n    if(objeto){\r\n        res.json({message: 'Entrega eliminada con éxito'});\r\n    }else{\r\n        return res.status(404).json({message: 'No existe Expediente a Eliminar'})\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    res.status(409).json({ message: err.message });\r\n  }\r\n};\r\n"],"mappings":"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"}