{"version":3,"file":"area.controller.js","names":["areaCtrl","getAll","req","res","Area","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","areaId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","newArea","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/area.controller.js"],"sourcesContent":["import Area from \"../models/Area\";\r\n\r\nconst areaCtrl = {};\r\n\r\nareaCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Area.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Areas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nareaCtrl.getOneById = async(req, res) => {\r\n    const { areaId } = req.params;\r\n    try {\r\n        const query = await Area.findById(areaId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe area' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nareaCtrl.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Area.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen areas activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nareaCtrl.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const newArea = new Area({ name, estado });\r\n\r\n        const query = await newArea.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Area creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nareaCtrl.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { areaId } = req.params;\r\n    try {\r\n        const query = await Area.findByIdAndUpdate(areaId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Area actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe area a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nareaCtrl.deleteOneById = async(req, res) => {\r\n    const { areaId } = req.params;\r\n    try {\r\n        const query = await Area.findByIdAndDelete(areaId);\r\n        if (query) {\r\n            res.json({ message: 'Area eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe area a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default areaCtrl;"],"mappings":"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"}