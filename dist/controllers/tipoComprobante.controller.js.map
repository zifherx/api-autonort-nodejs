{"version":3,"sources":["../../src/controllers/tipoComprobante.controller.js"],"names":["comprobanteController","getAll","req","res","TipoComprobante","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","comprobanteId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA,IAAMA,qBAAqB,GAAG,EAA9B;;AAEAA,qBAAqB,CAACC,MAAtB;AAAA,qFAA+B,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHC,yBAAgBC,IAAhB,GAAuBC,IAAvB,CAA4B;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAA5B,CAFG;;AAAA;AAEjBC,YAAAA,KAFiB;;AAAA,kBAGnBA,KAAK,CAACC,MAAN,GAAe,CAHI;AAAA;AAAA;AAAA;;AAInBN,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAACC,cAAAA,KAAK,EAAEH,KAAK,CAACC,MAAd;AAAsBG,cAAAA,GAAG,EAAEJ;AAA3B,aAAT;AAJmB;AAAA;;AAAA;AAAA,6CAMZL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CANY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASvBC,YAAAA,OAAO,CAACC,GAAR;AATuB,6CAUhBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,YAAIA;AAAf,aAArB,CAVgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAcAd,qBAAqB,CAACiB,UAAtB;AAAA,sFAAmC,kBAAMf,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBe,YAAAA,aADuB,GACLhB,GAAG,CAACiB,MADC,CACvBD,aADuB;AAAA;AAAA;AAAA,mBAGPd,yBAAgBgB,QAAhB,CAAyBF,aAAzB,CAHO;;AAAA;AAGrBV,YAAAA,KAHqB;;AAAA,iBAIvBA,KAJuB;AAAA;AAAA;AAAA;;AAKvBL,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAACW,cAAAA,GAAG,EAAEb;AAAN,aAAT;AALuB;AAAA;;AAAA;AAAA,8CAOhBL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CAPgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAU3BC,YAAAA,OAAO,CAACC,GAAR;AAV2B,8CAWpBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAXoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAeAd,qBAAqB,CAACsB,aAAtB;AAAA,sFAAsC,kBAAMpB,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEVC,yBAAgBC,IAAhB,CAAqB;AAAEkB,cAAAA,MAAM,EAAE;AAAV,aAArB,EAAuCjB,IAAvC,CAA4C;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAA5C,CAFU;;AAAA;AAExBC,YAAAA,KAFwB;;AAAA,kBAG1BA,KAAK,CAACC,MAAN,GAAe,CAHW;AAAA;AAAA;AAAA;;AAI1BN,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAACc,cAAAA,YAAY,EAAEhB,KAAK,CAACC,MAArB;AAA6BgB,cAAAA,UAAU,EAAEjB;AAAzC,aAAT;AAJ0B;AAAA;;AAAA;AAAA,8CAMnBL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CANmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAS9BC,YAAAA,OAAO,CAACC,GAAR;AAT8B,8CAUvBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAVuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAcAd,qBAAqB,CAAC0B,SAAtB;AAAA,sFAAkC,kBAAMxB,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACLD,GAAG,CAACyB,IADC,EACtBpB,IADsB,aACtBA,IADsB,EAChBgB,MADgB,aAChBA,MADgB;AAAA;AAGpBK,YAAAA,GAHoB,GAGd,IAAIxB,wBAAJ,CAAoB;AAAEG,cAAAA,IAAI,EAAJA,IAAF;AAAQgB,cAAAA,MAAM,EAANA;AAAR,aAApB,CAHc;AAAA;AAAA,mBAKNK,GAAG,CAACC,IAAJ,EALM;;AAAA;AAKpBrB,YAAAA,KALoB;;AAO1B,gBAAIA,KAAJ,EAAW;AACPL,cAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEI,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACH;;AATyB;AAAA;;AAAA;AAAA;AAAA;AAW1BC,YAAAA,OAAO,CAACC,GAAR;AAX0B,8CAYnBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAZmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA;;AAgBAd,qBAAqB,CAAC8B,aAAtB;AAAA,sFAAsC,kBAAM5B,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACTD,GAAG,CAACyB,IADK,EAC1BpB,IAD0B,cAC1BA,IAD0B,EACpBgB,MADoB,cACpBA,MADoB;AAE1BL,YAAAA,aAF0B,GAERhB,GAAG,CAACiB,MAFI,CAE1BD,aAF0B;AAAA;AAAA;AAAA,mBAIVd,yBAAgB2B,iBAAhB,CAAkCb,aAAlC,EAAiD;AAAEX,cAAAA,IAAI,EAAJA,IAAF;AAAQgB,cAAAA,MAAM,EAANA;AAAR,aAAjD,CAJU;;AAAA;AAIxBf,YAAAA,KAJwB;;AAAA,iBAM1BA,KAN0B;AAAA;AAAA;AAAA;;AAO1BL,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAT;AAP0B;AAAA;;AAAA;AAAA,8CASnBX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CATmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAY9BC,YAAAA,OAAO,CAACC,GAAR;AAZ8B,8CAavBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAbuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAiBAd,qBAAqB,CAACgC,aAAtB;AAAA,sFAAsC,kBAAM9B,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1Be,YAAAA,aAD0B,GACRhB,GAAG,CAACiB,MADI,CAC1BD,aAD0B;AAAA;AAAA;AAAA,mBAGVd,yBAAgB6B,iBAAhB,CAAkCf,aAAlC,CAHU;;AAAA;AAGxBV,YAAAA,KAHwB;;AAAA,iBAI1BA,KAJ0B;AAAA;AAAA;AAAA;;AAK1BL,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAAT;AAL0B;AAAA;;AAAA;AAAA,8CAOnBX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAArB,CAPmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAU9BC,YAAAA,OAAO,CAACC,GAAR;AAV8B,8CAWvBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AAAEI,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAXuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;eAeed,qB","sourcesContent":["import TipoComprobante from \"../models/TipoComprobante\";\r\n\r\nconst comprobanteController = {};\r\n\r\ncomprobanteController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await TipoComprobante.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Comprobantes' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncomprobanteController.getOneById = async(req, res) => {\r\n    const { comprobanteId } = req.params;\r\n    try {\r\n        const query = await TipoComprobante.findById(comprobanteId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Comprobante' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncomprobanteController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await TipoComprobante.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen comprobantes activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\ncomprobanteController.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const obj = new TipoComprobante({ name, estado });\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Comprobante creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncomprobanteController.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { comprobanteId } = req.params;\r\n    try {\r\n        const query = await TipoComprobante.findByIdAndUpdate(comprobanteId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Comprobante actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe comprobante a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncomprobanteController.deleteOneById = async(req, res) => {\r\n    const { comprobanteId } = req.params;\r\n    try {\r\n        const query = await TipoComprobante.findByIdAndDelete(comprobanteId);\r\n        if (query) {\r\n            res.json({ message: 'Comprobante eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe comprobante a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default comprobanteController;"],"file":"tipoComprobante.controller.js"}