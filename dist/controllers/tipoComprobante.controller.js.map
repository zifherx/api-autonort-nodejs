{"version":3,"file":"tipoComprobante.controller.js","names":["comprobanteController","getAll","req","res","TipoComprobante","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","comprobanteId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/tipoComprobante.controller.js"],"sourcesContent":["import TipoComprobante from \"../models/TipoComprobante\";\r\n\r\nconst comprobanteController = {};\r\n\r\ncomprobanteController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await TipoComprobante.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Comprobantes' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncomprobanteController.getOneById = async(req, res) => {\r\n    const { comprobanteId } = req.params;\r\n    try {\r\n        const query = await TipoComprobante.findById(comprobanteId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Comprobante' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncomprobanteController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await TipoComprobante.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen comprobantes activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\ncomprobanteController.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const obj = new TipoComprobante({ name, estado });\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Comprobante creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncomprobanteController.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { comprobanteId } = req.params;\r\n    try {\r\n        const query = await TipoComprobante.findByIdAndUpdate(comprobanteId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Comprobante actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe comprobante a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ncomprobanteController.deleteOneById = async(req, res) => {\r\n    const { comprobanteId } = req.params;\r\n    try {\r\n        const query = await TipoComprobante.findByIdAndDelete(comprobanteId);\r\n        if (query) {\r\n            res.json({ message: 'Comprobante eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe comprobante a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default comprobanteController;"],"mappings":";;;;;;;;;;;;;AAAA;;+CACA,oJ;;AACA,IAAMA,qBAAqB,GAAG,EAA9B;;AAEAA,qBAAqB,CAACC,MAAtB;EAAA,oFAA+B,iBAAMC,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEHC,wBAAA,CAAgBC,IAAhB,GAAuBC,IAAvB,CAA4B;cAAEC,IAAI,EAAE;YAAR,CAA5B,CAFG;;UAAA;YAEjBC,KAFiB;;YAAA,MAGnBA,KAAK,CAACC,MAAN,GAAe,CAHI;cAAA;cAAA;YAAA;;YAInBN,GAAG,CAACO,IAAJ,CAAS;cAACC,KAAK,EAAEH,KAAK,CAACC,MAAd;cAAsBG,GAAG,EAAEJ;YAA3B,CAAT;YAJmB;YAAA;;UAAA;YAAA,iCAMZL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CANY;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YASvBC,OAAO,CAACC,GAAR;YATuB,iCAUhBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,YAAIA;YAAf,CAArB,CAVgB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA/B;;EAAA;IAAA;EAAA;AAAA;;AAcAd,qBAAqB,CAACiB,UAAtB;EAAA,qFAAmC,kBAAMf,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YACvBe,aADuB,GACLhB,GAAG,CAACiB,MADC,CACvBD,aADuB;YAAA;YAAA;YAAA,OAGPd,wBAAA,CAAgBgB,QAAhB,CAAyBF,aAAzB,CAHO;;UAAA;YAGrBV,KAHqB;;YAAA,KAIvBA,KAJuB;cAAA;cAAA;YAAA;;YAKvBL,GAAG,CAACO,IAAJ,CAAS;cAACW,GAAG,EAAEb;YAAN,CAAT;YALuB;YAAA;;UAAA;YAAA,kCAOhBL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAPgB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAU3BC,OAAO,CAACC,GAAR;YAV2B,kCAWpBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAXoB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAnC;;EAAA;IAAA;EAAA;AAAA;;AAeAd,qBAAqB,CAACsB,aAAtB;EAAA,qFAAsC,kBAAMpB,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEVC,wBAAA,CAAgBC,IAAhB,CAAqB;cAAEkB,MAAM,EAAE;YAAV,CAArB,EAAuCjB,IAAvC,CAA4C;cAAEC,IAAI,EAAE;YAAR,CAA5C,CAFU;;UAAA;YAExBC,KAFwB;;YAAA,MAG1BA,KAAK,CAACC,MAAN,GAAe,CAHW;cAAA;cAAA;YAAA;;YAI1BN,GAAG,CAACO,IAAJ,CAAS;cAACc,YAAY,EAAEhB,KAAK,CAACC,MAArB;cAA6BgB,UAAU,EAAEjB;YAAzC,CAAT;YAJ0B;YAAA;;UAAA;YAAA,kCAMnBL,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CANmB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAS9BC,OAAO,CAACC,GAAR;YAT8B,kCAUvBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAVuB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAtC;;EAAA;IAAA;EAAA;AAAA;;AAcAd,qBAAqB,CAAC0B,SAAtB;EAAA,qFAAkC,kBAAMxB,GAAN,EAAWC,GAAX;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,YACLD,GAAG,CAACyB,IADC,EACtBpB,IADsB,aACtBA,IADsB,EAChBgB,MADgB,aAChBA,MADgB;YAAA;YAGpBK,GAHoB,GAGd,IAAIxB,wBAAJ,CAAoB;cAAEG,IAAI,EAAJA,IAAF;cAAQgB,MAAM,EAANA;YAAR,CAApB,CAHc;YAAA;YAAA,OAKNK,GAAG,CAACC,IAAJ,EALM;;UAAA;YAKpBrB,KALoB;;YAO1B,IAAIA,KAAJ,EAAW;cACPL,GAAG,CAACO,IAAJ,CAAS;gBAAEI,OAAO,EAAE;cAAX,CAAT;YACH;;YATyB;YAAA;;UAAA;YAAA;YAAA;YAW1BC,OAAO,CAACC,GAAR;YAX0B,kCAYnBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAZmB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlC;;EAAA;IAAA;EAAA;AAAA;;AAgBAd,qBAAqB,CAAC8B,aAAtB;EAAA,qFAAsC,kBAAM5B,GAAN,EAAWC,GAAX;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,aACTD,GAAG,CAACyB,IADK,EAC1BpB,IAD0B,cAC1BA,IAD0B,EACpBgB,MADoB,cACpBA,MADoB;YAE1BL,aAF0B,GAERhB,GAAG,CAACiB,MAFI,CAE1BD,aAF0B;YAAA;YAAA;YAAA,OAIVd,wBAAA,CAAgB2B,iBAAhB,CAAkCb,aAAlC,EAAiD;cAAEX,IAAI,EAAJA,IAAF;cAAQgB,MAAM,EAANA;YAAR,CAAjD,CAJU;;UAAA;YAIxBf,KAJwB;;YAAA,KAM1BA,KAN0B;cAAA;cAAA;YAAA;;YAO1BL,GAAG,CAACO,IAAJ,CAAS;cAAEI,OAAO,EAAE;YAAX,CAAT;YAP0B;YAAA;;UAAA;YAAA,kCASnBX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CATmB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAY9BC,OAAO,CAACC,GAAR;YAZ8B,kCAavBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAbuB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAtC;;EAAA;IAAA;EAAA;AAAA;;AAiBAd,qBAAqB,CAACgC,aAAtB;EAAA,qFAAsC,kBAAM9B,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAC1Be,aAD0B,GACRhB,GAAG,CAACiB,MADI,CAC1BD,aAD0B;YAAA;YAAA;YAAA,OAGVd,wBAAA,CAAgB6B,iBAAhB,CAAkCf,aAAlC,CAHU;;UAAA;YAGxBV,KAHwB;;YAAA,KAI1BA,KAJ0B;cAAA;cAAA;YAAA;;YAK1BL,GAAG,CAACO,IAAJ,CAAS;cAAEI,OAAO,EAAE;YAAX,CAAT;YAL0B;YAAA;;UAAA;YAAA,kCAOnBX,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAPmB;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAU9BC,OAAO,CAACC,GAAR;YAV8B,kCAWvBb,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAXuB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAtC;;EAAA;IAAA;EAAA;AAAA;;eAeed,qB"}