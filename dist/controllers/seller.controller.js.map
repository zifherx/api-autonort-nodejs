{"version":3,"sources":["../../src/controllers/seller.controller.js"],"names":["sellerController","getAll","req","res","Seller","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getAllActive","estado","total_active","all_active","getSellerById","sellerId","params","findById","one","getSellerBySucursal","sucursal","body","Sucursal","findOne","sucursalFound","sucursalE","_id","getSellerByMarcaAndSucursal","marca","estatus","error","getSellerByName","createSeller","document","telefono","email","marcaE","createdBy","obj","User","username","foundEmployee","MarcaTasaciones","marcaFound","save","updateSellerById","avatar","file","undefined","findByIdAndUpdate","location","deleteSellerById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Seller from '../models/Seller';\r\nimport User from '../models/User';\r\nimport Sucursal from '../models/Sucursal';\r\nimport MarcaTasaciones from '../models/MarcaTasaciones';\r\n\r\nconst sellerController = {};\r\n\r\nsellerController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Seller.find()\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        })\r\n        .populate({\r\n            path: 'marcaE',\r\n            select: 'name avatar'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Vendedores' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsellerController.getAllActive = async(req, res) => {\r\n    try {\r\n        const query = await Seller.find({estado: true})\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        })\r\n        .populate({\r\n            path: 'marcaE',\r\n            select: 'name avatar'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Vendedores' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsellerController.getSellerById = async(req, res) => {\r\n    const { sellerId } = req.params;\r\n    try {\r\n        const query = await Seller.findById(sellerId)\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        })\r\n        .populate({\r\n            path: 'marcaE',\r\n            select: 'name avatar'\r\n        });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Vendedor' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n\r\n}\r\n\r\nsellerController.getSellerBySucursal = async(req, res) => {\r\n    const { sucursal } = req.body;\r\n    try {\r\n        const sucursalFound = await Sucursal.findOne({name: sucursal});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursal} no encontrada`})\r\n\r\n        const query = await Seller.find({ \r\n            sucursalE: sucursalFound._id,\r\n            estado: true })\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        })\r\n        .populate({\r\n            path: 'marcaE',\r\n            select: 'name avatar'\r\n        })\r\n        .populate({\r\n            path: 'createdBy',\r\n            select: 'name'\r\n        })\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: `No existen Vendedores en ${sucursal}` });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nsellerController.getSellerByMarcaAndSucursal = async(req, res) => {\r\n    const { sucursal, marca } = req.body;\r\n    try {\r\n        const query = await Seller.find({ sucursal: sucursal, marca: marca, estatus: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: `No existen vendedores en ${sucursal}` });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nsellerController.getSellerByName = async(req, res) => {\r\n    const { name } = req.body;\r\n    try {\r\n        const query = await Seller.findOne({ name: name });\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Vendedores con este Nombre' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nsellerController.createSeller = async(req, res) => {\r\n    const { name, document, telefono, email,sucursalE, marcaE, estado, createdBy } = req.body;\r\n\r\n    try {\r\n        const obj = new Seller({\r\n            name,\r\n            document,\r\n            telefono,\r\n            email,\r\n            estado\r\n        });\r\n\r\n        const foundEmployee = await User.findOne({ username: createdBy });\r\n        if(!foundEmployee) return res.status(404).json({message: `Colaborador ${createdBy} no encontrado`});\r\n        obj.createdBy = foundEmployee._id;\r\n\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n        obj.sucursalE = sucursalFound._id;\r\n\r\n        const marcaFound = await MarcaTasaciones.findOne({ name: marcaE });\r\n        if(!marcaFound) return res.status(404).json({message: `Marca ${marcaE} no encontrada`});\r\n        obj.marcaE = marcaFound._id;\r\n\r\n        const query = await obj.save();\r\n        if (query) {\r\n            res.json({ message: 'Vendedor creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsellerController.updateSellerById = async(req, res) => {\r\n    const { sellerId } = req.params;\r\n    const { name, document, telefono, email, sucursalE, marcaE , estado } = req.body;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n        let query = null;\r\n\r\n        const sucursalFound = await Sucursal.findOne({ name: sucursalE });\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        const marcaFound = await MarcaTasaciones.findOne({ name: marcaE });\r\n        if(!marcaFound) return res.status(404).json({message: `Marca ${marcaE} no encontrada`});\r\n\r\n        if(avatar == null || avatar == undefined){\r\n            query = await Seller.findByIdAndUpdate(sellerId, {\r\n                name,\r\n                document,\r\n                telefono,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                marcaE: marcaFound._id,\r\n                estado \r\n            });\r\n        }else{\r\n            query = await Seller.findByIdAndUpdate(sellerId, {\r\n                name,\r\n                document,\r\n                telefono,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                marcaE: marcaFound._id,\r\n                avatar: avatar.location,\r\n                estado \r\n            });\r\n        }\r\n        if (query) {\r\n            res.json({ message: 'Vendedor actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Vendedor a actualizar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsellerController.deleteSellerById = async(req, res) => {\r\n    const { sellerId } = req.params;\r\n    try {\r\n        const query = await Seller.findByIdAndDelete(sellerId);\r\n        if (query) {\r\n            res.json({ message: 'Vendedor eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Vendedor a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default sellerController;"],"file":"seller.controller.js"}