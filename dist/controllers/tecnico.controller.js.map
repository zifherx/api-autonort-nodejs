{"version":3,"sources":["../../src/controllers/tecnico.controller.js"],"names":["tecnicoCtrl","getAll","req","res","Tecnico","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","tecnicoId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","document","cellphone","email","sucursalE","objeto","Sucursal","findOne","sucursalFound","_id","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Sucursal from \"../models/Sucursal\";\r\nimport Tecnico from \"../models/Tecnico\";\r\n\r\nconst tecnicoCtrl = {};\r\n\r\ntecnicoCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Tecnico.find().sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Técnicos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.getOneById = async(req, res) => {\r\n    const { tecnicoId } = req.params;\r\n    try {\r\n        const query = await Tecnico.findById(tecnicoId)\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Técnico' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Tecnico.find({ estado: true }).sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Técnicos Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.createOne = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursalE, estado } = req.body;\r\n\r\n    try {\r\n        const objeto = new Tecnico({ name, document, cellphone, email, estado });\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        objeto.sucursalE = sucursalFound._id;\r\n\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Técnico creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.updateOneById = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursalE, estado } = req.body;\r\n    const { tecnicoId } = req.params;\r\n\r\n    try {\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        const query = await Tecnico.findByIdAndUpdate(tecnicoId, { \r\n            name,\r\n            document,\r\n            cellphone,\r\n            email,\r\n            sucursalE: sucursalFound._id,\r\n            estado \r\n        });\r\n        if (query) {\r\n            res.json({ message: 'Técnico actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Técnico a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.deleteOneById = async(req, res) => {\r\n    const { tecnicoId } = req.params;\r\n    try {\r\n        const query = await Tecnico.findByIdAndDelete(tecnicoId);\r\n        if (query) {\r\n            res.json({ message: 'Técnico eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Técnico a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default tecnicoCtrl;"],"file":"tecnico.controller.js"}