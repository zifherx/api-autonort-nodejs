{"version":3,"sources":["../../src/controllers/tecnico.controller.js"],"names":["tecnicoCtrl","getAll","req","res","Tecnico","find","sort","name","query","length","json","status","message","console","log","getTecnicoById","tecnicoId","params","findById","getTecnicoByActivo","createTecnico","body","document","cellphone","email","sucursal","objeto","save","updateTecnico","findByIdAndUpdate","deleteTecnico","findByIdAndDelete","countAll","countDocuments","count","countByStatus","estado","getBySucursal","tecnicos"],"mappings":"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","sourcesContent":["import Tecnico from \"../models/Tecnico\";\r\n\r\nconst tecnicoCtrl = {};\r\n\r\ntecnicoCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Tecnico.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Técnicos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.getTecnicoById = async(req, res) => {\r\n    const { tecnicoId } = req.params;\r\n    try {\r\n        const query = await Tecnico.findById(tecnicoId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Técnico' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.getTecnicoByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Tecnico.find({ status: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Técnicos Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.createTecnico = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursal, status } = req.body;\r\n    try {\r\n        const objeto = new Tecnico({ name, document, cellphone, email, sucursal, status });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Técnico creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.updateTecnico = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursal, status } = req.body;\r\n    const { tecnicoId } = req.params;\r\n    try {\r\n        const query = await Tecnico.findByIdAndUpdate(tecnicoId, { name, document, cellphone, email, sucursal, status });\r\n        if (query) {\r\n            res.json({ message: 'Técnico actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe el Técnico a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.deleteTecnico = async(req, res) => {\r\n    const { tecnicoId } = req.params;\r\n    try {\r\n        const query = await Tecnico.findByIdAndDelete(tecnicoId);\r\n        if (query) {\r\n            res.json({ message: 'Técnico eliminado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe el Técnico a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.countAll = async(req, res) => {\r\n    try {\r\n        const query = await Tecnico.countDocuments();\r\n        if (query >= 0) return res.json({ count: query })\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.countByStatus = async(req, res) => {\r\n    const { estado } = req.body;\r\n    try {\r\n        const query = await Tecnico.find({ status: estado }).countDocuments();\r\n        if (query >= 0) return res.json({ count: query })\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.getBySucursal = async(req, res) => {\r\n    const { sucursal } = req.body;\r\n\r\n    try {\r\n        const query = await Tecnico.find({ sucursal, status: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({ count: query.length, tecnicos: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No Existen Técnicos en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default tecnicoCtrl;"],"file":"tecnico.controller.js"}