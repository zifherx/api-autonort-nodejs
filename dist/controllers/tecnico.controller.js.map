{"version":3,"file":"tecnico.controller.js","names":["tecnicoCtrl","getAll","req","res","Tecnico","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","tecnicoId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","document","cellphone","email","sucursalE","objeto","Sucursal","findOne","sucursalFound","_id","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/tecnico.controller.js"],"sourcesContent":["import Sucursal from \"../models/Sucursal\";\r\nimport Tecnico from \"../models/Tecnico\";\r\n\r\nconst tecnicoCtrl = {};\r\n\r\ntecnicoCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Tecnico.find().sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Técnicos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.getOneById = async(req, res) => {\r\n    const { tecnicoId } = req.params;\r\n    try {\r\n        const query = await Tecnico.findById(tecnicoId)\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Técnico' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Tecnico.find({ estado: true }).sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Técnicos Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.createOne = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursalE, estado } = req.body;\r\n\r\n    try {\r\n        const objeto = new Tecnico({ name, document, cellphone, email, estado });\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        objeto.sucursalE = sucursalFound._id;\r\n\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Técnico creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.updateOneById = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursalE, estado } = req.body;\r\n    const { tecnicoId } = req.params;\r\n\r\n    try {\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        const query = await Tecnico.findByIdAndUpdate(tecnicoId, { \r\n            name,\r\n            document,\r\n            cellphone,\r\n            email,\r\n            sucursalE: sucursalFound._id,\r\n            estado \r\n        });\r\n        if (query) {\r\n            res.json({ message: 'Técnico actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Técnico a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntecnicoCtrl.deleteOneById = async(req, res) => {\r\n    const { tecnicoId } = req.params;\r\n    try {\r\n        const query = await Tecnico.findByIdAndDelete(tecnicoId);\r\n        if (query) {\r\n            res.json({ message: 'Técnico eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Técnico a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default tecnicoCtrl;"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;+CAAA,oJ;;AAEA,IAAMA,WAAW,GAAG,EAApB;;AAEAA,WAAW,CAACC,MAAZ;EAAA,oFAAqB,iBAAMC,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEOC,gBAAA,CAAQC,IAAR,GAAeC,IAAf,CAAoB;cAAEC,IAAI,EAAE;YAAR,CAApB,EACnBC,QADmB,CACV;cACNC,IAAI,EAAE,WADA;cAENC,MAAM,EAAE;YAFF,CADU,CAFP;;UAAA;YAEPC,KAFO;;YAAA,MAQTA,KAAK,CAACC,MAAN,GAAe,CARN;cAAA;cAAA;YAAA;;YASTT,GAAG,CAACU,IAAJ,CAAS;cAACC,KAAK,EAAEH,KAAK,CAACC,MAAd;cAAsBG,GAAG,EAAEJ;YAA3B,CAAT;YATS;YAAA;;UAAA;YAAA,iCAWFR,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAXE;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAcbC,OAAO,CAACC,GAAR;YAda,iCAeNhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,YAAIA;YAAf,CAArB,CAfM;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAArB;;EAAA;IAAA;EAAA;AAAA;;AAmBAjB,WAAW,CAACoB,UAAZ;EAAA,qFAAyB,kBAAMlB,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YACbkB,SADa,GACCnB,GAAG,CAACoB,MADL,CACbD,SADa;YAAA;YAAA;YAAA,OAGGjB,gBAAA,CAAQmB,QAAR,CAAiBF,SAAjB,EACnBb,QADmB,CACV;cACNC,IAAI,EAAE,WADA;cAENC,MAAM,EAAE;YAFF,CADU,CAHH;;UAAA;YAGXC,KAHW;;YAAA,KASbA,KATa;cAAA;cAAA;YAAA;;YAUbR,GAAG,CAACU,IAAJ,CAAS;cAACW,GAAG,EAAEb;YAAN,CAAT;YAVa;YAAA;;UAAA;YAAA,kCAYNR,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAZM;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAejBC,OAAO,CAACC,GAAR;YAfiB,kCAgBVhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAhBU;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAzB;;EAAA;IAAA;EAAA;AAAA;;AAoBAjB,WAAW,CAACyB,aAAZ;EAAA,qFAA4B,kBAAMvB,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEAC,gBAAA,CAAQC,IAAR,CAAa;cAAEqB,MAAM,EAAE;YAAV,CAAb,EAA+BpB,IAA/B,CAAoC;cAAEC,IAAI,EAAE;YAAR,CAApC,EACnBC,QADmB,CACV;cACNC,IAAI,EAAE,WADA;cAENC,MAAM,EAAE;YAFF,CADU,CAFA;;UAAA;YAEdC,KAFc;;YAAA,MAQhBA,KAAK,CAACC,MAAN,GAAe,CARC;cAAA;cAAA;YAAA;;YAShBT,GAAG,CAACU,IAAJ,CAAS;cAACc,YAAY,EAAEhB,KAAK,CAACC,MAArB;cAA6BgB,UAAU,EAAEjB;YAAzC,CAAT;YATgB;YAAA;;UAAA;YAAA,kCAWTR,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAXS;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAcpBC,OAAO,CAACC,GAAR;YAdoB,kCAebhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAfa;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA5B;;EAAA;IAAA;EAAA;AAAA;;AAmBAjB,WAAW,CAAC6B,SAAZ;EAAA,qFAAwB,kBAAM3B,GAAN,EAAWC,GAAX;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,YAC4CD,GAAG,CAAC4B,IADhD,EACZvB,IADY,aACZA,IADY,EACNwB,QADM,aACNA,QADM,EACIC,SADJ,aACIA,SADJ,EACeC,KADf,aACeA,KADf,EACsBC,SADtB,aACsBA,SADtB,EACiCR,MADjC,aACiCA,MADjC;YAAA;YAIVS,MAJU,GAID,IAAI/B,gBAAJ,CAAY;cAAEG,IAAI,EAAJA,IAAF;cAAQwB,QAAQ,EAARA,QAAR;cAAkBC,SAAS,EAATA,SAAlB;cAA6BC,KAAK,EAALA,KAA7B;cAAoCP,MAAM,EAANA;YAApC,CAAZ,CAJC;YAAA;YAAA,OAMYU,iBAAA,CAASC,OAAT,CAAiB;cAAC9B,IAAI,EAAE2B;YAAP,CAAjB,CANZ;;UAAA;YAMVI,aANU;;YAAA,IAOZA,aAPY;cAAA;cAAA;YAAA;;YAAA,kCAOUnC,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAACI,OAAO,qBAAciB,SAAd;YAAR,CAArB,CAPV;;UAAA;YAShBC,MAAM,CAACD,SAAP,GAAmBI,aAAa,CAACC,GAAjC;YATgB;YAAA,OAWIJ,MAAM,CAACK,IAAP,EAXJ;;UAAA;YAWV7B,KAXU;;YAYhB,IAAIA,KAAJ,EAAW;cACPR,GAAG,CAACU,IAAJ,CAAS;gBAAEI,OAAO,EAAE;cAAX,CAAT;YACH;;YAde;YAAA;;UAAA;YAAA;YAAA;YAgBhBC,OAAO,CAACC,GAAR;YAhBgB,kCAiBThB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAjBS;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAxB;;EAAA;IAAA;EAAA;AAAA;;AAqBAjB,WAAW,CAACyC,aAAZ;EAAA,qFAA4B,kBAAMvC,GAAN,EAAWC,GAAX;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA,aACwCD,GAAG,CAAC4B,IAD5C,EAChBvB,IADgB,cAChBA,IADgB,EACVwB,QADU,cACVA,QADU,EACAC,SADA,cACAA,SADA,EACWC,KADX,cACWA,KADX,EACkBC,SADlB,cACkBA,SADlB,EAC6BR,MAD7B,cAC6BA,MAD7B;YAEhBL,SAFgB,GAEFnB,GAAG,CAACoB,MAFF,CAEhBD,SAFgB;YAAA;YAAA;YAAA,OAMQe,iBAAA,CAASC,OAAT,CAAiB;cAAC9B,IAAI,EAAE2B;YAAP,CAAjB,CANR;;UAAA;YAMdI,aANc;;YAAA,IAOhBA,aAPgB;cAAA;cAAA;YAAA;;YAAA,kCAOMnC,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAACI,OAAO,qBAAciB,SAAd;YAAR,CAArB,CAPN;;UAAA;YAAA;YAAA,OASA9B,gBAAA,CAAQsC,iBAAR,CAA0BrB,SAA1B,EAAqC;cACrDd,IAAI,EAAJA,IADqD;cAErDwB,QAAQ,EAARA,QAFqD;cAGrDC,SAAS,EAATA,SAHqD;cAIrDC,KAAK,EAALA,KAJqD;cAKrDC,SAAS,EAAEI,aAAa,CAACC,GAL4B;cAMrDb,MAAM,EAANA;YANqD,CAArC,CATA;;UAAA;YASdf,KATc;;YAAA,KAiBhBA,KAjBgB;cAAA;cAAA;YAAA;;YAkBhBR,GAAG,CAACU,IAAJ,CAAS;cAAEI,OAAO,EAAE;YAAX,CAAT;YAlBgB;YAAA;;UAAA;YAAA,kCAoBTd,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CApBS;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAuBpBC,OAAO,CAACC,GAAR;YAvBoB,kCAwBbhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAxBa;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA5B;;EAAA;IAAA;EAAA;AAAA;;AA4BAjB,WAAW,CAAC2C,aAAZ;EAAA,qFAA4B,kBAAMzC,GAAN,EAAWC,GAAX;IAAA;IAAA;MAAA;QAAA;UAAA;YAChBkB,SADgB,GACFnB,GAAG,CAACoB,MADF,CAChBD,SADgB;YAAA;YAAA;YAAA,OAGAjB,gBAAA,CAAQwC,iBAAR,CAA0BvB,SAA1B,CAHA;;UAAA;YAGdV,KAHc;;YAAA,KAIhBA,KAJgB;cAAA;cAAA;YAAA;;YAKhBR,GAAG,CAACU,IAAJ,CAAS;cAAEI,OAAO,EAAE;YAAX,CAAT;YALgB;YAAA;;UAAA;YAAA,kCAOTd,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE;YAAX,CAArB,CAPS;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAUpBC,OAAO,CAACC,GAAR;YAVoB,kCAWbhB,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;cAAEI,OAAO,EAAE,aAAIA;YAAf,CAArB,CAXa;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA5B;;EAAA;IAAA;EAAA;AAAA;;eAeejB,W"}