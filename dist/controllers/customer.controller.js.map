{"version":3,"file":"customer.controller.js","names":["customerController","createOne","req","res","body","name","tipoDocumento","document","representanteLegal","documentoRepresentante","cellphone","email","address","empleado","newCustomer","Customer","User","findOne","username","$in","foundEmployee","status","json","message","_id","TipoDocumento","abreviatura","tipoDocFound","save","query","console","log","getAll","find","sort","populate","path","select","length","total","all","getOneById","customerId","params","findById","one","messsage","getClienteByDNI","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/customer.controller.js"],"sourcesContent":["import Customer from \"../models/Customer\";\r\nimport TipoDocumento from \"../models/TipoDocumento\";\r\nimport User from \"../models/User\";\r\n\r\nconst customerController = {};\r\n\r\ncustomerController.createOne = async (req, res) => {\r\n\tconst { name, tipoDocumento, document, representanteLegal, documentoRepresentante, cellphone, email, address, empleado } = req.body;\r\n\t\r\n\ttry {\r\n\r\n\t\t\r\n\t\tconst newCustomer = new Customer({\r\n\t\t\tname,\r\n\t\t\tdocument,\r\n\t\t\trepresentanteLegal,\r\n\t\t\tdocumentoRepresentante,\r\n\t\t\tcellphone,\r\n\t\t\temail,\r\n\t\t\taddress,\r\n\t\t});\r\n\t\tconst foundEmployee = await User.findOne({ username: { $in: empleado } });\r\n\t\t\r\n\t\tif (!foundEmployee) return res.status(404).json({ message: `Empleado ${empleado} no encontrado` });\r\n\t\tnewCustomer.empleado = foundEmployee._id;\r\n\t\t\r\n\t\tconst tipoDocFound = await TipoDocumento.findOne({abreviatura: tipoDocumento});\r\n\t\tif (!tipoDocFound) return res.status(404).json({ message: `Documento de identidad ${tipoDocumento} no encontrado` });\r\n\t\tnewCustomer.tipoDocumento = tipoDocFound._id;\r\n\r\n\t\tconst query = await newCustomer.save();\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Cliente creado con éxito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Customer.find()\r\n        .sort({ name: 1 })\r\n\t\t.populate({path: 'tipoDocumento', select: 'name abreviatura longitud'})\r\n        .populate({ \r\n            path: \"empleado\", \r\n            select: \"name username\" \r\n        });\r\n\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({total: query.length, all: query});\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen Clientes\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.getOneById = async (req, res) => {\r\n\tconst { customerId } = req.params;\r\n\ttry {\r\n\t\tconst query = await Customer.findById(customerId)\r\n\t\t.populate({path: 'tipoDocumento', select: 'name abreviatura longitud'})\r\n\t\t.populate({path: 'empleado', select: 'name username'});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({one: query});\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ messsage: \"No existe cliente\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.getClienteByDNI = async (req, res) => {\r\n\tconst { document } = req.body;\r\n\r\n\ttry {\r\n\t\tconst query = await Customer.findOne({ document })\r\n\t\t.populate({path: 'tipoDocumento', select: 'name abreviatura longitud'})\r\n\t\t.populate({path: 'empleado', select: 'name username'});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({one: query});\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: `El documento ${document} no encontrado` });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.updateOneById = async (req, res) => {\r\n\tconst { customerId } = req.params;\r\n\tconst { name, tipoDocumento, document, representanteLegal, documentoRepresentante, cellphone, email, address } = req.body;\r\n\t\r\n\ttry {\r\n\t\tconst tipoDocFound = await TipoDocumento.findOne({abreviatura: tipoDocumento});\r\n\t\tif (!tipoDocFound) return res.status(404).json({ message: `Documento de identidad ${tipoDocumento} no encontrado` });\r\n\r\n\t\tconst query = await Customer.findByIdAndUpdate(customerId, {\r\n\t\t\tname,\r\n\t\t\ttipoDocumento: tipoDocFound._id,\r\n\t\t\tdocument,\r\n\t\t\trepresentanteLegal,\r\n\t\t\tdocumentoRepresentante,\r\n\t\t\tcellphone,\r\n\t\t\temail,\r\n\t\t\taddress,\r\n\t\t});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Cliente actualizado con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ messsage: \"No existe cliente a actualizar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.deleteOneById = async (req, res) => {\r\n\tconst { customerId } = req.params;\r\n\r\n\ttry {\r\n\t\tconst query = await Customer.findByIdAndDelete(customerId);\r\n        \r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Cliente eliminado con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ messsage: \"No existe cliente a eliminar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default customerController;"],"mappings":"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"}