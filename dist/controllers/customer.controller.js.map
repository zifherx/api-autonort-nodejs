{"version":3,"sources":["../../src/controllers/customer.controller.js"],"names":["customerController","createOne","req","res","body","name","tipoDocumento","document","representanteLegal","documentoRepresentante","cellphone","email","address","empleado","newCustomer","Customer","User","findOne","username","$in","foundEmployee","status","json","message","_id","TipoDocumento","abreviatura","tipoDocFound","save","query","console","log","getAll","find","sort","populate","path","select","length","total","all","getOneById","customerId","params","findById","one","messsage","getClienteByDNI","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,kBAAkB,GAAG,EAA3B;;AAEAA,kBAAkB,CAACC,SAAnB;AAAA,qFAA+B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAC6FD,GAAG,CAACE,IADjG,EACtBC,IADsB,aACtBA,IADsB,EAChBC,aADgB,aAChBA,aADgB,EACDC,QADC,aACDA,QADC,EACSC,kBADT,aACSA,kBADT,EAC6BC,sBAD7B,aAC6BA,sBAD7B,EACqDC,SADrD,aACqDA,SADrD,EACgEC,KADhE,aACgEA,KADhE,EACuEC,OADvE,aACuEA,OADvE,EACgFC,QADhF,aACgFA,QADhF;AAAA;AAMvBC,YAAAA,WANuB,GAMT,IAAIC,iBAAJ,CAAa;AAChCV,cAAAA,IAAI,EAAJA,IADgC;AAEhCE,cAAAA,QAAQ,EAARA,QAFgC;AAGhCC,cAAAA,kBAAkB,EAAlBA,kBAHgC;AAIhCC,cAAAA,sBAAsB,EAAtBA,sBAJgC;AAKhCC,cAAAA,SAAS,EAATA,SALgC;AAMhCC,cAAAA,KAAK,EAALA,KANgC;AAOhCC,cAAAA,OAAO,EAAPA;AAPgC,aAAb,CANS;AAAA;AAAA,mBAeDI,cAAKC,OAAL,CAAa;AAAEC,cAAAA,QAAQ,EAAE;AAAEC,gBAAAA,GAAG,EAAEN;AAAP;AAAZ,aAAb,CAfC;;AAAA;AAevBO,YAAAA,aAfuB;;AAAA,gBAiBxBA,aAjBwB;AAAA;AAAA;AAAA;;AAAA,6CAiBFjB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,qBAAcV,QAAd;AAAT,aAArB,CAjBE;;AAAA;AAkB7BC,YAAAA,WAAW,CAACD,QAAZ,GAAuBO,aAAa,CAACI,GAArC;AAlB6B;AAAA,mBAoBFC,uBAAcR,OAAd,CAAsB;AAACS,cAAAA,WAAW,EAAEpB;AAAd,aAAtB,CApBE;;AAAA;AAoBvBqB,YAAAA,YApBuB;;AAAA,gBAqBxBA,YArBwB;AAAA;AAAA;AAAA;;AAAA,6CAqBHxB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,mCAA4BjB,aAA5B;AAAT,aAArB,CArBG;;AAAA;AAsB7BQ,YAAAA,WAAW,CAACR,aAAZ,GAA4BqB,YAAY,CAACH,GAAzC;AAtB6B;AAAA,mBAwBTV,WAAW,CAACc,IAAZ,EAxBS;;AAAA;AAwBvBC,YAAAA,KAxBuB;;AA0B7B,gBAAIA,KAAJ,EAAW;AACV1B,cAAAA,GAAG,CAACmB,IAAJ,CAAS;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACA;;AA5B4B;AAAA;;AAAA;AAAA;AAAA;AA8B7BO,YAAAA,OAAO,CAACC,GAAR;AA9B6B,6CA+BtB5B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,YAAIA;AAAf,aAArB,CA/BsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAmCAvB,kBAAkB,CAACgC,MAAnB;AAAA,sFAA4B,kBAAO9B,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAENY,kBAASkB,IAAT,GACbC,IADa,CACR;AAAE7B,cAAAA,IAAI,EAAE;AAAR,aADQ,EAEnB8B,QAFmB,CAEV;AAACC,cAAAA,IAAI,EAAE,eAAP;AAAwBC,cAAAA,MAAM,EAAE;AAAhC,aAFU,EAGbF,QAHa,CAGJ;AACNC,cAAAA,IAAI,EAAE,UADA;AAENC,cAAAA,MAAM,EAAE;AAFF,aAHI,CAFM;;AAAA;AAEpBR,YAAAA,KAFoB;;AAAA,kBAUtBA,KAAK,CAACS,MAAN,GAAe,CAVO;AAAA;AAAA;AAAA;;AAWzBnC,YAAAA,GAAG,CAACmB,IAAJ,CAAS;AAACiB,cAAAA,KAAK,EAAEV,KAAK,CAACS,MAAd;AAAsBE,cAAAA,GAAG,EAAEX;AAA3B,aAAT;AAXyB;AAAA;;AAAA;AAAA,8CAalB1B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAArB,CAbkB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgB1BO,YAAAA,OAAO,CAACC,GAAR;AAhB0B,8CAiBnB5B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAjBmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAqBAvB,kBAAkB,CAACyC,UAAnB;AAAA,sFAAgC,kBAAOvC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBuC,YAAAA,UADuB,GACRxC,GAAG,CAACyC,MADI,CACvBD,UADuB;AAAA;AAAA;AAAA,mBAGV3B,kBAAS6B,QAAT,CAAkBF,UAAlB,EACnBP,QADmB,CACV;AAACC,cAAAA,IAAI,EAAE,eAAP;AAAwBC,cAAAA,MAAM,EAAE;AAAhC,aADU,EAEnBF,QAFmB,CAEV;AAACC,cAAAA,IAAI,EAAE,UAAP;AAAmBC,cAAAA,MAAM,EAAE;AAA3B,aAFU,CAHU;;AAAA;AAGxBR,YAAAA,KAHwB;;AAAA,iBAO1BA,KAP0B;AAAA;AAAA;AAAA;;AAQ7B1B,YAAAA,GAAG,CAACmB,IAAJ,CAAS;AAACuB,cAAAA,GAAG,EAAEhB;AAAN,aAAT;AAR6B;AAAA;;AAAA;AAAA,8CAUtB1B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEwB,cAAAA,QAAQ,EAAE;AAAZ,aAArB,CAVsB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAa9BhB,YAAAA,OAAO,CAACC,GAAR;AAb8B,8CAcvB5B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAduB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA;;AAkBAvB,kBAAkB,CAAC+C,eAAnB;AAAA,sFAAqC,kBAAO7C,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BI,YAAAA,QAD4B,GACfL,GAAG,CAACE,IADW,CAC5BG,QAD4B;AAAA;AAAA;AAAA,mBAIfQ,kBAASE,OAAT,CAAiB;AAAEV,cAAAA,QAAQ,EAARA;AAAF,aAAjB,EACnB4B,QADmB,CACV;AAACC,cAAAA,IAAI,EAAE,eAAP;AAAwBC,cAAAA,MAAM,EAAE;AAAhC,aADU,EAEnBF,QAFmB,CAEV;AAACC,cAAAA,IAAI,EAAE,UAAP;AAAmBC,cAAAA,MAAM,EAAE;AAA3B,aAFU,CAJe;;AAAA;AAI7BR,YAAAA,KAJ6B;;AAAA,iBAQ/BA,KAR+B;AAAA;AAAA;AAAA;;AASlC1B,YAAAA,GAAG,CAACmB,IAAJ,CAAS;AAACuB,cAAAA,GAAG,EAAEhB;AAAN,aAAT;AATkC;AAAA;;AAAA;AAAA,8CAW3B1B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,yBAAkBhB,QAAlB;AAAT,aAArB,CAX2B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcnCuB,YAAAA,OAAO,CAACC,GAAR;AAdmC,8CAe5B5B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAf4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAmBAvB,kBAAkB,CAACgD,aAAnB;AAAA,sFAAmC,kBAAO9C,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1BuC,YAAAA,UAD0B,GACXxC,GAAG,CAACyC,MADO,CAC1BD,UAD0B;AAAA,yBAE+ExC,GAAG,CAACE,IAFnF,EAE1BC,IAF0B,cAE1BA,IAF0B,EAEpBC,aAFoB,cAEpBA,aAFoB,EAELC,QAFK,cAELA,QAFK,EAEKC,kBAFL,cAEKA,kBAFL,EAEyBC,sBAFzB,cAEyBA,sBAFzB,EAEiDC,SAFjD,cAEiDA,SAFjD,EAE4DC,KAF5D,cAE4DA,KAF5D,EAEmEC,OAFnE,cAEmEA,OAFnE;AAAA;AAAA;AAAA,mBAKNa,uBAAcR,OAAd,CAAsB;AAACS,cAAAA,WAAW,EAAEpB;AAAd,aAAtB,CALM;;AAAA;AAK3BqB,YAAAA,YAL2B;;AAAA,gBAM5BA,YAN4B;AAAA;AAAA;AAAA;;AAAA,8CAMPxB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,mCAA4BjB,aAA5B;AAAT,aAArB,CANO;;AAAA;AAAA;AAAA,mBAQbS,kBAASkC,iBAAT,CAA2BP,UAA3B,EAAuC;AAC1DrC,cAAAA,IAAI,EAAJA,IAD0D;AAE1DC,cAAAA,aAAa,EAAEqB,YAAY,CAACH,GAF8B;AAG1DjB,cAAAA,QAAQ,EAARA,QAH0D;AAI1DC,cAAAA,kBAAkB,EAAlBA,kBAJ0D;AAK1DC,cAAAA,sBAAsB,EAAtBA,sBAL0D;AAM1DC,cAAAA,SAAS,EAATA,SAN0D;AAO1DC,cAAAA,KAAK,EAALA,KAP0D;AAQ1DC,cAAAA,OAAO,EAAPA;AAR0D,aAAvC,CARa;;AAAA;AAQ3BiB,YAAAA,KAR2B;;AAAA,iBAmB7BA,KAnB6B;AAAA;AAAA;AAAA;;AAoBhC1B,YAAAA,GAAG,CAACmB,IAAJ,CAAS;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAAT;AApBgC;AAAA;;AAAA;AAAA,8CAsBzBpB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEwB,cAAAA,QAAQ,EAAE;AAAZ,aAArB,CAtByB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBjChB,YAAAA,OAAO,CAACC,GAAR;AAzBiC,8CA0B1B5B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CA1B0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AA8BAvB,kBAAkB,CAACkD,aAAnB;AAAA,sFAAmC,kBAAOhD,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BuC,YAAAA,UAD0B,GACXxC,GAAG,CAACyC,MADO,CAC1BD,UAD0B;AAAA;AAAA;AAAA,mBAIb3B,kBAASoC,iBAAT,CAA2BT,UAA3B,CAJa;;AAAA;AAI3Bb,YAAAA,KAJ2B;;AAAA,iBAM7BA,KAN6B;AAAA;AAAA;AAAA;;AAOhC1B,YAAAA,GAAG,CAACmB,IAAJ,CAAS;AAAEC,cAAAA,OAAO,EAAE;AAAX,aAAT;AAPgC;AAAA;;AAAA;AAAA,8CASzBpB,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEwB,cAAAA,QAAQ,EAAE;AAAZ,aAArB,CATyB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYjChB,YAAAA,OAAO,CAACC,GAAR;AAZiC,8CAa1B5B,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB,CAb0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;eAiBevB,kB","sourcesContent":["import Customer from \"../models/Customer\";\r\nimport TipoDocumento from \"../models/TipoDocumento\";\r\nimport User from \"../models/User\";\r\n\r\nconst customerController = {};\r\n\r\ncustomerController.createOne = async (req, res) => {\r\n\tconst { name, tipoDocumento, document, representanteLegal, documentoRepresentante, cellphone, email, address, empleado } = req.body;\r\n\t\r\n\ttry {\r\n\r\n\t\t\r\n\t\tconst newCustomer = new Customer({\r\n\t\t\tname,\r\n\t\t\tdocument,\r\n\t\t\trepresentanteLegal,\r\n\t\t\tdocumentoRepresentante,\r\n\t\t\tcellphone,\r\n\t\t\temail,\r\n\t\t\taddress,\r\n\t\t});\r\n\t\tconst foundEmployee = await User.findOne({ username: { $in: empleado } });\r\n\t\t\r\n\t\tif (!foundEmployee) return res.status(404).json({ message: `Empleado ${empleado} no encontrado` });\r\n\t\tnewCustomer.empleado = foundEmployee._id;\r\n\t\t\r\n\t\tconst tipoDocFound = await TipoDocumento.findOne({abreviatura: tipoDocumento});\r\n\t\tif (!tipoDocFound) return res.status(404).json({ message: `Documento de identidad ${tipoDocumento} no encontrado` });\r\n\t\tnewCustomer.tipoDocumento = tipoDocFound._id;\r\n\r\n\t\tconst query = await newCustomer.save();\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Cliente creado con Ã©xito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Customer.find()\r\n        .sort({ name: 1 })\r\n\t\t.populate({path: 'tipoDocumento', select: 'name abreviatura longitud'})\r\n        .populate({ \r\n            path: \"empleado\", \r\n            select: \"name username\" \r\n        });\r\n\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({total: query.length, all: query});\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen Clientes\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.getOneById = async (req, res) => {\r\n\tconst { customerId } = req.params;\r\n\ttry {\r\n\t\tconst query = await Customer.findById(customerId)\r\n\t\t.populate({path: 'tipoDocumento', select: 'name abreviatura longitud'})\r\n\t\t.populate({path: 'empleado', select: 'name username'});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({one: query});\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ messsage: \"No existe cliente\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.getClienteByDNI = async (req, res) => {\r\n\tconst { document } = req.body;\r\n\r\n\ttry {\r\n\t\tconst query = await Customer.findOne({ document })\r\n\t\t.populate({path: 'tipoDocumento', select: 'name abreviatura longitud'})\r\n\t\t.populate({path: 'empleado', select: 'name username'});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({one: query});\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: `El documento ${document} no encontrado` });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.updateOneById = async (req, res) => {\r\n\tconst { customerId } = req.params;\r\n\tconst { name, tipoDocumento, document, representanteLegal, documentoRepresentante, cellphone, email, address } = req.body;\r\n\t\r\n\ttry {\r\n\t\tconst tipoDocFound = await TipoDocumento.findOne({abreviatura: tipoDocumento});\r\n\t\tif (!tipoDocFound) return res.status(404).json({ message: `Documento de identidad ${tipoDocumento} no encontrado` });\r\n\r\n\t\tconst query = await Customer.findByIdAndUpdate(customerId, {\r\n\t\t\tname,\r\n\t\t\ttipoDocumento: tipoDocFound._id,\r\n\t\t\tdocument,\r\n\t\t\trepresentanteLegal,\r\n\t\t\tdocumentoRepresentante,\r\n\t\t\tcellphone,\r\n\t\t\temail,\r\n\t\t\taddress,\r\n\t\t});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Cliente actualizado con Ã©xito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ messsage: \"No existe cliente a actualizar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\ncustomerController.deleteOneById = async (req, res) => {\r\n\tconst { customerId } = req.params;\r\n\r\n\ttry {\r\n\t\tconst query = await Customer.findByIdAndDelete(customerId);\r\n        \r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Cliente eliminado con Ã©xito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ messsage: \"No existe cliente a eliminar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default customerController;"],"file":"customer.controller.js"}