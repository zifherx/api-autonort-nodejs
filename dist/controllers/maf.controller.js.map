{"version":3,"sources":["../../src/controllers/maf.controller.js"],"names":["getAll","req","res","Maf","find","populate","query","length","json","status","message","console","log","getOneById","mafId","params","findById","obtenerRequestbyStatus","body","pasoaHot","primer_status_request","response","createRequest","nro_solicitud","fecha_ingreso","sucursal","cliente","estado_civil","lugar_trabajo","conyuge","document_conyuge","fecha_nacimiento_conyuge","ingreso_promedio","cuota_inicial","vendedor","vehiculo","anio_fab","anio_mod","pvp","plan","tipo_uso","files","filePaths","map","file","push","location","obj","evidencias","Customer","name","clienteEncontrado","customer","a","_id","Seller","vendedorEncontrado","seller","b","Vehicle","cod_tdp","vehiculoEncontrado","car","c","save","objCreated","actualizarRequest","fecha_respuesta","observacion","motivo","findByIdAndUpdate","messsage","error","agregarNewDocuments","adicionales","files_adicionales","actualizarReqAprobada","fecha_aprobacion","carta_aprobacion","carta","carta_evidencia","requestaHot","cambioStatusByMaf","tercer_status_request","deleteRequest","findOneAndDelete","enviarCorreoSolicitud","to","cc","subject","text","html","transporter","nodemailer","createTransport","host","port","secure","auth","user","pass","sendMail","from","email","respuesta","split","getTestMessageUrl","info","messageId","retardo","envelopeTime"],"mappings":"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","sourcesContent":["import nodemailer from 'nodemailer'\r\nimport Customer from '../models/Customer'\r\nimport Maf from '../models/Maf'\r\nimport Seller from '../models/Seller'\r\nimport Vehicle from '../models/Vehicle'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await Maf.find().populate('customer seller car')\r\n            // console.log(query)\r\n        if (query.length > 0) {\r\n            res.json(query)\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen solicitudes' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getOneById = async(req, res) => {\r\n    const { mafId } = req.params;\r\n\r\n    try {\r\n        const query = await Maf.findById(mafId).populate('customer seller car')\r\n            // console.log(query)\r\n        if (query) {\r\n            res.json(query)\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen solicitudes' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const obtenerRequestbyStatus = async(req, res) => {\r\n    const { status, pasoaHot } = req.body\r\n    try {\r\n        const query = await Maf.find({ primer_status_request: status, pasoaHot: pasoaHot }).populate('car seller customer')\r\n            // console.log(query)\r\n        if (query.length > 0) {\r\n            res.json(query)\r\n        } else {\r\n            return res.status(404).json({ message: `No se encuentran solicitudes en ${status}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        return res.status(503).json({ message: err.message })\r\n\r\n    }\r\n}\r\n\r\nexport const createRequest = async(req, res) => {\r\n    const {\r\n        nro_solicitud,\r\n        fecha_ingreso,\r\n        sucursal,\r\n        cliente,\r\n        estado_civil,\r\n        lugar_trabajo,\r\n        conyuge,\r\n        document_conyuge,\r\n        fecha_nacimiento_conyuge,\r\n        ingreso_promedio,\r\n        cuota_inicial,\r\n        vendedor,\r\n        vehiculo,\r\n        anio_fab,\r\n        anio_mod,\r\n        pvp,\r\n        plan,\r\n        tipo_uso,\r\n        primer_status_request\r\n    } = req.body\r\n    const files = req.files;\r\n\r\n    // console.log(req);\r\n\r\n    let filePaths = [];\r\n\r\n    try {\r\n\r\n        if (files.length === 0) return res.status(400).json({ message: 'Faltan los documentos' })\r\n\r\n        files.map((file) => {\r\n            filePaths.push(file.location);\r\n        })\r\n\r\n        const obj = new Maf({\r\n            nro_solicitud,\r\n            fecha_ingreso,\r\n            sucursal,\r\n            estado_civil,\r\n            lugar_trabajo,\r\n            conyuge,\r\n            document_conyuge,\r\n            fecha_nacimiento_conyuge,\r\n            ingreso_promedio,\r\n            cuota_inicial,\r\n            anio_fab,\r\n            anio_mod,\r\n            pvp,\r\n            plan,\r\n            tipo_uso,\r\n            evidencias: filePaths,\r\n            primer_status_request\r\n        })\r\n\r\n        let clienteEncontrado = await Customer.find({ name: cliente })\r\n        obj.customer = clienteEncontrado.map(a => a._id)\r\n\r\n        let vendedorEncontrado = await Seller.find({ name: vendedor })\r\n        obj.seller = vendedorEncontrado.map(b => b._id)\r\n\r\n        let vehiculoEncontrado = await Vehicle.find({ cod_tdp: vehiculo })\r\n        obj.car = vehiculoEncontrado.map(c => c._id)\r\n\r\n        const objCreated = await obj.save()\r\n\r\n        if (objCreated) {\r\n            res.json({ message: 'Solicitud MAF creada con éxito' })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const actualizarRequest = async(req, res) => {\r\n    const { mafId } = req.params;\r\n    const {\r\n        primer_status_request,\r\n        fecha_respuesta,\r\n        observacion,\r\n        motivo,\r\n\r\n    } = req.body\r\n\r\n    try {\r\n        const obj = await Maf.findByIdAndUpdate(mafId, {\r\n            primer_status_request,\r\n            fecha_respuesta,\r\n            observacion,\r\n            motivo\r\n        })\r\n        if (obj) {\r\n            res.json({ message: 'Solicitud MAF actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ messsage: 'No existe Solicitud a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ error: err });\r\n    }\r\n}\r\n\r\nexport const agregarNewDocuments = async(req, res) => {\r\n    const { mafId } = req.params;\r\n    const adicionales = req.files;\r\n    // console.log(req)\r\n    let filePaths = [];\r\n\r\n    try {\r\n        if (adicionales.length === 0) return res.status(400).json({ message: 'Falta los Documentos' });\r\n\r\n        adicionales.map((file) => {\r\n            filePaths.push(file.location);\r\n        });\r\n\r\n        const query = await Maf.findByIdAndUpdate(mafId, {\r\n            files_adicionales: filePaths\r\n        });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Documentos agregados con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Solicitud a modificar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ error: err })\r\n    }\r\n}\r\n\r\nexport const actualizarReqAprobada = async(req, res) => {\r\n    const { mafId } = req.params;\r\n    const {\r\n        primer_status_request,\r\n        fecha_respuesta,\r\n        observacion,\r\n        fecha_aprobacion,\r\n        carta_aprobacion\r\n    } = req.body\r\n    const carta = req.file;\r\n\r\n    try {\r\n        const query = await Maf.findByIdAndUpdate(mafId, {\r\n            primer_status_request,\r\n            fecha_respuesta,\r\n            observacion,\r\n            fecha_aprobacion,\r\n            carta_aprobacion,\r\n            carta_evidencia: carta.location\r\n        })\r\n\r\n        if (query) {\r\n            res.json({ message: 'Solicitud MAF aprobada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Solicitud a aprobar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ error: err });\r\n    }\r\n}\r\n\r\nexport const requestaHot = async(req, res) => {\r\n    const { mafId } = req.params;\r\n    const { pasoaHot } = req.body;\r\n\r\n    try {\r\n        const query = await Maf.findByIdAndUpdate(mafId, { pasoaHot });\r\n        if (query) {\r\n            res.json({ message: 'Solicitud MAF se actualizó con éxito' });\r\n        } else {\r\n            return res.status(404).json({ messsage: 'No existe Solicitud a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ error: err });\r\n    }\r\n}\r\n\r\nexport const cambioStatusByMaf = async(req, res) => {\r\n    const { mafId } = req.params;\r\n    const { tercer_status_request } = req.body;\r\n\r\n    try {\r\n        const query = await Maf.findByIdAndUpdate(mafId, { tercer_status_request });\r\n        if (query) {\r\n            res.json({ message: `Cambio de Status a ${tercer_status_request} con éxito` });\r\n        } else {\r\n            return res.status(404).json({ messsage: 'No existe Solicitud a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ error: err });\r\n    }\r\n}\r\n\r\nexport const deleteRequest = async(req, res) => {\r\n    const { mafId } = req.params;\r\n\r\n    try {\r\n        const query = await Maf.findOneAndDelete(mafId);\r\n        if (query) {\r\n            res.json({ message: 'Solicitud eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe la solicitud a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const enviarCorreoSolicitud = async(req, res) => {\r\n    const { to, cc, subject, text, html } = req.body\r\n\r\n    try {\r\n        const transporter = nodemailer.createTransport({\r\n            host: 'mail.autonortnor.com',\r\n            port: '465',\r\n            secure: true,\r\n            auth: {\r\n                user: 'sistemadv@autonortnor.com',\r\n                pass: 'k=q0mdgLo,QS'\r\n            }\r\n        })\r\n\r\n        let email = await transporter.sendMail({\r\n            from: '\"Sistema ADV 👻\" <sistemadv@autonortnor.com>',\r\n            to: to,\r\n            cc: [cc, 'frojas@autonortnor.com.pe'],\r\n            subject: subject,\r\n            text: text,\r\n            html: html\r\n        })\r\n\r\n        let respuesta = email.response.split(\" \")\r\n            // console.log(respuesta)\r\n            // console.log(respuesta[1])\r\n        if (respuesta[1] == 'OK') {\r\n            console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(email));\r\n            res.json({ message: 'Mensaje enviado', info: email.messageId, retardo: email.envelopeTime, respuesta: email.response })\r\n        } else {\r\n            return res.status(500).json({ message: 'Error al enviar correo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"maf.controller.js"}