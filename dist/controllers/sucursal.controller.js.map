{"version":3,"sources":["../../src/controllers/sucursal.controller.js"],"names":["sucursalController","getAll","req","res","Sucursal","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","sucursalId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","objeto","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Sucursal from \"../models/Sucursal\";\r\n\r\nconst sucursalController = {};\r\n\r\nsucursalController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Sucursal.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n           return res.status(404).json({ message: 'No existen Sucursales' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.getOneById = async(req, res) => {\r\n    const { sucursalId } = req.params;\r\n    try {\r\n        const query = await Sucursal.findById(sucursalId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sucursales' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Sucursal.find({ estado: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Sucursales activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const objeto = new Sucursal({ name, estado });\r\n\r\n        const query = await objeto.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Sucursal creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { sucursalId } = req.params;\r\n    try {\r\n\r\n        const query = await Sucursal.findByIdAndUpdate(sucursalId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Sucursal actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sucursal a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.deleteOneById = async(req, res) => {\r\n    const { sucursalId } = req.params;\r\n    try {\r\n        const query = await Sucursal.findByIdAndDelete(sucursalId);\r\n\r\n        if (query) {\r\n            res.json({ message: 'Sucursal eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sucursal a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default sucursalController;"],"file":"sucursal.controller.js"}