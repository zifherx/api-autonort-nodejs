{"version":3,"file":"sucursal.controller.js","names":["sucursalController","getAll","req","res","Sucursal","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","sucursalId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","objeto","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/sucursal.controller.js"],"sourcesContent":["import Sucursal from \"../models/Sucursal\";\r\n\r\nconst sucursalController = {};\r\n\r\nsucursalController.getAll = async(req, res) => {\r\n    try {\r\n        const query = await Sucursal.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n           return res.status(404).json({ message: 'No existen Sucursales' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.getOneById = async(req, res) => {\r\n    const { sucursalId } = req.params;\r\n    try {\r\n        const query = await Sucursal.findById(sucursalId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sucursales' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await Sucursal.find({ estado: true }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Sucursales activas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const objeto = new Sucursal({ name, estado });\r\n\r\n        const query = await objeto.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Sucursal creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { sucursalId } = req.params;\r\n    try {\r\n\r\n        const query = await Sucursal.findByIdAndUpdate(sucursalId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Sucursal actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sucursal a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nsucursalController.deleteOneById = async(req, res) => {\r\n    const { sucursalId } = req.params;\r\n    try {\r\n        const query = await Sucursal.findByIdAndDelete(sucursalId);\r\n\r\n        if (query) {\r\n            res.json({ message: 'Sucursal eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sucursal a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default sucursalController;"],"mappings":"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"}