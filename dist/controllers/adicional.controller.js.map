{"version":3,"sources":["../../src/controllers/adicional.controller.js"],"names":["createAdicional","req","res","body","name","descripcion","bono","startDate","endDate","status","empleado","objeto","Adicional","User","find","username","$in","foundEmployee","map","em","_id","save","query","json","message","console","log","getAll","sort","length","getOne","adicionalId","params","findById","getAdicionalActivos","updateAdicionalById","findByIdAndUpdate","deleteAdicionalById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Adicional from '../models/Adicional'\r\nimport User from '../models/User'\r\n\r\nexport const createAdicional = async(req, res) => {\r\n    const { name, descripcion, bono, startDate, endDate, status, empleado } = req.body;\r\n\r\n    try {\r\n\r\n        const objeto = new Adicional({ name, descripcion, bono, startDate, endDate, status });\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        objeto.empleado = foundEmployee.map(em => em._id);\r\n\r\n        const query = await objeto.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Adicional creada con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await Adicional.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Adicionales' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getOne = async(req, res) => {\r\n    const { adicionalId } = req.params;\r\n    try {\r\n        const query = await Adicional.findById(adicionalId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Adicional' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAdicionalActivos = async(req, res) => {\r\n    try {\r\n        const query = await Adicional.find({ status: 'Activo' }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Adicionales Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\n\r\nexport const updateAdicionalById = async(req, res) => {\r\n    const { adicionalId } = req.params;\r\n    const { name, descripcion, bono, startDate, endDate, status } = req.body;\r\n    try {\r\n\r\n        const query = await Adicional.findByIdAndUpdate(adicionalId, { name, descripcion, bono, startDate, endDate, status });\r\n        if (query) {\r\n            res.json({ message: 'Adicional actualizada con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Adicional a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteAdicionalById = async(req, res) => {\r\n    const { adicionalId } = req.params;\r\n    try {\r\n        const query = await Adicional.findByIdAndDelete(adicionalId);\r\n        if (query) {\r\n            res.json({ message: 'Adicional eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'Adicional no existe a eliminar' });\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"adicional.controller.js"}