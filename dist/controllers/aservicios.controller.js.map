{"version":3,"sources":["../../src/controllers/aservicios.controller.js"],"names":["serviciosCtrl","getAll","req","res","AServicios","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","asesorId","params","findById","one","getAllByActivo","estado","total_active","all_active","createOne","body","document","cellphone","email","sucursalE","avatar","file","obj","Sucursal","findOne","sucursalFound","undefined","_id","location","save","updatedOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete","getBySucursal","sucursal"],"mappings":"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","sourcesContent":["import AServicios from \"../models/AServicios\";\r\nimport Sucursal from \"../models/Sucursal\";\r\n\r\nconst serviciosCtrl = {};\r\n\r\nserviciosCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await AServicios.find().sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Asesores de Servicios' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.getOneById = async(req, res) => {\r\n    const { asesorId } = req.params;\r\n    try {\r\n        const query = await AServicios.findById(asesorId)\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Asesor de Servicio' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.getAllByActivo = async(req, res) => {\r\n    try {\r\n        const query = await AServicios.find({ estado: true })\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Asesores de Servicios Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.createOne = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursalE, estado } = req.body;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n        let obj = null;\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        if(avatar == null || avatar == undefined){\r\n            obj = new AServicios({\r\n                name,\r\n                document,\r\n                cellphone,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                estado\r\n            });\r\n        }else{\r\n            obj = new AServicios({\r\n                name,\r\n                document,\r\n                cellphone,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                estado,\r\n                avatar: avatar.location,\r\n            });\r\n        }\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Asesor de Servicio creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.updatedOneById = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursalE, estado } = req.body;\r\n    const { asesorId } = req.params;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n\r\n        let query = null;\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        if(avatar == undefined || avatar == null){\r\n            query = await AServicios.findByIdAndUpdate(asesorId,{\r\n                name,\r\n                document,\r\n                cellphone,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                estado\r\n            })\r\n        }else{\r\n            query = await AServicios.findByIdAndUpdate(asesorId,{\r\n                name,\r\n                document,\r\n                cellphone,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                estado,\r\n                avatar: avatar.location\r\n            })\r\n        }\r\n\r\n        if (query) {\r\n            res.json({ message: 'Asesor de Servicio actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Asesor de Servicio a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.deleteOneById = async(req, res) => {\r\n    const { asesorId } = req.params;\r\n    try {\r\n        const query = await AServicios.findByIdAndDelete(asesorId);\r\n        if (query) {\r\n            res.json({ message: 'Asesor de Servicio eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Asesor de Servicio a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.getBySucursal = async(req, res) => {\r\n    const { sucursalE } = req.body;\r\n\r\n    try {\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        const query = await AServicios.find({ \r\n            sucursalE: sucursalFound._id, \r\n            estado: true \r\n        }).sort({ name: 1 });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No Existen Asesores de Servicios en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default serviciosCtrl;"],"file":"aservicios.controller.js"}