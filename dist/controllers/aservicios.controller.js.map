{"version":3,"file":"aservicios.controller.js","names":["serviciosCtrl","getAll","req","res","AServicios","find","sort","name","populate","path","select","query","length","json","total","all","status","message","console","log","getOneById","asesorId","params","findById","one","getAllByActivo","estado","total_active","all_active","createOne","body","document","cellphone","email","sucursalE","avatar","file","obj","Sucursal","findOne","sucursalFound","undefined","_id","location","save","updatedOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete","getBySucursal","sucursal"],"sources":["../../src/controllers/aservicios.controller.js"],"sourcesContent":["import AServicios from \"../models/AServicios\";\r\nimport Sucursal from \"../models/Sucursal\";\r\n\r\nconst serviciosCtrl = {};\r\n\r\nserviciosCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await AServicios.find().sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Asesores de Servicios' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.getOneById = async(req, res) => {\r\n    const { asesorId } = req.params;\r\n    try {\r\n        const query = await AServicios.findById(asesorId)\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Asesor de Servicio' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.getAllByActivo = async(req, res) => {\r\n    try {\r\n        const query = await AServicios.find({ estado: true })\r\n        .sort({ name: 1 })\r\n        .populate({\r\n            path: 'sucursalE',\r\n            select: 'name'\r\n        });\r\n\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Asesores de Servicios Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.createOne = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursalE, estado } = req.body;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n        let obj = null;\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        if(avatar == null || avatar == undefined){\r\n            obj = new AServicios({\r\n                name,\r\n                document,\r\n                cellphone,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                estado\r\n            });\r\n        }else{\r\n            obj = new AServicios({\r\n                name,\r\n                document,\r\n                cellphone,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                estado,\r\n                avatar: avatar.location,\r\n            });\r\n        }\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Asesor de Servicio creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.updatedOneById = async(req, res) => {\r\n    const { name, document, cellphone, email, sucursalE, estado } = req.body;\r\n    const { asesorId } = req.params;\r\n    const avatar = req.file;\r\n\r\n    try {\r\n\r\n        let query = null;\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        if(avatar == undefined || avatar == null){\r\n            query = await AServicios.findByIdAndUpdate(asesorId,{\r\n                name,\r\n                document,\r\n                cellphone,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                estado\r\n            })\r\n        }else{\r\n            query = await AServicios.findByIdAndUpdate(asesorId,{\r\n                name,\r\n                document,\r\n                cellphone,\r\n                email,\r\n                sucursalE: sucursalFound._id,\r\n                estado,\r\n                avatar: avatar.location\r\n            })\r\n        }\r\n\r\n        if (query) {\r\n            res.json({ message: 'Asesor de Servicio actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Asesor de Servicio a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.deleteOneById = async(req, res) => {\r\n    const { asesorId } = req.params;\r\n    try {\r\n        const query = await AServicios.findByIdAndDelete(asesorId);\r\n        if (query) {\r\n            res.json({ message: 'Asesor de Servicio eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Asesor de Servicio a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nserviciosCtrl.getBySucursal = async(req, res) => {\r\n    const { sucursalE } = req.body;\r\n\r\n    try {\r\n\r\n        const sucursalFound = await Sucursal.findOne({name: sucursalE});\r\n        if(!sucursalFound) return res.status(404).json({message: `Sucursal ${sucursalE} no encontrada`});\r\n\r\n        const query = await AServicios.find({ \r\n            sucursalE: sucursalFound._id, \r\n            estado: true \r\n        }).sort({ name: 1 });\r\n\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: `No Existen Asesores de Servicios en ${sucursal}` })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default serviciosCtrl;"],"mappings":"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"}