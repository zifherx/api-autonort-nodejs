{"version":3,"sources":["../../src/controllers/sustento.controller.js"],"names":["getSustentos","req","res","Sustento","find","sort","name","query","length","json","status","message","console","log","getSustentoById","sustentoId","params","findById","getSustentoByActivo","createSustento","body","objeto","save","updateSustento","findByIdAndUpdate","deleteSustento","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Sustento from \"../models/Sustento\";\r\n\r\nexport const getSustentos = async(req, res) => {\r\n    try {\r\n        const query = await Sustento.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Sustentos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSustentoById = async(req, res) => {\r\n    const { sustentoId } = req.params;\r\n    try {\r\n        const query = await Sustento.findById(sustentoId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Sustento' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getSustentoByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Sustento.find({ status: \"Activo\" }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Sustentos Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createSustento = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const objeto = new Sustento({ name, status });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Sustento creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateSustento = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { sustentoId } = req.params;\r\n    try {\r\n        const query = await Sustento.findByIdAndUpdate(sustentoId, { name, status });\r\n        if (query) {\r\n            res.json({ message: 'Sustento actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Sustento a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteSustento = async(req, res) => {\r\n    const { sustentoId } = req.params;\r\n    try {\r\n        const query = await Sustento.findByIdAndDelete(sustentoId);\r\n        if (query) {\r\n            res.json({ message: 'Sustento eliminado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Sustento a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"sustento.controller.js"}