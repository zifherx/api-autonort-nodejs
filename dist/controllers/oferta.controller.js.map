{"version":3,"sources":["../../src/controllers/oferta.controller.js"],"names":["ofertaCtrl","getOneActivos","req","res","Oferta","find","estado","sort","codigo","populate","path","select","query","length","json","total","activos","status","message","console","log","getOneById","ofertaId","params","findById","oferta","getAll","ofertas","createOne","body","tipo","opcion","descripcion","moneda","monto","cantidad","accesorio","obj","Accesorio","name","$in","accesorioFound","map","a","_id","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Accesorio from \"../models/Accesorio\";\r\nimport Oferta from \"../models/Oferta\";\r\n\r\nconst ofertaCtrl = {};\r\n\r\nofertaCtrl.getOneActivos = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Oferta.find({ estado: true })\r\n        .sort({ codigo: 1 })\r\n        .populate({\r\n            path: 'accesorio',\r\n            select: 'categoria nombre status stock'\r\n        });\r\n\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({total:query.length, activos: query});\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen Ofertas activas\" });\r\n\t\t}\r\n\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.getOneById = async (req, res) => {\r\n\tconst { ofertaId } = req.params;\r\n\r\n\ttry {\r\n\t\tconst query = await Oferta.findById(ofertaId)\r\n        .populate({\r\n            path: 'accesorio',\r\n            select: 'categoria nombre status stock'\r\n        });\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ oferta: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe la Oferta\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Oferta.find()\r\n        .sort({ codigo: 1 })\r\n        .populate({\r\n            path: 'accesorio',\r\n            select: 'categoria nombre status stock'\r\n        });\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total: query.length, ofertas: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen ofertas\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.createOne = async (req, res) => {\r\n\tconst { codigo, tipo, opcion, descripcion, moneda, monto, cantidad, accesorio, estado } = req.body;\r\n\ttry {\r\n\t\tconst obj = new Oferta({\r\n\t\t\tcodigo,\r\n\t\t\ttipo,\r\n\t\t\topcion,\r\n\t\t\tdescripcion,\r\n\t\t\tmoneda,\r\n\t\t\tmonto,\r\n\t\t\tcantidad,\r\n\t\t\testado,\r\n\t\t});\r\n\r\n\t\tconst accesorioFound = await Accesorio.find({ name: { $in: accesorio } });\r\n\t\tobj.accesorio = accesorioFound.map((a) => a._id);\r\n\r\n\t\tconst query = await obj.save();\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Oferta creada con éxito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.updateOneById = async (req, res) => {\r\n\tconst { ofertaId } = req.params;\r\n\tconst { codigo, tipo, opcion, descripcion, moneda, monto, cantidad, accesorio, estado } = req.body;\r\n\r\n\ttry {\r\n\t\tconst accesorioFound = await Accesorio.find({ name: { $in: accesorio } });\r\n        if(!accesorioFound) return res.status(404).json({message: 'No existe el accesorio'});\r\n\r\n\t\tconst query = await Oferta.findByIdAndUpdate(ofertaId, {\r\n\t\t\tcodigo,\r\n\t\t\ttipo,\r\n\t\t\topcion,\r\n\t\t\tdescripcion,\r\n\t\t\tmoneda,\r\n\t\t\tmonto,\r\n\t\t\tcantidad,\r\n\t\t\taccesorio: accesorioFound.map(a => a._id),\r\n\t\t\testado,\r\n\t\t});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Oferta actualizada con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe Oferta a actualizar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.deleteOneById = async (req, res) => {\r\n\tconst { ofertaId } = req.params;\r\n\r\n\ttry {\r\n\t\tconst query = await Oferta.findByIdAndDelete(ofertaId);\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Oferta eliminada con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe Oferta a eliminar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default ofertaCtrl;\r\n"],"file":"oferta.controller.js"}