{"version":3,"file":"oferta.controller.js","names":["ofertaCtrl","getOneActivos","req","res","Oferta","find","estado","sort","codigo","populate","path","select","query","length","json","total","activos","status","message","console","log","getOneById","ofertaId","params","findById","oferta","getAll","ofertas","createOne","body","tipo","opcion","descripcion","moneda","monto","cantidad","accesorio","obj","Accesorio","name","$in","accesorioFound","map","a","_id","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/oferta.controller.js"],"sourcesContent":["import Accesorio from \"../models/Accesorio\";\r\nimport Oferta from \"../models/Oferta\";\r\n\r\nconst ofertaCtrl = {};\r\n\r\nofertaCtrl.getOneActivos = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Oferta.find({ estado: true })\r\n        .sort({ codigo: 1 })\r\n        .populate({\r\n            path: 'accesorio',\r\n            select: 'categoria nombre status stock'\r\n        });\r\n\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({total:query.length, activos: query});\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen Ofertas activas\" });\r\n\t\t}\r\n\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.getOneById = async (req, res) => {\r\n\tconst { ofertaId } = req.params;\r\n\r\n\ttry {\r\n\t\tconst query = await Oferta.findById(ofertaId)\r\n        .populate({\r\n            path: 'accesorio',\r\n            select: 'categoria nombre status stock'\r\n        });\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ oferta: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe la Oferta\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Oferta.find()\r\n        .sort({ codigo: 1 })\r\n        .populate({\r\n            path: 'accesorio',\r\n            select: 'categoria nombre status stock'\r\n        });\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total: query.length, ofertas: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen ofertas\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.createOne = async (req, res) => {\r\n\tconst { codigo, tipo, opcion, descripcion, moneda, monto, cantidad, accesorio, estado } = req.body;\r\n\ttry {\r\n\t\tconst obj = new Oferta({\r\n\t\t\tcodigo,\r\n\t\t\ttipo,\r\n\t\t\topcion,\r\n\t\t\tdescripcion,\r\n\t\t\tmoneda,\r\n\t\t\tmonto,\r\n\t\t\tcantidad,\r\n\t\t\testado,\r\n\t\t});\r\n\r\n\t\tconst accesorioFound = await Accesorio.find({ name: { $in: accesorio } });\r\n\t\tobj.accesorio = accesorioFound.map((a) => a._id);\r\n\r\n\t\tconst query = await obj.save();\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Oferta creada con éxito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.updateOneById = async (req, res) => {\r\n\tconst { ofertaId } = req.params;\r\n\tconst { codigo, tipo, opcion, descripcion, moneda, monto, cantidad, accesorio, estado } = req.body;\r\n\r\n\ttry {\r\n\t\tconst accesorioFound = await Accesorio.find({ name: { $in: accesorio } });\r\n        if(!accesorioFound) return res.status(404).json({message: 'No existe el accesorio'});\r\n\r\n\t\tconst query = await Oferta.findByIdAndUpdate(ofertaId, {\r\n\t\t\tcodigo,\r\n\t\t\ttipo,\r\n\t\t\topcion,\r\n\t\t\tdescripcion,\r\n\t\t\tmoneda,\r\n\t\t\tmonto,\r\n\t\t\tcantidad,\r\n\t\t\taccesorio: accesorioFound.map(a => a._id),\r\n\t\t\testado,\r\n\t\t});\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Oferta actualizada con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe Oferta a actualizar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nofertaCtrl.deleteOneById = async (req, res) => {\r\n\tconst { ofertaId } = req.params;\r\n\r\n\ttry {\r\n\t\tconst query = await Oferta.findByIdAndDelete(ofertaId);\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Oferta eliminada con éxito\" });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existe Oferta a eliminar\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default ofertaCtrl;\r\n"],"mappings":"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"}