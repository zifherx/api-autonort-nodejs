{"version":3,"sources":["../../src/controllers/operacion.controller.js"],"names":["getAll","req","res","Operacion","find","sort","name","query","length","json","status","message","console","log","getOperacionById","operacionId","params","findById","getOperacionActivos","createOperacion","body","save","newObj","updateOperacion","findByIdAndUpdate","deleteOperacion","aniooperacionIdId","findByIdAndDelete"],"mappings":";;;;;;;;;;;;;AAAA;;AAEO,IAAMA,MAAM;AAAA,qFAAG,iBAAMC,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEMC,mBAAUC,IAAV,GAAiBC,IAAjB,CAAsB;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAtB,CAFN;;AAAA;AAERC,YAAAA,KAFQ;;AAAA,kBAGVA,KAAK,CAACC,MAAN,GAAe,CAHL;AAAA;AAAA;AAAA;;AAIVN,YAAAA,GAAG,CAACO,IAAJ,CAASF,KAAT;AAJU;AAAA;;AAAA;AAAA,6CAMHL,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CANG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASdC,YAAAA,OAAO,CAACC,GAAR;AACAX,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,YAAIA;AAAf,aAArB;;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANX,MAAM;AAAA;AAAA;AAAA,GAAZ;;;;AAcA,IAAMc,gBAAgB;AAAA,sFAAG,kBAAMb,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBa,YAAAA,WADoB,GACJd,GAAG,CAACe,MADA,CACpBD,WADoB;AAAA;AAAA;AAAA,mBAGJZ,mBAAUc,QAAV,CAAmBF,WAAnB,CAHI;;AAAA;AAGlBR,YAAAA,KAHkB;;AAAA,iBAIpBA,KAJoB;AAAA;AAAA;AAAA;;AAKpBL,YAAAA,GAAG,CAACO,IAAJ,CAASF,KAAT;AALoB;AAAA;;AAAA;AAAA,8CAObL,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CAPa;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUxBC,YAAAA,OAAO,CAACC,GAAR;AACAX,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAXwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBG,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;;;AAeA,IAAMI,mBAAmB;AAAA,sFAAG,kBAAMjB,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEPC,mBAAUC,IAAV,CAAe;AAAEM,cAAAA,MAAM,EAAE;AAAV,aAAf,EAAqCL,IAArC,CAA0C;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAA1C,CAFO;;AAAA;AAErBC,YAAAA,KAFqB;;AAG3B,gBAAIA,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAsB;AAClBN,cAAAA,GAAG,CAACO,IAAJ,CAASF,KAAT;AACH,aAFD,MAEO;AACHL,cAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAArB;AACH;;AAP0B;AAAA;;AAAA;AAAA;AAAA;AAS3BC,YAAAA,OAAO,CAACC,GAAR;AACAX,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAV2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBO,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;;;AAcA,IAAMC,eAAe;AAAA,sFAAG,kBAAMlB,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACFD,GAAG,CAACmB,IADF,EACnBd,IADmB,aACnBA,IADmB,EACbI,MADa,aACbA,MADa;AAAA;AAGjBH,YAAAA,KAHiB,GAGT,IAAIJ,kBAAJ,CAAc;AAAEG,cAAAA,IAAI,EAAJA,IAAF;AAAQI,cAAAA,MAAM,EAANA;AAAR,aAAd,CAHS;AAAA;AAAA,mBAKFH,KAAK,CAACc,IAAN,EALE;;AAAA;AAKjBC,YAAAA,MALiB;;AAOvB,gBAAIA,MAAJ,EAAY;AACRpB,cAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACH;;AATsB;AAAA;;AAAA;AAAA;AAAA;AAWvBC,YAAAA,OAAO,CAACC,GAAR;AACAX,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAZuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfQ,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAgBA,IAAMI,eAAe;AAAA,sFAAG,kBAAMtB,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACFD,GAAG,CAACmB,IADF,EACnBd,IADmB,cACnBA,IADmB,EACbI,MADa,cACbA,MADa;AAEnBK,YAAAA,WAFmB,GAEHd,GAAG,CAACe,MAFD,CAEnBD,WAFmB;AAAA;AAAA;AAAA,mBAIHZ,mBAAUqB,iBAAV,CAA4BT,WAA5B,EAAyC;AAAET,cAAAA,IAAI,EAAJA,IAAF;AAAQI,cAAAA,MAAM,EAANA;AAAR,aAAzC,CAJG;;AAAA;AAIjBH,YAAAA,KAJiB;;AAMvB,gBAAIA,KAAJ,EAAW;AACPL,cAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAAT;AACH,aAFD,MAEO;AACHT,cAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,gBAAAA,OAAO,EAAE;AAAX,eAArB;AACH;;AAVsB;AAAA;;AAAA;AAAA;AAAA;AAYvBC,YAAAA,OAAO,CAACC,GAAR;AACAX,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAbuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfY,eAAe;AAAA;AAAA;AAAA,GAArB;;;;AAiBA,IAAME,eAAe;AAAA,sFAAG,kBAAMxB,GAAN,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBwB,YAAAA,iBADmB,GACGzB,GAAG,CAACe,MADP,CACnBU,iBADmB;AAAA;AAAA;AAAA,mBAGHvB,mBAAUwB,iBAAV,CAA4BZ,WAA5B,CAHG;;AAAA;AAGjBR,YAAAA,KAHiB;;AAAA,iBAInBA,KAJmB;AAAA;AAAA;AAAA;;AAKnBL,YAAAA,GAAG,CAACO,IAAJ,CAAS;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAAT;AALmB;AAAA;;AAAA;AAAA,8CAOZT,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE;AAAX,aAArB,CAPY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUvBC,YAAAA,OAAO,CAACC,GAAR;AACAX,YAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,OAAO,EAAE,aAAIA;AAAf,aAArB;;AAXuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfc,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import Operacion from \"../models/Operacion\";\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await Operacion.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Orígenes' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getOperacionById = async(req, res) => {\r\n    const { operacionId } = req.params;\r\n    try {\r\n        const query = await Operacion.findById(operacionId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Origen' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getOperacionActivos = async(req, res) => {\r\n    try {\r\n        const query = await Operacion.find({ status: \"Activo\" }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            res.status(404).json({ message: 'No existen Orígenes Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createOperacion = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const query = new Operacion({ name, status });\r\n\r\n        const newObj = await query.save();\r\n\r\n        if (newObj) {\r\n            res.json({ message: 'Origen creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateOperacion = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { operacionId } = req.params;\r\n    try {\r\n        const query = await Operacion.findByIdAndUpdate(operacionId, { name, status });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Origen actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Origen a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteOperacion = async(req, res) => {\r\n    const { aniooperacionIdId } = req.params;\r\n    try {\r\n        const query = await Operacion.findByIdAndDelete(operacionId);\r\n        if (query) {\r\n            res.json({ message: 'Origen eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Origen a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"operacion.controller.js"}