{"version":3,"file":"statusFile.controller.js","names":["getAll","req","res","StatusFile","find","sort","value","query","length","json","total","all","status","message","console","log","getStatusFileById","statusFileId","params","findById","one","getStatusFileByActivo","estado","total_active","all_active","createStatusFile","body","name","nuevo","save","updateStatusFile","findByIdAndUpdate","deleteStatusFile","findByIdAndDelete"],"sources":["../../src/controllers/statusFile.controller.js"],"sourcesContent":["import StatusFile from '../models/StatusFile'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await StatusFile.find().sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getStatusFileById = async(req, res) => {\r\n    const { statusFileId } = req.params\r\n    try {\r\n        const query = await StatusFile.findById(statusFileId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Estado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getStatusFileByActivo = async(req, res) => {\r\n    try {\r\n        const query = await StatusFile.find({ estado: true }).sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createStatusFile = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    try {\r\n        const nuevo = new StatusFile({ name, value, estado });\r\n        const query = await nuevo.save()\r\n        if (query) {\r\n            res.json({ message: 'Estado creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateStatusFile = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    const { statusFileId } = req.params;\r\n    try {\r\n        const query = await StatusFile.findByIdAndUpdate(statusFileId, { name, value, estado });\r\n        if (query) {\r\n            res.json({ message: 'Estado actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Estado a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteStatusFile = async(req, res) => {\r\n    const { statusFileId } = req.params;\r\n    try {\r\n        const query = await StatusFile.findByIdAndDelete(statusFileId);\r\n        if (query) {\r\n            res.json({ message: 'Estado eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Estado a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}"],"mappings":"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"}