{"version":3,"sources":["../../src/controllers/statusFile.controller.js"],"names":["getAll","req","res","StatusFile","find","sort","value","query","length","json","total","all","status","message","console","log","getStatusFileById","statusFileId","params","findById","one","getStatusFileByActivo","estado","total_active","all_active","createStatusFile","body","name","nuevo","save","updateStatusFile","findByIdAndUpdate","deleteStatusFile","findByIdAndDelete"],"mappings":"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","sourcesContent":["import StatusFile from '../models/StatusFile'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const query = await StatusFile.find().sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getStatusFileById = async(req, res) => {\r\n    const { statusFileId } = req.params\r\n    try {\r\n        const query = await StatusFile.findById(statusFileId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Estado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getStatusFileByActivo = async(req, res) => {\r\n    try {\r\n        const query = await StatusFile.find({ estado: true }).sort({ value: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createStatusFile = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    try {\r\n        const nuevo = new StatusFile({ name, value, estado });\r\n        const query = await nuevo.save()\r\n        if (query) {\r\n            res.json({ message: 'Estado creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateStatusFile = async(req, res) => {\r\n    const { name, value, estado } = req.body;\r\n    const { statusFileId } = req.params;\r\n    try {\r\n        const query = await StatusFile.findByIdAndUpdate(statusFileId, { name, value, estado });\r\n        if (query) {\r\n            res.json({ message: 'Estado actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Estado a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteStatusFile = async(req, res) => {\r\n    const { statusFileId } = req.params;\r\n    try {\r\n        const query = await StatusFile.findByIdAndDelete(statusFileId);\r\n        if (query) {\r\n            res.json({ message: 'Estado eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Estado a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}"],"file":"statusFile.controller.js"}