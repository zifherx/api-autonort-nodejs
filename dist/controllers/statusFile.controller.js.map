{"version":3,"sources":["../../src/controllers/statusFile.controller.js"],"names":["getAll","req","res","StatusFile","find","sort","value","objeto","length","json","status","message","console","log","getStatusFileById","statusFileId","params","findById","getStatusFileByActivo","createStatusFile","body","name","nuevo","save","updateStatusFile","findByIdAndUpdate","deleteStatusFile","findByIdAndDelete"],"mappings":"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","sourcesContent":["import StatusFile from '../models/StatusFile'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const objeto = await StatusFile.find().sort({ value: 'asc' });\r\n        if (objeto.length > 0) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getStatusFileById = async(req, res) => {\r\n    const { statusFileId } = req.params\r\n    try {\r\n        const objeto = await StatusFile.findById(statusFileId);\r\n        if (objeto) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Estado' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const getStatusFileByActivo = async(req, res) => {\r\n    try {\r\n        const objeto = await StatusFile.find({ status: true }).sort({ value: 'asc' });\r\n        if (objeto.length > 0) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Estados activos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const createStatusFile = async(req, res) => {\r\n    const { name, value, status } = req.body;\r\n    try {\r\n        const nuevo = new StatusFile({ name, value, status });\r\n        const objeto = await nuevo.save()\r\n        if (objeto) {\r\n            res.json({ message: 'Estado creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const updateStatusFile = async(req, res) => {\r\n    const { name, value, status } = req.body;\r\n    const { statusFileId } = req.params;\r\n    try {\r\n        const objeto = await StatusFile.findByIdAndUpdate(statusFileId, { name, value, status });\r\n        if (objeto) {\r\n            res.json({ message: 'Estado actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Estado a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteStatusFile = async(req, res) => {\r\n    const { statusFileId } = req.params;\r\n    try {\r\n        const objeto = await StatusFile.findByIdAndDelete(statusFileId);\r\n        if (objeto) {\r\n            res.json({ message: 'Estado eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Estado a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(503).json({ message: err.message });\r\n    }\r\n}"],"file":"statusFile.controller.js"}