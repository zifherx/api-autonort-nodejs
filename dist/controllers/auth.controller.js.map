{"version":3,"file":"auth.controller.js","names":["signIn","req","res","body","username","password","User","findOne","userFound","status","json","message","comparePassword","matchPassword","token","jwt","sign","id","_id","config","SECRET","expiresIn","findByIdAndUpdate","online","console","log","codigo","changePassword","locals","jwtPayload","oldPassword","newPassword","findById","user","encryptPassword","save","guardado","cerrarSesion","offline","forzarCierre","codUser","refreshToken","refreshTok","headers","refresh"],"sources":["../../src/controllers/auth.controller.js"],"sourcesContent":["import jwt from 'jsonwebtoken'\r\nimport config from '../config/config'\r\nimport User from '../models/User'\r\n\r\nexport const signIn = async(req, res) => {\r\n    const { username, password } = req.body;\r\n\r\n    const userFound = await User.findOne({ username });\r\n\r\n    if (!userFound) return res.status(404).json({ message: 'Usuario no existe' });\r\n\r\n    if (!userFound.status) return res.status(403).json({ message: 'Usuario inactivo' });\r\n\r\n    // if (userFound.online) return res.status(401).json({ message: 'Usuario ya se encuentra logueado' });\r\n\r\n    const matchPassword = await User.comparePassword(password, userFound.password);\r\n\r\n    if (!matchPassword) return res.status(403).json({ token: null, message: 'Contraseña Errónea' });\r\n\r\n    const token = jwt.sign({ id: userFound._id }, config.SECRET, { expiresIn: '48h' });\r\n\r\n    //Cambio de estado a online\r\n    await User.findByIdAndUpdate(userFound._id, { online: true });\r\n\r\n    console.log('Token:', token);\r\n\r\n    res.json({ token, codigo: userFound._id });\r\n}\r\n\r\nexport const changePassword = async(req, res) => {\r\n    const { id } = res.locals.jwtPayload;\r\n    const { oldPassword, newPassword } = req.body;\r\n    let user;\r\n\r\n    if (!(oldPassword && newPassword)) {\r\n        res.status(400).json({ message: 'Contraseña Anterior y Nueva Contraseña son necesarios' });\r\n    }\r\n\r\n    try {\r\n        user = await User.findById(id);\r\n    } catch (err) {\r\n        return res.status(404).json({ message: 'Usuario no existe' })\r\n    }\r\n\r\n    const matchPassword = await User.comparePassword(oldPassword, user.password);\r\n\r\n    if (!matchPassword) return res.status(401).json({ message: 'Contraseña actual errónea' });\r\n\r\n    try {\r\n        user.password = await User.encryptPassword(newPassword);\r\n\r\n        const guardado = await user.save();\r\n\r\n        if (guardado) {\r\n            res.json({ message: 'Contraseña actualizada con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const cerrarSesion = async(req, res) => {\r\n    const { id } = res.locals.jwtPayload;\r\n    try {\r\n        const userFound = await User.findById(id);\r\n\r\n        if (!userFound.online) return res.status(401).json({ message: 'No existe sesión abierta' });\r\n\r\n        const offline = await User.findByIdAndUpdate(id, { online: false });\r\n\r\n        if (offline) return res.json({ message: 'Sesión cerrada con éxito' });\r\n    } catch (err) {\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const forzarCierre = async(req, res) => {\r\n    const { username } = req.body;\r\n\r\n    try {\r\n        const userFound = await User.findOne({ username });\r\n\r\n        let codUser = userFound._id;\r\n\r\n        if (!userFound) return res.status(404).json({ message: 'Usuario no existe' });\r\n\r\n        if (!userFound.online) return res.status(401).json({ message: 'No existe sesión iniciada' });\r\n\r\n        const offline = await User.findByIdAndUpdate(codUser, { online: false });\r\n\r\n        if (offline) return res.json({ message: 'Se cerró la sesión de forma forzada' })\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\nexport const refreshToken = async(req, res) => {\r\n    const refreshTok = req.headers.refresh;\r\n\r\n    if (!refreshTok) res.status(400).json({ message: 'Algo salió mal' })\r\n\r\n\r\n}"],"mappings":"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"}