{"version":3,"sources":["../../src/controllers/aseguradora.controller.js"],"names":["getAll","req","res","Aseguradora","find","sort","name","objeto","length","json","status","message","console","log","getAseguradoraById","aseguradoraId","params","findById","getAseguradoraByActivo","createAseguradora","body","nuevo","save","updateAseguradora","findByIdAndUpdate","deleteAseguradora","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Aseguradora from '../models/Aseguradora'\r\n\r\nexport const getAll = async(req, res) => {\r\n    try {\r\n        const objeto = await Aseguradora.find().sort({ name: 'asc' })\r\n        if (objeto.length > 0) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Aseguradora' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAseguradoraById = async(req, res) => {\r\n    const { aseguradoraId } = req.params\r\n    try {\r\n        const objeto = await Aseguradora.findById(aseguradoraId)\r\n        if (objeto) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Aseguradora' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getAseguradoraByActivo = async(req, res) => {\r\n    try {\r\n        const objeto = await Aseguradora.find({ status: true }).sort({ name: 'asc' })\r\n        if (objeto.length > 0) {\r\n            res.json(objeto);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Aseguradora Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createAseguradora = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    try {\r\n        const nuevo = new Aseguradora({ name, status })\r\n        const objeto = await nuevo.save()\r\n        if (objeto) {\r\n            res.json({ message: 'Aseguradora creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateAseguradora = async(req, res) => {\r\n    const { name, status } = req.body;\r\n    const { aseguradoraId } = req.params;\r\n    try {\r\n        const objeto = await Aseguradora.findByIdAndUpdate(aseguradoraId, { name, status })\r\n        if (objeto) {\r\n            res.json({ message: 'Aseguradora actualizado con éxito' })\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Aseguradora a actualizar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteAseguradora = async(req, res) => {\r\n    const { aseguradoraId } = req.params;\r\n    try {\r\n        const objeto = await Aseguradora.findByIdAndDelete(aseguradoraId)\r\n        if (objeto) {\r\n            res.json({ message: 'Aseguradora eliminado con éxito' })\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Aseguradora a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"aseguradora.controller.js"}