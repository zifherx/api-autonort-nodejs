{"version":3,"sources":["../../src/controllers/entrega.controller.js"],"names":["entregaController","getAll","req","res","Entrega","find","sort","fecha_entrega","populate","path","select","query","length","json","total","all","status","message","console","log","createOne","body","observacion","tramite","hora_entrega","estadoEntrega","createdby","obj","Record","findById","mongoose","Types","ObjectId","tramiteFound","StatusEntrega","findOne","name","estadoFound","User","username","userFound","_id","createdBy","save"],"mappings":"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","sourcesContent":["import Entrega from \"../models/Entrega\";\r\nimport Record from \"../models/Record\";\r\nimport User from \"../models/User\";\r\nimport StatusEntrega from \"../models/StatusEntrega\";\r\nimport mongoose from \"mongoose\";\r\n\r\nconst entregaController = {};\r\n\r\nentregaController.getAll = async (req, res) => {\r\n\ttry {\r\n\t\tconst query = await Entrega.find()\r\n\t\t\t.sort({ fecha_entrega: -1 })\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"tramite\",\r\n\t\t\t\tselect: \"statusFile status_tarjeta status_placa sales\",\r\n\t\t\t\tpopulate: {\r\n\t\t\t\t\tpath: \"sales\",\r\n\t\t\t\t\tselect: \"vendedor cliente auto serie_tdp ubicacion_vehiculo fecha_entrega estatus_venta fecha_cancelacion estadoVentaE\",\r\n\t\t\t\t\tpopulate: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath: \"vendedor\",\r\n\t\t\t\t\t\t\tselect: \"name\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath: \"cliente\",\r\n\t\t\t\t\t\t\tselect: \"name\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath: \"auto\",\r\n\t\t\t\t\t\t\tselect: \"cod_tdp version model\",\r\n\t\t\t\t\t\t\tpopulate: {\r\n\t\t\t\t\t\t\t\tpath: \"model\",\r\n\t\t\t\t\t\t\t\tselect: \"name avatar\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath: \"estadoVentaE\",\r\n\t\t\t\t\t\t\tselect: \"name\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"estadoEntrega\",\r\n\t\t\t\tselect: \"name value\",\r\n\t\t\t})\r\n\t\t\t.populate({\r\n\t\t\t\tpath: \"createdBy\",\r\n\t\t\t\tselect: \"name\",\r\n\t\t\t});\r\n\r\n\t\tif (query.length > 0) {\r\n\t\t\tres.json({ total: query.length, all: query });\r\n\t\t} else {\r\n\t\t\treturn res.status(404).json({ message: \"No existen entregas\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nentregaController.createOne = async (req, res) => {\r\n\tconst { observacion, tramite, fecha_entrega, hora_entrega, estadoEntrega, createdby } = req.body;\r\n\t// console.log(req.body);\r\n\r\n\ttry {\r\n\t\tconst obj = new Entrega({ observacion, fecha_entrega, hora_entrega });\r\n\r\n\t\tconst tramiteFound = await Record.findById(new mongoose.Types.ObjectId(tramite));\r\n\t\tif (!tramiteFound) return res.status(404).json({ message: `Tramige ${tramite} no encontrado` });\r\n\r\n\t\tconst estadoFound = await StatusEntrega.findOne({ name: estadoEntrega });\r\n\t\tif (!estadoFound) return res.status(404).json({ message: `Estado ${estadoEntrega} no encontrado` });\r\n\r\n\t\tconst userFound = await User.findOne({ username: createdby });\r\n\t\tif (!userFound) return res.status(404).json({ message: `Usuario ${createdby} no encontrado` });\r\n\r\n\t\tobj.tramite = tramiteFound._id;\r\n\t\tobj.estadoEntrega = estadoFound._id;\r\n\t\tobj.createdBy = userFound._id;\r\n\r\n\t\t// console.log('OBJ:',obj);\r\n\r\n\t\tconst query = await obj.save();\r\n\r\n\t\tif (query) {\r\n\t\t\tres.json({ message: \"Entrega programada con Ã©xito\" });\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\treturn res.status(503).json({ message: err.message });\r\n\t}\r\n};\r\n\r\nexport default entregaController;\r\n"],"file":"entrega.controller.js"}