{"version":3,"sources":["../../src/controllers/tasador.controller.js"],"names":["getTasadores","req","res","Tasador","find","sort","name","query","length","json","status","message","console","log","getTasadorById","tasadorId","params","findById","getTasadorByActivo","createTasador","body","document","sucursal","objeto","save","updateTasador","findByIdAndUpdate","deleteTasador","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Tasador from \"../models/Tasador\";\r\n\r\nexport const getTasadores = async(req, res) => {\r\n    try {\r\n        const query = await Tasador.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Tasadores' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getTasadorById = async(req, res) => {\r\n    const { tasadorId } = req.params;\r\n    try {\r\n        const query = await Tasador.findById(tasadorId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Tasador' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getTasadorByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Tasador.find({ status: \"Activo\" }).sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No hay Tasadores Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createTasador = async(req, res) => {\r\n    const { name, document, sucursal, status } = req.body;\r\n    try {\r\n        const objeto = new Tasador({ name, document, sucursal, status });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Tasador creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateTasador = async(req, res) => {\r\n    const { name, document, sucursal, status } = req.body;\r\n    const { tasadorId } = req.params;\r\n    try {\r\n        const query = await Tasador.findByIdAndUpdate(tasadorId, { name, document, sucursal, status });\r\n        if (query) {\r\n            res.json({ message: 'Tasador actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Tasador a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteTasador = async(req, res) => {\r\n    const { tasadorId } = req.params;\r\n    try {\r\n        const query = await Tasador.findByIdAndDelete(tasadorId);\r\n        if (query) {\r\n            res.json({ message: 'Tasador eliminado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Tasador a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"tasador.controller.js"}