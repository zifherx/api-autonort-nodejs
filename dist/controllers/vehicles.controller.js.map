{"version":3,"sources":["../../src/controllers/vehicles.controller.js"],"names":["createVehicle","req","res","body","marca","cod_tdp","categoria","modelo","version","sucursal","empleado","newVehicle","Vehicle","User","find","username","$in","foundEmployee","map","em","_id","save","vehicleSaved","json","message","console","log","status","getVehicles","sort","vehicles","length","getVehicleById","vehicleId","params","findById","vehicle","getVehicleByCodigo","codigoAuto","findOne","carro","getVehiculeByMarca","query","getVehiculeByModelo","updateVehicleById","findByIdAndUpdate","b","updatedVehicle","deleteVehicleById","findByIdAndDelete","deletedVehicle"],"mappings":"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","sourcesContent":["import Vehicle from '../models/Vehicle'\r\nimport User from '../models/User'\r\n\r\nexport const createVehicle = async(req, res) => {\r\n    const { marca, cod_tdp, categoria, modelo, version, sucursal, empleado } = req.body;\r\n\r\n    try {\r\n        const newVehicle = new Vehicle({ marca, cod_tdp, categoria, modelo, version, sucursal });\r\n\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        newVehicle.empleado = foundEmployee.map(em => em._id);\r\n\r\n        //const foundCampaign = await Campaign.find({ name: { $in: campaign } });\r\n        //newVehicle.campaign = foundCampaign.map(campaign => campaign._id);\r\n\r\n        const vehicleSaved = await newVehicle.save();\r\n\r\n        if (vehicleSaved) {\r\n            res.json({ message: 'Vehículo creado con éxito' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n\r\n}\r\n\r\nexport const getVehicles = async(req, res) => {\r\n    try {\r\n        const vehicles = await Vehicle.find().sort({ cod_tdp: 'asc' });\r\n\r\n        if (vehicles.length > 0) {\r\n            res.json(vehicles);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen vehículos' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    try {\r\n        const vehicle = await Vehicle.findById(vehicleId);\r\n        if (vehicle) {\r\n            res.json(vehicle);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe el Vehículo' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getVehicleByCodigo = async(req, res) => {\r\n    const { codigoAuto } = req.body;\r\n    try {\r\n        const carro = await Vehicle.findOne({ cod_tdp: codigoAuto });\r\n        if (carro) {\r\n            res.json(carro);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe vehículo a mostrar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getVehiculeByMarca = async(req, res) => {\r\n    const { marca } = req.body;\r\n    try {\r\n        const query = await Vehicle.find({ marca });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Vehículos en esa Marca' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getVehiculeByModelo = async(req, res) => {\r\n    const { modelo } = req.body;\r\n    try {\r\n        const query = await Vehicle.find({ modelo });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Vehículos en ese Modelo' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    const { marca, cod_tdp, categoria, modelo, version, sucursal, empleado } = req.body;\r\n\r\n    try {\r\n        const foundEmployee = await User.find({ username: { $in: empleado } });\r\n        const updatedVehicle = await Vehicle.findByIdAndUpdate(vehicleId, { marca, cod_tdp, categoria, modelo, version, sucursal, empleado: foundEmployee.map(b => b._id) });\r\n        if (updatedVehicle) {\r\n            res.json({ message: 'Vehículo actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Vehículo a actualizar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    try {\r\n        const deletedVehicle = await Vehicle.findByIdAndDelete(vehicleId);\r\n        if (deletedVehicle) {\r\n            res.json({ message: 'Vehículo eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Vehículo a eliminar' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        res.status(409).json({ message: err.message })\r\n    }\r\n}"],"file":"vehicles.controller.js"}