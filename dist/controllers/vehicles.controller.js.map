{"version":3,"sources":["../../src/controllers/vehicles.controller.js"],"names":["createVehicle","req","res","body","marca","cod_tdp","categoria","modelo","version","sucursal","newVehicle","Vehicle","save","vehicleSaved","json","message","getVehicles","find","vehicles","getVehicleById","vehicleId","params","findById","vehicle","getVehicleByCodigo","codigoAuto","findOne","carro","status","updateVehicleById","findByIdAndUpdate","new","updatedVehicle","deleteVehicleById","findByIdAndRemove","deletedVehicle"],"mappings":"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","sourcesContent":["import Vehicle from '../models/Vehicle'\r\n\r\nexport const createVehicle = async(req, res) => {\r\n    const { marca, cod_tdp, categoria, modelo, version, sucursal } = req.body;\r\n\r\n    const newVehicle = new Vehicle({\r\n        marca,\r\n        cod_tdp,\r\n        categoria,\r\n        modelo,\r\n        version,\r\n        sucursal\r\n    });\r\n\r\n    //const foundCampaign = await Campaign.find({ name: { $in: campaign } });\r\n    //newVehicle.campaign = foundCampaign.map(campaign => campaign._id);\r\n\r\n    const vehicleSaved = await newVehicle.save();\r\n\r\n    res.json({ message: 'Vehículo creado con éxito' });\r\n}\r\n\r\nexport const getVehicles = async(req, res) => {\r\n    const vehicles = await Vehicle.find();\r\n    res.json(vehicles);\r\n}\r\n\r\nexport const getVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    const vehicle = await Vehicle.findById(vehicleId);\r\n    res.json(vehicle);\r\n\r\n}\r\n\r\nexport const getVehicleByCodigo = async(req, res) => {\r\n    try {\r\n        const { codigoAuto } = req.body;\r\n        const carro = await Vehicle.findOne({ cod_tdp: codigoAuto });\r\n        if (carro) {\r\n            res.json(carro);\r\n        } else {\r\n            return res.status(201).json({ message: 'No existe vehículo a mostrar' });\r\n        }\r\n    } catch (e) {\r\n        return res.status(403).json({ message: 'No Autorizado' });\r\n    }\r\n}\r\n\r\nexport const updateVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    const { marca, cod_tdp, categoria, modelo, version, sucursal } = req.body;\r\n\r\n    //Campaign\r\n    //const foundCampaign = await Campaign.find({ name: { $in: campaign } });\r\n\r\n    try {\r\n\r\n        const updatedVehicle = await Vehicle.findByIdAndUpdate(vehicleId, { marca, cod_tdp, categoria, modelo, version, sucursal }, { new: true });\r\n\r\n        if (updatedVehicle) {\r\n            res.json({ message: 'Vehículo actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'Vehículo ya modificado' })\r\n        }\r\n\r\n    } catch (err) {\r\n        res.status(403).json({ message: 'Vehículo no existe' })\r\n    }\r\n}\r\n\r\nexport const deleteVehicleById = async(req, res) => {\r\n    const { vehicleId } = req.params;\r\n    const deletedVehicle = await Vehicle.findByIdAndRemove(vehicleId);\r\n    if (deletedVehicle) {\r\n        res.json({ message: 'Vehículo eliminado con éxito' });\r\n    }\r\n}"],"file":"vehicles.controller.js"}