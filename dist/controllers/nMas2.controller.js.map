{"version":3,"file":"nMas2.controller.js","names":["controller","getAll","req","res","nMas2","find","sort","name","query","length","json","total","all","status","message","console","log","getAllActive","estado","getOneById","itemId","params","findById","one","createOne","body","fecha","mes","anio","newObj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndRemove"],"sources":["../../src/controllers/nMas2.controller.js"],"sourcesContent":["import nMas2 from \"../models/nMas2\";\r\n\r\nconst controller = {};\r\n\r\ncontroller.getAll = async (req, res) => {\r\n    try {\r\n        const query = await nMas2.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existen items\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\ncontroller.getAllActive = async (req, res) => {\r\n    try {\r\n        const query = await nMas2.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({ total: query.length, all: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existen items activos\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\ncontroller.getOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n    try {\r\n        const query = await nMas2.findById(itemId);\r\n        if (query) {\r\n            res.json({ one: query });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe item\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\ncontroller.createOne = async (req, res) => {\r\n    const { name, fecha, mes, anio, estado } = req.body;\r\n\r\n    try {\r\n        const newObj = new nMas2({ name, fecha, mes, anio, estado });\r\n\r\n        const query = await newObj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: \"Item creado con éxito\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\ncontroller.updateOneById = async (req, res) => {\r\n    const { name, fecha, mes, anio, estado } = req.body;\r\n    const { itemId } = req.params;\r\n    try {\r\n        const query = await nMas2.findByIdAndUpdate(itemId, { name, fecha, mes, anio, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: \"Item actualizado con éxito\" });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe item a actualizar\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\ncontroller.deleteOneById = async (req, res) => {\r\n    const { itemId } = req.params;\r\n    try {\r\n        const query = await nMas2.findByIdAndRemove(itemId);\r\n        if (query) {\r\n            res.json({ message: \"Item eliminado con éxito\" });\r\n        } else {\r\n            return res.status(404).json({ message: \"No existe item a eliminar\" });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n};\r\n\r\nexport default controller;\r\n"],"mappings":"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"}