{"version":3,"file":"tipoCampania.controller.js","names":["tipoCampaniaCtrl","getAll","req","res","TipoCampania","find","sort","name","query","length","json","total","all","status","message","console","log","getOneById","tcampaniaId","params","findById","one","getAllActivos","estado","total_active","all_active","createOne","body","obj","save","updateOneById","findByIdAndUpdate","deleteOneById","findByIdAndDelete"],"sources":["../../src/controllers/tipoCampania.controller.js"],"sourcesContent":["import TipoCampania from \"../models/TipoCampania\";\r\n\r\nconst  tipoCampaniaCtrl = {};\r\n\r\ntipoCampaniaCtrl.getAll = async(req, res) => {\r\n    try {\r\n        const query = await TipoCampania.find().sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen tipos de campañas' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntipoCampaniaCtrl.getOneById = async(req, res) => {\r\n    const { tcampaniaId } = req.params;\r\n    try {\r\n        const query = await TipoCampania.findById(tcampaniaId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de campaña' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntipoCampaniaCtrl.getAllActivos = async(req, res) => {\r\n    try {\r\n        const query = await TipoCampania.find({ estado: true }).sort({ name: 1 });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen tipos de campañas activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message });\r\n    }\r\n}\r\n\r\ntipoCampaniaCtrl.createOne = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const obj = new TipoCampania({ name, estado });\r\n\r\n        const query = await obj.save();\r\n\r\n        if (query) {\r\n            res.json({ message: 'Tipo de campaña creada con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntipoCampaniaCtrl.updateOneById = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { tcampaniaId } = req.params;\r\n    try {\r\n        const query = await TipoCampania.findByIdAndUpdate(tcampaniaId, { name, estado });\r\n\r\n        if (query) {\r\n            res.json({ message: 'Tipo de campaña actualizada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de campaña a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\ntipoCampaniaCtrl.deleteOneById = async(req, res) => {\r\n    const { tcampaniaId } = req.params;\r\n    try {\r\n        const query = await TipoCampania.findByIdAndDelete(tcampaniaId);\r\n        if (query) {\r\n            res.json({ message: 'Tipo de campaña eliminada con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe tipo de campaña a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport default tipoCampaniaCtrl;"],"mappings":"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"}