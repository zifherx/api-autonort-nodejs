{"version":3,"sources":["../../src/controllers/financiamiento.controller.js"],"names":["getFinanciamientos","req","res","Financiamiento","find","sort","name","query","length","json","status","message","console","log","getFinanciamientoById","financiamientoId","params","findById","returnres","getFinanciamientoByActivo","estado","createFinanciamiento","body","objeto","save","updateFinanciamiento","findByIdAndUpdate","deleteFinanciamiento","findByIdAndDelete"],"mappings":"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","sourcesContent":["import Financiamiento from \"../models/Financiamiento\";\r\n\r\nexport const getFinanciamientos = async(req, res) => {\r\n    try {\r\n        const query = await Financiamiento.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Financiamientos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getFinanciamientoById = async(req, res) => {\r\n    const { financiamientoId } = req.params;\r\n    try {\r\n        const query = await Financiamiento.findById(financiamientoId);\r\n        if (query) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Financiamiento' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        returnres.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getFinanciamientoByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Financiamiento.find({ estado: true }).sort({ name: \"asc\" });\r\n        if (query.length > 0) {\r\n            res.json(query);\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Financiamientos Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createFinanciamiento = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const objeto = new Financiamiento({ name, estado });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Financiamiento creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateFinanciamiento = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { financiamientoId } = req.params;\r\n    try {\r\n        const query = await Financiamiento.findByIdAndUpdate(financiamientoId, { name, estado });\r\n        if (query) {\r\n            res.json({ message: 'Financiamiento actualizado con éxito' });\r\n        } else {\r\n            res.status(404).json({ message: 'No existe Financiamiento a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteFinanciamiento = async(req, res) => {\r\n    const { financiamientoId } = req.params;\r\n    try {\r\n        const query = await Financiamiento.findByIdAndDelete(financiamientoId);\r\n\r\n        if (query) {\r\n            res.json({ message: 'Financiamiento eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Financiamiento a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"file":"financiamiento.controller.js"}