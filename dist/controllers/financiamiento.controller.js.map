{"version":3,"file":"financiamiento.controller.js","names":["getFinanciamientos","req","res","Financiamiento","find","sort","name","query","length","json","total","all","status","message","console","log","getFinanciamientoById","financiamientoId","params","findById","one","getFinanciamientoByActivo","estado","total_active","all_active","createFinanciamiento","body","objeto","save","updateFinanciamiento","findByIdAndUpdate","deleteFinanciamiento","findByIdAndDelete"],"sources":["../../src/controllers/financiamiento.controller.js"],"sourcesContent":["import Financiamiento from \"../models/Financiamiento\";\r\n\r\nexport const getFinanciamientos = async(req, res) => {\r\n    try {\r\n        const query = await Financiamiento.find().sort({ name: 'asc' });\r\n        if (query.length > 0) {\r\n            res.json({total: query.length, all: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Financiamientos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getFinanciamientoById = async(req, res) => {\r\n    const { financiamientoId } = req.params;\r\n    try {\r\n        const query = await Financiamiento.findById(financiamientoId);\r\n        if (query) {\r\n            res.json({one: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Financiamiento' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const getFinanciamientoByActivo = async(req, res) => {\r\n    try {\r\n        const query = await Financiamiento.find({ estado: true }).sort({ name: \"asc\" });\r\n        if (query.length > 0) {\r\n            res.json({total_active: query.length, all_active: query});\r\n        } else {\r\n            return res.status(404).json({ message: 'No existen Financiamientos Activos' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const createFinanciamiento = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    try {\r\n        const objeto = new Financiamiento({ name, estado });\r\n        const query = await objeto.save();\r\n        if (query) {\r\n            res.json({ message: 'Financiamiento creado con éxito' })\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const updateFinanciamiento = async(req, res) => {\r\n    const { name, estado } = req.body;\r\n    const { financiamientoId } = req.params;\r\n    try {\r\n        const query = await Financiamiento.findByIdAndUpdate(financiamientoId, { name, estado });\r\n        if (query) {\r\n            res.json({ message: 'Financiamiento actualizado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Financiamiento a actualizar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}\r\n\r\nexport const deleteFinanciamiento = async(req, res) => {\r\n    const { financiamientoId } = req.params;\r\n    try {\r\n        const query = await Financiamiento.findByIdAndDelete(financiamientoId);\r\n\r\n        if (query) {\r\n            res.json({ message: 'Financiamiento eliminado con éxito' });\r\n        } else {\r\n            return res.status(404).json({ message: 'No existe Financiamiento a eliminar' });\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        return res.status(503).json({ message: err.message })\r\n    }\r\n}"],"mappings":"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"}